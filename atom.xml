<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>K. Chen</title>
  <subtitle>硅基生命实验室的学术渣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kchen.cc/"/>
  <updated>2016-11-04T05:49:48.000Z</updated>
  <id>http://kchen.cc/</id>
  
  <author>
    <name>Kun Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Media Plugin Owl</title>
    <link href="http://kchen.cc/2016/11/03/hexo-plugin-owl/"/>
    <id>http://kchen.cc/2016/11/03/hexo-plugin-owl/</id>
    <published>2016-11-04T05:46:02.000Z</published>
    <updated>2016-11-04T05:49:48.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>An useful media tag for <a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 3.x, <a href="http://m80126colin.github.io/hexo-tag-owl-demo/" target="_blank" rel="external">Demo page</a></p>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li>Various videos and images sources embedding</li>
<li>Support videos website<ul>
<li><a href="https://www.youtube.com/" target="_blank" rel="external">Youtube</a></li>
<li><a href="http://www.nicovideo.jp/" target="_blank" rel="external">Niconico</a></li>
<li><a href="http://www.bilibili.com/" target="_blank" rel="external">Bilibili</a></li>
<li><a href="https://vimeo.com/" target="_blank" rel="external">Vimeo</a></li>
<li><a href="http://www.tudou.com/" target="_blank" rel="external">Tudou</a></li>
<li><a href="http://www.youku.com/" target="_blank" rel="external">Youku</a></li>
<li><a href="http://v.qq.com/" target="_blank" rel="external">Tencent</a></li>
</ul>
</li>
<li>Support images sources<ul>
<li>Local images</li>
<li><a href="http://giphy.com/" target="_blank" rel="external">Giphy</a></li>
</ul>
</li>
<li>Auto stylesheet embedding</li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Run the following command in the root directory of hexo:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-tag-owl --save</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><h3 id="Component-Concept"><a href="#Component-Concept" class="headerlink" title="Component Concept"></a>Component Concept</h3><p>All components are wrapped by a <code>&lt;div&gt;</code> tag with several classes. All components have at least one class <code>.owl-media</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;owl-media&quot;&gt;[component]&lt;/div&gt;</div></pre></td></tr></table></figure>
<h3 id="Auto-Stylesheet-Embedding"><a href="#Auto-Stylesheet-Embedding" class="headerlink" title="Auto Stylesheet Embedding"></a>Auto Stylesheet Embedding</h3><p>Because the components are lack of CSS, everyone can add some CSS for one’s preference. Here provide a default CSS written in stylus at <code>lib/asset/css.styl</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">owl:</div><div class="line">  css: default</div><div class="line">  file: owl.css</div></pre></td></tr></table></figure>
<ul>
<li><strong>css</strong>: whether insert default stylesheet or not, with following values<ul>
<li><code>default</code>: use default stylesheet at <code>lib/asset/css.styl</code></li>
<li><code>custom</code>: use custom stylesheet with path at <strong>file</strong></li>
<li><code>none</code>: unable this feature</li>
<li>default values: <code>none</code></li>
</ul>
</li>
<li><strong>file</strong>: assign the path of stylesheet when <strong>css</strong> is not <code>none</code>, and default value is <code>owl.css</code></li>
</ul>
<h2 id="Videos"><a href="#Videos" class="headerlink" title="Videos"></a>Videos</h2><p>Every components of this category have additional class <code>.owl-video</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;owl-media owl-video&quot;&gt;[component]&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>Each videos source will add additional class <code>.owl-[source]</code>:</p>
<ul>
<li>Youtube: <code>.owl-youtube</code></li>
<li>Niconico: <code>.owl-niconico</code></li>
<li>Bilibili: <code>.owl-bilibili</code></li>
<li>Vimeo: <code>.owl-vimeo</code></li>
<li>Tudou: <code>.owl-tudou</code></li>
<li>Youku: <code>.owl-youku</code></li>
<li>Tencent: <code>.owl-tencent</code></li>
</ul>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;% owl youtube youtube_id %&#125;</div><div class="line">&#123;% owl niconico niconico_id [type] %&#125;</div><div class="line">&#123;% owl bilibili bilibili_id [page] %&#125;</div><div class="line">&#123;% owl vimeo vimeo_id %&#125;</div><div class="line">&#123;% owl tudou tudou_id %&#125;</div><div class="line">&#123;% owl youku youku_id %&#125;</div><div class="line">&#123;% owl tencent tencent_id %&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong>youtube_id</strong> - video id on Youtube</li>
<li><strong>vimeo_id</strong> - video id in Vimeo.</li>
<li>Niconico<ul>
<li><strong>niconico_id</strong> - video id in Niconico.</li>
<li><strong>type</strong> - embeded type. There are only <code>thumb</code> and <code>watch</code> two options. Default is set as <code>thumb</code>.<ul>
<li><code>thumb</code>: set nico in thumb mode with extra class <code>.niconico-thumb</code></li>
<li><code>watch</code>: set nico in watch mode with extra class <code>.niconico-watch</code></li>
</ul>
</li>
</ul>
</li>
<li>Bilibili<ul>
<li><strong>bilibili_id</strong> - video id in Bilibili. You can use either <code>av247371</code> or <code>247371</code>.</li>
<li><strong>page</strong> - if video have several clips, you can add a number indicated the video.</li>
</ul>
</li>
<li><strong>tudou_id</strong> - video id in Tudou.</li>
<li><strong>youku_id</strong> - video id in Youku. You can use either <code>id_XMTc3MzcxMjQw</code> or <code>XMTc3MzcxMjQw</code>.</li>
<li><strong>tencent_id</strong> - video id in Tencent Video.</li>
</ul>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;% owl youtube YtuAOT_c2EA %&#125;</div><div class="line">&#123;% owl niconico sm1494658 %&#125;</div><div class="line">&#123;% owl niconico sm1494658 watch %&#125;</div><div class="line">&#123;% owl bilibili av247371 %&#125;</div><div class="line">&#123;% owl bilibili 247371 %&#125;</div><div class="line">&#123;% owl bilibili av367901 2 %&#125;</div><div class="line">&#123;% owl vimeo 5566538 %&#125;</div><div class="line">&#123;% owl tudou pRsx83aRLLs %&#125;</div><div class="line">&#123;% owl youku id_XMTc3MzcxMjQw %&#125;</div><div class="line">&#123;% owl tencent o03134mlm8j %&#125;</div></pre></td></tr></table></figure>
<h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><p>Every components of this category have additional class <code>.owl-image</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;owl-media owl-image&quot;&gt;[component]&lt;/div&gt;</div></pre></td></tr></table></figure>
<h3 id="Local-Images"><a href="#Local-Images" class="headerlink" title="Local Images"></a>Local Images</h3><p>Insert your image from blog\’s path.</p>
<h4 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% owl local image_path %&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong>image_path</strong> - relative path from your blog.</li>
</ul>
<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% owl local img/img.jpg %&#125;</div><div class="line">&#123;% owl local another-img.gif %&#125;</div></pre></td></tr></table></figure>
<h3 id="Giphy"><a href="#Giphy" class="headerlink" title="Giphy"></a>Giphy</h3><p>Insert your gif from Giphy.</p>
<h4 id="Usage-2"><a href="#Usage-2" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% owl giphy giphy_id %&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong>giphy_id</strong> - giphy id</li>
</ul>
<h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% owl giphy AxqJJOBkWHXW %&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;An useful media tag for &lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; 3.x, &lt;a href=&quot;http://m80126colin.github.io/hexo-tag-owl-demo/&quot;&gt;Demo page&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Features&quot;&gt;&lt;a href=&quot;#Features&quot; class=&quot;headerlink&quot; title=&quot;Features&quot;&gt;&lt;/a&gt;Features&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Various videos and images sources embedding&lt;/li&gt;
&lt;li&gt;Support videos website&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/&quot;&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nicovideo.jp/&quot;&gt;Niconico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bilibili.com/&quot;&gt;Bilibili&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vimeo.com/&quot;&gt;Vimeo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tudou.com/&quot;&gt;Tudou&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.youku.com/&quot;&gt;Youku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://v.qq.com/&quot;&gt;Tencent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Support images sources&lt;ul&gt;
&lt;li&gt;Local images&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://giphy.com/&quot;&gt;Giphy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Auto stylesheet embedding&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;Run the following command in the root directory of hexo:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-tag-owl --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://kchen.cc/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Vim编辑器实用基础</title>
    <link href="http://kchen.cc/2016/04/17/vim-tutorial/"/>
    <id>http://kchen.cc/2016/04/17/vim-tutorial/</id>
    <published>2016-04-17T20:26:00.000Z</published>
    <updated>2016-06-16T14:25:26.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>教程整理自<a href="http://www.shiyanlou.com" target="_blank" rel="external">实验楼</a>Edward讲师的课程。</p>
</blockquote>
<p>首先Vim按键速查卡镇楼：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/vim_cheat_sheet_for_programmers_print.png-1920.jpg" alt="Key"> </p>
<p>不喜欢看文字的同学可接通过下面这个游戏直接学习Vim（我还没通关，后面似乎要付费了😂）：</p>
<p><a href="http://vim-adventures.com" target="_blank" rel="external">Vim Adventures</a></p>
<p><img src="http://coolshell.cn//wp-content/uploads/2012/04/vimadventuresgamefun.jpg" alt="Vim Adventures"></p>
<hr>
<h2 id="核心用法"><a href="#核心用法" class="headerlink" title="核心用法"></a>核心用法</h2><p>我把Vim的核心用法总结为移动、跳转、插入、删除、复制、粘贴、撤销、查找、打开、保存、退出。只要掌握了这几个，就可以进行简单的编辑了，所以：</p>
<a id="more"></a>
<h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h3><p><code>h</code>，<code>j</code>，<code>k</code>，<code>l</code> 分别负责左、下、上、右的光标移动。（方向键也可以使用）<code>w</code>前进一个单词，<code>b</code>后退一个单词。</p>
<h3 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h3><ul>
<li><code>gg</code>跳到第一行</li>
<li><code>G</code>跳到最后一行</li>
<li><code>5G</code>跳到第5行（<code>:set nu</code>打开行号）</li>
</ul>
<h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><ul>
<li><code>i</code>在光标后插入文本，此时可以正常编辑，编辑完后按<code>ESC</code>退出插入模式。</li>
<li><code>o</code>（小写字母）在光标行后插入新行，编辑。</li>
<li><code>O</code>（大写字母）在光标行前插入新行，编辑。</li>
</ul>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul>
<li><code>x</code>删除光标处</li>
<li><code>dd</code>删除光标行</li>
<li><code>5x</code>删除5个字符</li>
<li><code>5dd</code>删除5行</li>
<li><code>dw</code>删除光标处的单词</li>
</ul>
<h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><ul>
<li><code>y</code>复制光标</li>
<li><code>yy</code>复制当前行</li>
</ul>
<h3 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h3><ul>
<li><code>p</code>粘贴至光标后</li>
</ul>
<h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><ul>
<li><code>u</code>撤销</li>
<li><code>u{5}</code>撤销5步</li>
</ul>
<h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><ul>
<li><code>/str</code>查找字符串str</li>
<li><code>n</code>查找下一个str</li>
<li><code>?str</code>向上查找字符串str</li>
<li><code>N</code>查找上一个出现的str</li>
</ul>
<h3 id="打开"><a href="#打开" class="headerlink" title="打开"></a>打开</h3><p><code>:e newfile</code> 打开新文件newfile</p>
<h3 id="保存退出"><a href="#保存退出" class="headerlink" title="保存退出"></a>保存退出</h3><ul>
<li><code>:w</code>保存</li>
<li><code>:w!</code>强制保存</li>
<li><code>:q</code>退出</li>
<li><code>:q!</code>强制推出</li>
<li><code>:wq</code>保存后退出</li>
<li><code>:wq!</code>强制保存后退出</li>
</ul>
<p>之后我们再来系统地看看Vim的使用。</p>
<hr>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="Vim的基本模式"><a href="#Vim的基本模式" class="headerlink" title="Vim的基本模式"></a>Vim的基本模式</h3><p>Vim具有6种基本模式和5种派生模式，我们这里只简单介绍下6种基本模式：</p>
<blockquote>
<ul>
<li>普通模式(Normal mode)</li>
</ul>
</blockquote>
<p>在普通模式中，用的编辑器命令，比如移动光标，删除文本等等。这也是Vim启动后的默认模式。这正好和许多新用户期待的操作方式相反（大多数编辑器默认模式为插入模式）。</p>
<p>Vim强大的编辑能来自于其普通模式命令。普通模式命令往往需要一个操作符结尾。例如普通模式命令<code>dd</code>删除当前行，但是第一个”<code>d</code>“的后面可以跟另外的移动命令来代替第二个<code>d</code>，比如用移动到下一行的”<code>j</code>“键就可以删除当前行和下一行。另外还可以指定命令重复次数，<code>2dd</code>（重复<code>dd</code>两次），和<code>dj</code>的效果是一样的。用户学习了各种各样的文本间移动／跳转的命令和其他的普通模式的编辑命令，并且能够灵活组合使用的话，能够比那些没有模式的编辑器更加高效的进行文本编辑。</p>
<p>在普通模式中，有很多方法可以进入插入模式。比较普通的方式是按<code>a</code>（append／追加）键或者<code>i</code>（insert／插入）键。</p>
<blockquote>
<ul>
<li>插入模式(Insert mode)</li>
</ul>
</blockquote>
<p>在这个模式中，大多数按键都会向文本缓冲中插入文本。大多数新用户希望文本编辑器编辑过程中一直保持这个模式。</p>
<p>在插入模式中，可以按ESC键回到普通模式。</p>
<blockquote>
<ul>
<li>命令行模式(Command line mode)</li>
</ul>
</blockquote>
<p>在命令行模式中可以输入会被解释成并执行的文本。例如执行命令（<code>:</code>键），搜索（<code>/</code>和<code>?</code>键）或者过滤命令（<code>!</code>键）。在命令执行之后，Vim返回到命令行模式之前的模式，通常是普通模式。</p>
<blockquote>
<ul>
<li>可视模式(Visual mode)</li>
</ul>
</blockquote>
<p>这个模式与普通模式比较相似。但是移动命令会扩大高亮的文本区域。高亮区域可以是字符、行或者是一块文本。当执行一个非移动命令时，命令会被执行到这块高亮的区域上。Vim的”文本对象”也能和移动命令一样用在这个模式中。</p>
<blockquote>
<ul>
<li>选择模式(Select mode)</li>
</ul>
</blockquote>
<p>这个模式和无模式编辑器的行为比较相似（Windows标准文本控件的方式）。这个模式中，可以用鼠标或者光标键高亮选择文本，不过输入任何字符的话，Vim会用这个字符替换选择的高亮文本块，并且自动进入插入模式。</p>
<blockquote>
<ul>
<li>Ex模式(Ex mode)</li>
</ul>
</blockquote>
<p>这和命令行模式比较相似，在使用<code>:visual</code>命令离开Ex模式前，可以一次执行多条命令。</p>
<p>这其中我们常用到就是普通模式、插入模式和命令行模式，本文也只涉及这三个常用模式的内容。</p>
<h3 id="基本模式的切换"><a href="#基本模式的切换" class="headerlink" title="基本模式的切换"></a>基本模式的切换</h3><p>vim启动进入普通模式，处于插入模式或命令行模式时只需要按<code>Esc</code>或者<code>Ctrl+[</code>即可进入普通模式。普通模式中按<code>i</code>（Insert插入）或<code>a</code>（Append附加）键都可以进入插入模式，普通模式中按<code>:</code>进入命令行模式。命令行模式中输入<code>wq</code>回车后保存并退出vim。</p>
<p><img src="https://dn-anything-about-doc.qbox.me/md041716vim.gif" alt="模式切换"></p>
<h3 id="Vim中的操作"><a href="#Vim中的操作" class="headerlink" title="Vim中的操作"></a>Vim中的操作</h3><blockquote>
<ul>
<li>进入Vim</li>
</ul>
</blockquote>
<p>在终端中<code>vim</code>后面加上你要打开的已存在的文件名或者不存在（则作为新建文件）的文件名：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim practice_1.txt</div></pre></td></tr></table></figure>
<p>直接使用<code>vim</code>也可以打开Vim编辑器，但是不会打开任何文件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim</div></pre></td></tr></table></figure>
<p>进入命令行模式后输入<code>:e</code> 文件路径 同样可以打开相应文件。</p>
<blockquote>
<ul>
<li>三种模式的切换</li>
</ul>
</blockquote>
<p>在进入Vim后，按下<code>i</code>键进入插入模式。在该模式下您可以输入文本信息,下面请输入如下三行信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">12345678</div><div class="line">abcdefghijk</div><div class="line">helloVim</div></pre></td></tr></table></figure>
<p>按<code>Esc</code>进入普通模式，在该模式下使用方向键或者<code>h</code>,<code>j</code>,<code>k</code>,<code>l</code>键可以移动游标。</p>
<table>
<thead>
<tr>
<th>按键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>h</code></td>
<td>左</td>
</tr>
<tr>
<td><code>l</code></td>
<td>右（小写L）</td>
</tr>
<tr>
<td><code>j</code></td>
<td>下</td>
</tr>
<tr>
<td><code>k</code></td>
<td>上</td>
</tr>
<tr>
<td><code>w</code></td>
<td>移动到下一个单词</td>
</tr>
<tr>
<td><code>b</code></td>
<td>移动到上一个单词</td>
</tr>
</tbody>
</table>
<blockquote>
<ul>
<li>插入模式</li>
</ul>
</blockquote>
<p>在普通模式下使用下面的键将进入插入模式，并可以从相应的位置开始输入:</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>i</code></td>
<td>在当前光标处进行编辑</td>
</tr>
<tr>
<td><code>I</code></td>
<td>在行首插入</td>
</tr>
<tr>
<td><code>A</code></td>
<td>在行末插入</td>
</tr>
<tr>
<td><code>a</code></td>
<td>在光标后插入编辑</td>
</tr>
<tr>
<td><code>o</code></td>
<td>在当前行后插入一个新行</td>
</tr>
<tr>
<td><code>O</code></td>
<td>在当前行前插入一个新行</td>
</tr>
<tr>
<td><code>cw</code></td>
<td>替换从光标所在位置后到一个单词结尾的字符</td>
</tr>
</tbody>
</table>
<blockquote>
<ul>
<li>保存和退出</li>
</ul>
</blockquote>
<p>从普通模式输入<code>:</code>进入命令行模式，输入<code>w</code>回车，保存文档。输入<code>:w</code> 文件名可以将文档另存为其他文件名或存到其它路径下。</p>
<p>从普通模式输入<code>:</code>进入命令行模式，输入<code>wq</code>回车，<strong>保存并退出编辑</strong>，以下为其它几种退出方式：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:q!</code></td>
<td>强制退出，不保存</td>
</tr>
<tr>
<td><code>:q</code></td>
<td>退出</td>
</tr>
<tr>
<td><code>:wq!</code></td>
<td>强制保存并退出</td>
</tr>
<tr>
<td><code>:w &lt;文件路径&gt;</code></td>
<td>另存为</td>
</tr>
<tr>
<td><code>:saveas 文件路径</code></td>
<td>另存为</td>
</tr>
<tr>
<td><code>:x</code></td>
<td><strong>保存并退出</strong></td>
</tr>
<tr>
<td><code>:wq</code></td>
<td>保存并退出</td>
</tr>
</tbody>
</table>
<p>普通模式下输入<code>Shift+zz</code>即可保存退出Vim。</p>
<blockquote>
<ul>
<li>删除文本</li>
</ul>
</blockquote>
<p>进入普通模式，使用下列命令可以进行文本快速删除：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>x</code></td>
<td>删除游标所在的字符</td>
</tr>
<tr>
<td><code>X</code></td>
<td>删除游标所在前一个字符</td>
</tr>
<tr>
<td><code>Delete</code></td>
<td>同<code>x</code></td>
</tr>
<tr>
<td><code>dd</code></td>
<td>删除整行</td>
</tr>
<tr>
<td><code>dw</code></td>
<td>删除一个单词（不适用中文）</td>
</tr>
<tr>
<td><code>d$</code>或<code>D</code></td>
<td>删除至行尾</td>
</tr>
<tr>
<td><code>d^</code></td>
<td>删除至行首</td>
</tr>
<tr>
<td><code>dG</code></td>
<td>删除到文档结尾处</td>
</tr>
<tr>
<td><code>d1G</code></td>
<td>删至文档首部</td>
</tr>
</tbody>
</table>
<p>除此之外，你还可以在命令之前加上数字，表示一次删除多行，如：</p>
<p><code>2dd</code>表示一次删除2行</p>
<p>我们来做如下练习：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cp /etc/protocols .</div><div class="line">$ vim protocols</div></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/md041716vim2+.gif" alt="Vim Protocal"></p>
<h2 id="Vim文档编辑"><a href="#Vim文档编辑" class="headerlink" title="Vim文档编辑"></a>Vim文档编辑</h2><blockquote>
<p>以下所有内容请在</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; $ cp /etc/protocols .</div><div class="line">&gt; $ vim protocols</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>的文本中进行。</p>
</blockquote>
<h3 id="Vim重复命令"><a href="#Vim重复命令" class="headerlink" title="Vim重复命令"></a>Vim重复命令</h3><p>在普通模式下<code>.</code>(小数点)表示重复上一次的命令操作，普通模式下输入<code>x</code>，删除第一个字符，输入<code>.</code>(小数点)会再次删除一个字符，除此之外也可以重复<code>dd</code>的行删除操作。</p>
<p>进入普通模式输入<code>N&lt;command&gt;</code>，<code>N</code>表示重复后面的次数：</p>
<ul>
<li>输入<code>10x</code>，删除10个连续字符</li>
<li>输入<code>3dd</code>，将会删除3行文本</li>
</ul>
<p>在普通模式下，你还可以使用<code>dw</code>或者<code>daw</code>(delete a word)删除一个单词，所以你可以很容易的联想到<code>dNw</code>(N替换为相应数字)表示删除N个单词。</p>
<h3 id="游标的快速跳转"><a href="#游标的快速跳转" class="headerlink" title="游标的快速跳转"></a>游标的快速跳转</h3><h4 id="行间跳转"><a href="#行间跳转" class="headerlink" title="行间跳转"></a>行间跳转</h4><p>普通模式下，下列命令可以让光标快速调转到指定位置，我们分别讨论快速实现<strong>行间跳转</strong>和<strong>行内跳转</strong>。</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>nG</code>(n Shift+g)</td>
<td>游标移动到第 n 行(如果默认没有显示行号，请先进入命令模式，输入<code>:set nu</code>以显示行号)</td>
</tr>
<tr>
<td><code>gg</code></td>
<td>游标移动到到第一行</td>
</tr>
<tr>
<td><code>G</code>(Shift+g)</td>
<td>到最后一行</td>
</tr>
</tbody>
</table>
<p>依次进行如下操作练习：</p>
<p><code>vim protocols</code></p>
<ul>
<li>快速跳转到第9行，然后将其该行删除</li>
<li>回到第一行，向下删除8行</li>
<li>跳转到文档末，然后删除该行</li>
</ul>
<p>小技巧：<strong>你在完成依次跳转后，可以使用<code>Ctrl+o</code>快速回到上一次(跳转前)光标所在位置</strong>，这个技巧很实用，比如当你在写代码时，忽然想起有个bug，需要修改，这时候你跳过去改好了，只需要按下<code>Ctrl+o</code>就可以回到你之前的位置。Vim中会用很多类似的小技巧就等着你去发掘。</p>
<h4 id="行内跳转"><a href="#行内跳转" class="headerlink" title="行内跳转"></a>行内跳转</h4><p>普通模式下使用下列命令在行内按照单词为单位进行跳转：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>w</code></td>
<td>到下一个单词的开头</td>
</tr>
<tr>
<td><code>e</code></td>
<td>到下一个单词的结尾</td>
</tr>
<tr>
<td><code>b</code></td>
<td>到前一个单词的开头</td>
</tr>
<tr>
<td><code>ge</code></td>
<td>到前一个单词的结尾</td>
</tr>
<tr>
<td><code>0</code>或<code>^</code></td>
<td>到行头</td>
</tr>
<tr>
<td><code>$</code></td>
<td>到行尾</td>
</tr>
<tr>
<td><code>f&lt;字母&gt;</code></td>
<td>向后搜索&lt;字母&gt;并跳转到第一个匹配的位置(非常实用)</td>
</tr>
<tr>
<td><code>F&lt;字母&gt;</code></td>
<td>向前搜索&lt;字母&gt;并跳转到第一个匹配的位置</td>
</tr>
<tr>
<td><code>t&lt;字母&gt;</code></td>
<td>向后搜索&lt;字母&gt;并跳转到第一个匹配位置之前的一个字母(不常用)</td>
</tr>
<tr>
<td><code>T&lt;字母&gt;</code></td>
<td>向前搜索&lt;字母&gt;并跳转到第一个匹配位置之后的一个字母(不常用)</td>
</tr>
</tbody>
</table>
<p>依次进行如下操作练习：</p>
<p><code>vim protocols</code></p>
<ul>
<li>在普通模式下，任意跳转到一行，使用<code>w</code>跳转到一个单词的开头，然后使用<code>dw</code>删除这个单词</li>
<li>在普通模式下，使用<code>e</code>跳转到一个单词的结尾，并使用<code>~</code>将游标所在字母变成大写或小写</li>
</ul>
<p><img src="https://dn-anything-about-doc.qbox.me/md041717vim3+.gif" alt="jump"></p>
<h3 id="复制粘贴和剪切"><a href="#复制粘贴和剪切" class="headerlink" title="复制粘贴和剪切"></a>复制粘贴和剪切</h3><h4 id="复制及粘贴文本"><a href="#复制及粘贴文本" class="headerlink" title="复制及粘贴文本"></a>复制及粘贴文本</h4><ul>
<li>普通模式中使用<code>y</code>复制<ul>
<li>普通模式中，<code>yy</code>复制游标所在的整行（<code>3yy</code>表示复制3行）</li>
<li>普通模式中，<code>y^</code> 复制至行首，或<code>y0</code>。不含光标所在处字符。</li>
<li>普通模式中，<code>y$</code> 复制至行尾。含光所在处字符。</li>
<li>普通模式中，<code>yw</code> 复制一个单词。</li>
<li>普通模式中，<code>y2w</code> 复制两个单词。</li>
<li>普通模式中，<code>yG</code> 复制至文本末。</li>
<li>普通模式中，<code>y1G</code> 复制至文本开头。</li>
</ul>
</li>
<li>普通模式中使用<code>p</code>粘贴<ul>
<li>普通模式中，<code>p</code>(小写)代表粘贴至光标后（下）</li>
<li>普通模式中，<code>P</code>(大写)代表粘贴至光标前（上）</li>
</ul>
</li>
</ul>
<h4 id="剪切及粘贴"><a href="#剪切及粘贴" class="headerlink" title="剪切及粘贴"></a>剪切及粘贴</h4><p>其实前面讲得<code>dd</code>删除命令就是剪切，你每次<code>dd</code>删除文档内容后，便可以使用<code>p</code>来粘贴，也这一点可以让我们实现一个很爽快的功能——交换上下行：</p>
<p><code>ddp</code>，就这么简单，即实现了快速交换光标所在行与它下面的行。</p>
<h3 id="字符的替换及撤销-Undo操作"><a href="#字符的替换及撤销-Undo操作" class="headerlink" title="字符的替换及撤销(Undo操作)"></a>字符的替换及撤销(Undo操作)</h3><h4 id="替换和撤销-Undo-命令"><a href="#替换和撤销-Undo-命令" class="headerlink" title="替换和撤销(Undo)命令"></a>替换和撤销(Undo)命令</h4><p>替换和Undo命令都是针对普通模式下的操作：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>r+&lt;待替换字母&gt;</code></td>
<td>将游标所在字母替换为指定字母</td>
</tr>
<tr>
<td><code>R</code></td>
<td>连续替换，直到按下<code>Esc</code></td>
</tr>
<tr>
<td><code>cc</code></td>
<td>替换整行，即删除游标所在行，并进入插入模式</td>
</tr>
<tr>
<td><code>cw</code></td>
<td>替换一个单词，即删除一个单词，并进入插入模式</td>
</tr>
<tr>
<td><code>C</code>(大写)</td>
<td>替换游标以后至行末</td>
</tr>
<tr>
<td><code>~</code></td>
<td>反转游标所在字母大小写</td>
</tr>
<tr>
<td><code>u{n}</code></td>
<td>撤销一次或n次操作</td>
</tr>
<tr>
<td><code>U</code>(大写)</td>
<td>撤销当前行的所有修改</td>
</tr>
<tr>
<td><code>Ctrl+r</code></td>
<td>redo，即撤销undo的操作</td>
</tr>
</tbody>
</table>
<p><img src="https://dn-anything-about-doc.qbox.me/md041718vim5+.gif" alt="replace"></p>
<h3 id="快速缩进"><a href="#快速缩进" class="headerlink" title="快速缩进"></a>快速缩进</h3><h4 id="使用命令进行快速调整缩进操作"><a href="#使用命令进行快速调整缩进操作" class="headerlink" title="使用命令进行快速调整缩进操作"></a>使用命令进行快速调整缩进操作</h4><p>这一小节学习如何在Vim中进行快速缩进，缩进操作均在普通模式下有效。</p>
<p>请做以下练习：</p>
<p><code>vim protocols</code></p>
<ul>
<li>普通模式下输入<code>15G</code>，跳转到15行</li>
<li>普通模式下输入<code>&gt;&gt;</code> 整行将向右缩进（使用，用于格式化代码超爽）</li>
<li>普通模式下输入<code>&lt;&lt;</code> 整行向左回退</li>
<li>普通模式下输入<code>:</code>进入命令行模式下对<code>shiftwidth</code>值进行设置可以控制缩进和回退的字符数</li>
</ul>
<h4 id="shiftwidth命令"><a href="#shiftwidth命令" class="headerlink" title="shiftwidth命令"></a>shiftwidth命令</h4><p><code>shiftwidth</code>命令是指上一节<code>&gt;&gt;</code>命令产生的缩进（可以简写成<code>sw</code>） 普通模式下输入<code>:</code>进入命令行模式下对<code>shiftwidth</code>值进行设置可以控制缩进和回退的字符数 </p>
<p>获取目前的设定值</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:<span class="keyword">set</span> <span class="built_in">shiftwidth</span>?</div></pre></td></tr></table></figure>
<p>设置缩进为10个字符</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:<span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">10</span></div></pre></td></tr></table></figure>
<p>按下<code>ESC</code>回到普通模式，再次尝试<code>&gt;&gt;</code>看缩进量是否变化。</p>
<h4 id="调整文本位置"><a href="#调整文本位置" class="headerlink" title="调整文本位置"></a>调整文本位置</h4><p><code>vim protocols</code></p>
<ul>
<li>命令行模式下输入<code>:ce</code>(center)命令使本行内容居中</li>
<li>命令行模式下输入<code>:ri</code>(right)命令使本行文本靠右</li>
<li>命令行模式下输入<code>:le</code>(left)命令使本行内容靠左</li>
</ul>
<p><img src="https://dn-anything-about-doc.qbox.me/md041718vim6+.gif" alt="align"></p>
<h3 id="查找-1"><a href="#查找-1" class="headerlink" title="查找"></a>查找</h3><h4 id="快速查找"><a href="#快速查找" class="headerlink" title="快速查找"></a>快速查找</h4><p>普通模式下输入<code>/</code>然后键入需要查找的字符串按回车后就会进行查找。 <code>？</code>与<code>/</code>功能相同，只不过<code>？</code>是向上而<code>/</code>是向下查找。</p>
<p>进入查找之后，输入<code>n</code>和<code>N</code>可以继续查找<code>n</code>表示继续查找，<code>N</code>反向查找。</p>
<p>练习：</p>
<p><code>vim protocols</code></p>
<ul>
<li>普通模式下输入<code>/icmp</code>查找字符串icmp</li>
<li>普通模式下输入<code>n</code>查找下一个icmp</li>
<li>普通模式下输入<code>？tcp</code>向上查找字符串tcp</li>
<li>普通模式下输入<code>N</code>查找上一个出现的tcp</li>
</ul>
<h4 id="高级查找"><a href="#高级查找" class="headerlink" title="高级查找"></a>高级查找</h4><ul>
<li>普通模式下输入<code>\*</code>寻找游标所在处的单词</li>
<li>普通模式下输入<code>\#</code>同上，但 <code>\*</code> 是向前（上）找，<code>\#</code>则是向后（下）找</li>
<li>普通模式下输入<code>g\*</code>同<code>\*</code> ，但部分符合该单词即可</li>
<li>普通模式下输入<code>g\#</code>同<code>\#</code> ，但部分符合该单词即可</li>
</ul>
<blockquote>
<p>以上查找<code>n</code>，<code>N</code>的继续查找命令依然可以用。</p>
</blockquote>
<hr>
<h2 id="进阶内容"><a href="#进阶内容" class="headerlink" title="进阶内容"></a>进阶内容</h2><h3 id="多文件编辑"><a href="#多文件编辑" class="headerlink" title="多文件编辑"></a>多文件编辑</h3><h4 id="使用Vim编辑多个文件"><a href="#使用Vim编辑多个文件" class="headerlink" title="使用Vim编辑多个文件"></a>使用Vim编辑多个文件</h4><p>编辑多个文件有两种形式，一种是在进入Vim前使用的参数就是多个文件。另一种就是进入Vim后再编辑其他的文件。 同时创建两个新文件并编辑</p>
<p><code>$ vim 1.txt 2.txt</code></p>
<p>默认进入1.txt文件的编辑界面</p>
<ul>
<li>命令行模式下输入<code>:n</code>编辑2.txt文件，可以加<code>!</code>即<code>:n!</code>强制切换，之前一个文件的输入没有保存，仅仅切换到另一个文件。</li>
<li>命令行模式下输入<code>:N</code>编辑1.txt文件，可以加<code>!</code>即<code>:N!</code>强制切换，之前文件内的输入没有保存，仅仅是切换到另一个文件。</li>
</ul>
<h4 id="进入vim后打开新文件"><a href="#进入vim后打开新文件" class="headerlink" title="进入vim后打开新文件"></a>进入vim后打开新文件</h4><ul>
<li>命令行模式下输入<code>:e 3.txt</code> 打开新文件3.txt</li>
<li>命令行模式下输入<code>:e#</code> 回到前一个文件</li>
<li>命令行模式下输入<code>:ls</code>可以列出以前编辑过的文档</li>
<li>命令行模式下输入<code>:b 2.txt</code>（或者编号）可以直接进入文件2.txt编辑</li>
<li>命令行模式下输入<code>:bd 2.txt</code>（或者编号）可以删除以前编辑过的列表中的文件项目</li>
<li>命令行模式下输入<code>:e! 4.txt</code>，新打开文件4.txt，放弃正在编辑的文件</li>
<li>命令行模式下输入<code>:f</code> 显示正在编辑的文件名</li>
<li>命令行模式下输入<code>:f new.txt</code>，改变正在编辑的文件名字为new.txt</li>
</ul>
<h4 id="恢复文件"><a href="#恢复文件" class="headerlink" title="恢复文件"></a>恢复文件</h4><p>如果因为断电等原因造成文档没有保存，可以采用恢复方式，<code>vim -r</code>进入文档后，输入<code>:ewcover 1.txt</code>来恢复</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim -r 1.txt</div></pre></td></tr></table></figure>
<h3 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h3><ul>
<li>在普通模式下输入<code>v</code>（小写），进入字符选择模式，就可以移动光标，光标走过的地方就会选取。再次按下<code>v</code>会后就会取消选取。</li>
<li>在普通模式下输入<code>Shift+v</code>（小写），进入行选择模式，按下<code>V</code>之后就会把整行选取，您可以上下移动光标选更多的行，同样，再按一次<code>Shift+v</code>就可以取消选取。</li>
<li>在普通模式下输入 <code>Ctrl+v</code>（小写），这是区域选择模式，可以进行矩形区域选择，再按一次<code>Ctrl+v</code>取消选取。</li>
<li>在普通模式下输入<code>d</code>删除选取区域内容</li>
<li>在普通模式下输入<code>y</code>复制选取区域内容</li>
</ul>
<p>请做以下练习：</p>
<p><code>$ vim protocols</code></p>
<ul>
<li>在普通模式下<code>9G</code>跳转到第9行,输入<code>Shift+v</code>（小写V），进入可视模式进行行选择，选中5行，按下<code>&gt;&gt;</code>缩进，将5行整体缩进一个shiftwidth</li>
<li>在普通模式下输入 <code>Ctrl+v</code>（小写v），进入可视模式进行矩形区域选择，选中第一列字符然后<code>x</code>删除整列</li>
</ul>
<p><img src="https://dn-anything-about-doc.qbox.me/md041719vim7+.gif" alt="visualMode"></p>
<h3 id="视窗操作"><a href="#视窗操作" class="headerlink" title="视窗操作"></a>视窗操作</h3><p>Vim可以在一个界面里打开多个窗口进行编辑，这些编辑窗口称为Vim的视窗。 打开方法有很多种，例如可以使用在命令行模式下输入<code>:new</code> 打开一个新的Vim视窗，并进入视窗编辑一个新文件。</p>
<ul>
<li>命令行模式下输入<code>:sp 1.txt</code> 打开新的横向视窗来编辑1.txt</li>
<li>命令行模式下输入<code>:vsp 2.txt</code> 打开新的纵向视窗来编辑1.txt</li>
<li>普通模式下<code>Ctrl-w s</code> 将当前窗口分割成两个水平的窗口</li>
<li>普通模式下<code>Ctrl-w v</code> 将当前窗口分割成两个垂直的窗口</li>
<li>普通模式下<code>Ctrl-w q</code> 即 <code>:q</code> 结束分割出来的视窗。如果在新视窗中有输入需要使用强制符！即:q!</li>
<li>普通模式下<code>Ctrl-w o</code> 打开一个视窗并且隐藏之前的所有视窗</li>
<li>普通模式下<code>Ctrl-w j</code> 移至下面视窗</li>
<li>普通模式下<code>Ctrl-w k</code> 移至上面视窗</li>
<li>普通模式下<code>Ctrl-w h</code> 移至左边视窗</li>
<li>普通模式下<code>Ctrl-w l</code> 移至右边视窗</li>
<li>普通模式下<code>Ctrl-w J</code> 将当前视窗移至下面</li>
<li>普通模式下<code>Ctrl-w K</code> 将当前视窗移至上面</li>
<li>普通模式下<code>Ctrl-w H</code> 将当前视窗移至左边</li>
<li>普通模式下<code>Ctrl-w L</code> 将当前视窗移至右边</li>
<li>普通模式下<code>Ctrl-w -</code> 减小视窗的高度</li>
<li>普通模式下<code>Ctrl-w +</code> 增加视窗的高度</li>
</ul>
<p>打开练习文件：</p>
<p><code>$ vim 1.txt</code></p>
<ul>
<li>命令行模式下输入<code>:new</code> 打开一个新的vim视窗</li>
<li>命令行模式下输入<code>:sp 2.txt</code> 打开新的横向视窗来编辑2.txt</li>
<li>命令行模式下输入<code>:vsp 3.txt</code> 打开新的横向视窗来编辑3.txt</li>
<li>可以使用<code>Ctrl+w</code>进行视窗间的跳转</li>
<li>分别在不同视窗的命令行模式下输入<code>:q!</code>退出多视窗编辑</li>
</ul>
<p><img src="https://dn-anything-about-doc.qbox.me/md041719vim8+.gif" alt="multiWindows"></p>
<h3 id="功能设定"><a href="#功能设定" class="headerlink" title="功能设定"></a>功能设定</h3><h4 id="Vim的功能设定"><a href="#Vim的功能设定" class="headerlink" title="Vim的功能设定"></a>Vim的功能设定</h4><p>可以在编辑文件的时候进行功能设定，如命令行模式下输入<code>:set nu</code>（显示行数），设定值退出Vim后不会保存。要永久保存配置需要修改Vim配置文件。Vim的配置文件<code>~/.vimrc</code>，可以打开文件进行修改，不过务必小心不要影响Vim正常使用</p>
<h4 id="获取目前的设定"><a href="#获取目前的设定" class="headerlink" title="获取目前的设定"></a>获取目前的设定</h4><ul>
<li>命令行模式下输入<code>:set</code>或者<code>:se</code>显示所有修改过的配置</li>
<li>命令行模式下输入<code>:set all</code> 显示所有的设定值</li>
<li>命令行模式下输入<code>:set option?</code> 显示option的设定值</li>
<li>命令行模式下输入<code>:set nooption</code> 取消当期设定值</li>
</ul>
<h4 id="set功能的说明"><a href="#set功能的说明" class="headerlink" title="set功能的说明"></a>set功能的说明</h4><ul>
<li>命令行模式下输入<code>:set autoindent(ai)</code> 设置自动缩进</li>
<li>命令行模式下输入<code>:set autowrite(aw)</code> 设置自动存档，默认未打开</li>
<li>命令行模式下输入<code>:set background=dark</code>或<code>light</code>，设置背景风格</li>
<li>命令行模式下输入<code>:set backup(bk)</code> 设置自动备份，默认未打开</li>
<li>命令行模式下输入<code>:set cindent(cin)</code> 设置C语言风格缩进</li>
</ul>
<blockquote>
<p>更多详细参数请参考Vim手册</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;教程整理自&lt;a href=&quot;http://www.shiyanlou.com&quot;&gt;实验楼&lt;/a&gt;Edward讲师的课程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先Vim按键速查卡镇楼：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xin49.com1.z0.glb.clouddn.com/vim_cheat_sheet_for_programmers_print.png-1920.jpg&quot; alt=&quot;Key&quot;&gt; &lt;/p&gt;
&lt;p&gt;不喜欢看文字的同学可接通过下面这个游戏直接学习Vim（我还没通关，后面似乎要付费了😂）：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://vim-adventures.com&quot;&gt;Vim Adventures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://coolshell.cn//wp-content/uploads/2012/04/vimadventuresgamefun.jpg&quot; alt=&quot;Vim Adventures&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;核心用法&quot;&gt;&lt;a href=&quot;#核心用法&quot; class=&quot;headerlink&quot; title=&quot;核心用法&quot;&gt;&lt;/a&gt;核心用法&lt;/h2&gt;&lt;p&gt;我把Vim的核心用法总结为移动、跳转、插入、删除、复制、粘贴、撤销、查找、打开、保存、退出。只要掌握了这几个，就可以进行简单的编辑了，所以：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vim" scheme="http://kchen.cc/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux 使用教程</title>
    <link href="http://kchen.cc/2016/04/16/linux-tutorial/"/>
    <id>http://kchen.cc/2016/04/16/linux-tutorial/</id>
    <published>2016-04-16T21:17:00.000Z</published>
    <updated>2016-06-16T14:26:49.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>笔记来源于<a href="http://www.shiyanlou.com" target="_blank" rel="external">实验楼</a>的Linux基础教程。</p>
</blockquote>
<h2 id="一、Linux学习路线"><a href="#一、Linux学习路线" class="headerlink" title="一、Linux学习路线"></a>一、Linux学习路线</h2><p><img src="https://dn-anything-about-doc.qbox.me/linux_base/1-8.png" alt="LinuxRoute"></p>
<p>Unix族谱：</p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/1-9.svg" alt="UnixFamily"></p>
<a id="more"></a>
<h2 id="二、基本概念及操作"><a href="#二、基本概念及操作" class="headerlink" title="二、基本概念及操作"></a>二、基本概念及操作</h2><p>几个大家熟知也最流行的实现了客户端功能的桌面环境KDE，GNOME，XFCE，LXDE，其中就有你看到的，实验楼目前使用的 XFCE 桌面环境，部分老用户可能可以回想起，实验楼之前使用的环境是 LXDE。这也意味着在 Linux 上你可以自己选择安装不同的桌面环境，甚至可以定制自己的专属桌面。</p>
<p>几个比较常见的终端模拟器，例如 gnome-terminal，kconsole，xterm，rxvt，kvt，nxterm 和 eterm。</p>
<p>终端本质上是对应着 Linux 上的 /dev/tty 设备，Linux 的多用户登陆就是通过不同的 /dev/tty 设备完成的，Linux 默认提供了 6 个纯命令行界面的 “terminal”（准确的说这里应该是 6 个 virtual consoles）来让用户登录，在物理机系统上你可以通过使用[Ctrl]+[Alt]+[F1]～[F6]进行切换，不过在我们的在线实验环境中可能无法切换，因为特殊功能按键会被你主机系统劫持。当你切换到其中一个终端后想要切换回图形界面，你可以按下[Ctrl]+[Alt]+[F7]来完成。</p>
<p>在 UNIX/Linux 中比较流行的常见的 Shell 有 bash，zsh，ksh，csh 等等，Ubuntu 终端默认使用的是 bash，默认的桌面环境是 GNOME 或者 Unity（基于 GNOME）</p>
<p>通配符是一种特殊语句，主要有星号（<code>*</code>）和问号（<code>?</code>），用来对对字符串进行模糊匹配（比如文件名，参数名）。当查找文件夹时，可以使用它来代替一个或多个真正字符；当不知道真正字符或者懒得输入完整名字时，常常使用通配符代替一个或多个真正的字符。</p>
<p>在创建文件的时候，如果需要一次性创建多个文件，比如：“love_1_linux.txt，love_2_linux.txt，… love_10_linux.txt”。在 Linux 中十分方便：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch love_&#123;1..10&#125;_linux.txt</div></pre></td></tr></table></figure>
<p>Shell 常用通配符：</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>匹配 0 或多个字符</td>
</tr>
<tr>
<td><code>?</code></td>
<td>匹配任意一个字符</td>
</tr>
<tr>
<td><code>[list]</code></td>
<td>匹配 list 中的任意单一字符</td>
</tr>
<tr>
<td><code>[!list]</code></td>
<td>匹配 除list 中的任意单一字符以外的字符</td>
</tr>
<tr>
<td><code>[c1-c2]</code></td>
<td>匹配 c1-c2 中的任意单一字符 如：<code>[0-9]</code> <code>[a-z]</code></td>
</tr>
<tr>
<td><code>{string1,string2,...}</code></td>
<td>匹配 sring1 或 string2 (或更多)其一字符串</td>
</tr>
<tr>
<td><code>{c2..c2}</code></td>
<td>匹配 c1-c2 中全部字符 如<code>{1..10}</code></td>
</tr>
</tbody>
</table>
<h2 id="三、用户及文件权限管理"><a href="#三、用户及文件权限管理" class="headerlink" title="三、用户及文件权限管理"></a>三、用户及文件权限管理</h2><p>请打开终端，输入命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ who am i</div><div class="line">或者</div><div class="line">$ who mom likes</div></pre></td></tr></table></figure>
<p>输入的第一列表示打开当前伪终端的用户的用户名（要查看当前登录用户的用户名，去掉空格直接使用 <code>whoami</code> 即可），第二列的 <code>pts/0</code> 中 <code>pts</code> 表示伪终端，所谓伪是相对于 <code>/dev/tty</code> 设备而言的，还记得上一节讲终端时的那七个使用 <code>[Ctrl]+[Alt]+[F1]～[F7]</code> 进行切换的 <code>/dev/tty</code> 设备么,这是“真终端”，伪终端就是当你在图形用户界面使用 <code>/dev/tty7</code> 时每打开一个终端就会产生一个伪终端， <code>pts/0</code> 后面那个数字就表示打开的伪终端序号，你可以尝试再打开一个终端，然后在里面输入 <code>who am i</code> ，看第二列是不是就变成 <code>pts/1</code> 了，第三列则表示当前伪终端的启动时间。</p>
<p><code>su &lt;user&gt;</code>可以切换到用户user，执行时需要输入目标用户的密码，<code>sudo &lt;cmd&gt;</code>可以以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入当前用户密码。<code>su - &lt;user&gt;</code>命令也是切换用户，同时环境变量也会跟着改变成目标用户的环境变量。</p>
<p>使用 usermod 命令可以为用户添加用户组，同样使用该命令你必需有 root 权限，你可以直接使用 root 用户为其它用户添加用户组，或者用其它已经在 sudo 用户组的用户使用 sudo 命令获取权限来执行该命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ su shiyanlou</div><div class="line">$ groups lilei</div><div class="line">$ sudo usermod -G sudo lilei</div><div class="line">$ groups lilei</div></pre></td></tr></table></figure>
<p>文件权限</p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/3-9.png" alt="详情"></p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/3-10.png" alt="权限"></p>
<h2 id="四、目录结构及文件基本操作"><a href="#四、目录结构及文件基本操作" class="headerlink" title="四、目录结构及文件基本操作"></a>四、目录结构及文件基本操作</h2><p><img src="https://dn-anything-about-doc.qbox.me/linux_base/4-1.png" alt="Linux目录结构"></p>
<p>FHS（英文：Filesystem Hierarchy Standard 中文：文件系统层次结构标准），多数 Linux 版本采用这种文件组织形式，FHS 定义了系统中每个区域的用途、所需要的最小构成的文件和目录同时还给出了例外处理与矛盾处理。</p>
<p>FHS 定义了两层规范，第一层是， / 下面的各个目录应该要放什么文件数据，例如 /etc 应该要放置设置文件，/bin 与 /sbin 则应该要放置可执行文件等等。</p>
<p>第二层则是针对 /usr 及 /var 这两个目录的子目录来定义。例如 /var/log 放置系统登录文件、/usr/share 放置共享数据等等。</p>
<p>使用 -p 参数，同时创建父目录（如果不存在该父目录），如下我们同时创建一个多级目录（这在有时候安装软件，配置安装路径时非常有用）：</p>
<p><code>$ mkdir -p father/son/grandson</code></p>
<p>可以加上-n参数显示行号：</p>
<p><code>$ cat -n passwd</code></p>
<p>如果说上面的 cat 是用来快速查看一个文件内容的，那么这个more和less就是天生用来”阅读”一个文件的内容的，比如说”man”手册内部就是使用的 less 来显示内容。其中more命令比较简单，只能向一个方向滚动，而”less”为基于”more”和”vi”开发，功能更强大。less 的使用基本和 more 一致。</p>
<p>只看一行， 加上-n参数，后面紧跟行数：</p>
<p><code>$ tail -n 1 /etc/passwd</code></p>
<p>关于<code>tail</code>命令，不得不提的还有它一个很牛的参数<code>-f</code>，这个参数可以实现不停地读取某个文件的内容并显示。这可让我们动态查看日志起到实时监视的作用。</p>
<p>如果你想更加快速的入门，你可以直接使用 Linux 内部的 vim 学习教程，输入如下命令即可开始：</p>
<p><code>$ vimtutor</code></p>
<h2 id="五、环境变量与文件查找"><a href="#五、环境变量与文件查找" class="headerlink" title="五、环境变量与文件查找"></a>五、环境变量与文件查找</h2><p>通常我们会涉及到的环境变量有三种：</p>
<ul>
<li>当前 Shell 进程私有用户自定义变量，如上面我们创建的 temp 变量，只在当前 Shell 中有效。</li>
<li>Shell 本身内建的变量。</li>
<li>从自定义变量导出的环境变量。</li>
</ul>
<p>也有三个与上述三种环境变量相关的命令，<code>set</code>，<code>env</code>，<code>export</code>。这三个命令很相似，都可以用于打印相关环境变量,区别在于涉及的是不同范围的环境变量，详见下表：</p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/5-3.png" alt="环境变量作用域大小"></p>
<p>在每个用户的 home 目录中有一个 Shell 每次启动时会默认执行一个配置脚本，以初始化环境，包括添加一些用户自定义环境变量等等。zsh 的配置文件是.zshrc，相应 Bash 的配置文件为.bashrc。它们在etc下还都有一个或多个全局的配置文件，不过我们一般只修改用户目录下的配置文件。</p>
<p>我们可以简单的使用下面命令直接添加内容到.zshrc中：</p>
<p><code>$ echo &quot;PATH=$PATH:/home/shiyanlou/mybin&quot; &gt;&gt; .zshrc</code></p>
<blockquote>
<p>上述命令中<code>&gt;&gt;</code>表示将标准输出以追加的方式重定向到一个文件中，注意前面用到的<code>&gt;</code>是以覆盖的方式重定向到一个文件中，使用的时候一定要注意分辨。在指定文件不存在的情况下都会创建新的文件。</p>
</blockquote>
<p>在上面我们在 Shell 中修改了一个配置脚本文件之后（比如 zsh 的配置文件 home 目录下的.zshrc），每次都要退出终端重新打开甚至重启主机之后其才能生效，很是麻烦，我们可以使用<code>source</code>命令来让其立即生效，如：</p>
<p><code>$ source .zshrc</code></p>
<p><code>source</code>命令还有一个别名就是<code>.</code>，注意与表示当前路径的那个点区分开，虽然形式一样，但作用和使用方式一样，上面的命令如果替换成<code>.</code>的方式就该是</p>
<p><code>$ . ./.zshrc</code></p>
<p>注意第一个点后面有一个空格，而且后面的文件必须指定完整的绝对或相对路径名，<code>source</code>则不需要。</p>
<p>与搜索相关的命令常用的有如下几个<code>whereis</code>,<code>which</code>,<code>find</code>,<code>locate</code>。</p>
<ul>
<li>whereis简单快速</li>
<li>locate快而全</li>
<li>which小而精</li>
<li>find精而细</li>
</ul>
<h2 id="六、文件打包与压缩"><a href="#六、文件打包与压缩" class="headerlink" title="六、文件打包与压缩"></a>六、文件打包与压缩</h2><h3 id="使用zip打包文件夹："><a href="#使用zip打包文件夹：" class="headerlink" title="使用zip打包文件夹："></a>使用zip打包文件夹：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ zip -r -q -o shiyanlou.zip /home/shiyanlou</div><div class="line">$ du -h shiyanlou.zip</div><div class="line">$ file shiyanlou.zip</div></pre></td></tr></table></figure>
<p>第一行命令中，<code>-r</code>参数表示递归打包包含子目录的全部内容，<code>-q</code>参数表示为安静模式，即不向屏幕输出信息，<code>-o</code>表示输出文件，需在其后紧跟打包输出文件名。后面使用<code>du</code>命令查看打包后文件的大小。</p>
<h3 id="使用unzip命令解压缩zip文件"><a href="#使用unzip命令解压缩zip文件" class="headerlink" title="使用unzip命令解压缩zip文件"></a>使用unzip命令解压缩zip文件</h3><p>将shiyanlou.zip解压到当前目录：</p>
<p><code>$ unzip shiyanlou.zip</code></p>
<p>使用安静模式，将文件解压到指定目录：</p>
<p><code>$ unzip -q shiyanlou.zip -d ziptest</code></p>
<h2 id="七、命令执行顺序控制与管道"><a href="#七、命令执行顺序控制与管道" class="headerlink" title="七、命令执行顺序控制与管道"></a>七、命令执行顺序控制与管道</h2><h3 id="命令控制顺序"><a href="#命令控制顺序" class="headerlink" title="命令控制顺序"></a>命令控制顺序</h3><p>简单的顺序执行你可以使用<code>;</code>来完成：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update;sudo apt-get install some-tool;some-tool</div><div class="line"><span class="comment"># 让它自己运行</span></div></pre></td></tr></table></figure>
<p>有选择性的来执行命令，比如上一条命令执行成功才继续下一条，或者不成功又该做出其它什么处理,比如我们使用<code>which</code>来查找是否安装某个命令，如果找到就执行该命令，否则什么也不做（虽然这个操作没有什么实际意义，但可帮你更好的理解一些概念）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">which</span> cowsay&gt;/dev/null &amp;&amp; cowsay <span class="_">-f</span> head-in ohch~</div></pre></td></tr></table></figure>
<p>你如果没有安装<code>cowsay</code>，你可以先执行一次上述命令，你会发现什么也没发生，你再安装好之后你再执行一次上述命令，你也会发现一些惊喜。</p>
<p>上面的<code>&amp;&amp;</code>就是用来实现选择性执行的，它表示如果前面的命令执行结果（不是表示终端输出的内容，而是表示命令执行状态的结果）返回<code>0</code>则执行后面的，否则不执行，你可以从<code>$?</code>环境变量获取上一次命令的返回结果。</p>
<p>Shell 也有一个<code>||</code>，它们的区别就在于，shell中的这两个符号除了也可用于表示逻辑与和或之外，就是可以实现这里的命令执行顺序的简单控制。<code>||</code>在这里就是与<code>&amp;&amp;</code>相反的控制效果，当上一条命令执行结果为<code>≠0($?≠0)</code>时则执行它后面的命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">which</span> cowsay&gt;/dev/null || <span class="built_in">echo</span> <span class="string">"cowsay has not been install, please run 'sudo apt-get install cowsay' to install"</span></div></pre></td></tr></table></figure>
<p>除了上述基本的使用之外，我们还可以结合这<code>&amp;&amp;</code>和<code>||</code>来实现一些操作，比如：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">which</span> cowsay&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">"exist"</span> || <span class="built_in">echo</span> <span class="string">"not exist"</span></div></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/8-3.png" alt="逻辑流程"></p>
<h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>管道是什么,<strong>管道是一种通信机制，通常用于进程间的通信（也可通过socket进行网络通信），它表现出来的形式就是将前面每一个进程的输出(stdout)直接作为下一个进程的输入(stdin)</strong>。</p>
<p>管道又分为匿名管道和具名管道（这里将不会讨论在源程序中使用系统调用创建并使用管道的情况，它与命令行的管道在内核中实际都是采用相同的机制）。我们在使用一些过滤程序时经常会用到的就是匿名管道，在命令行中由<code>|</code>分隔符表示，<code>|</code>在前面的内容中我们已经多次使用到了。具名管道简单的说就是有名字的管道，通常只会在源程序中用到具名管道。下面我们就将通过一些常用的可以使用管道的”过滤程序”来帮助你熟练管道的使用。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -al /etc | less</div></pre></td></tr></table></figure>
<p>通过管道将前一个命令(<code>ls</code>)的输出作为下一个命令(<code>less</code>)的输入，然后就可以一行一行地看。</p>
<p><code>cut</code>命令，打印每一行的某一字段</p>
<p>打印/etc/passwd文件中以<code>:</code>为分隔符的第1个字段和第6个字段分别表示用户名和其家目录：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cut <span class="_">-d</span> <span class="string">':'</span> <span class="_">-f</span> 1,6 /etc/passwd</div></pre></td></tr></table></figure>
<p>打印/etc/passwd文件中每一行的前N个字符：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 前五个（包含第五个）</span></div><div class="line">$ cut /etc/passwd -c -5</div><div class="line"><span class="comment"># 前五个之后的（包含第五个）</span></div><div class="line">$ cut /etc/passwd -c 5-</div><div class="line"><span class="comment"># 第五个</span></div><div class="line">$ cut /etc/passwd -c 5</div><div class="line"><span class="comment"># 2到5之间的（包含第五个）</span></div><div class="line">$ cut /etc/passwd -c 2-5</div></pre></td></tr></table></figure>
<p><code>grep</code>命令是很强大的，也是相当常用的一个命令，它结合正则表达式可以实现很复杂却很高效的匹配和查找。</p>
<p><code>grep</code>命令的一般形式为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep [命令选项]... 用于匹配的表达式 [文件]...</div></pre></td></tr></table></figure>
<p><code>wc</code> 命令用于统计并输出一个文件中行、单词和字节的数目，比如输出/etc/passwd文件的统计信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wc /etc/passwd</div></pre></td></tr></table></figure>
<p>分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 行数</span></div><div class="line">$ wc <span class="_">-l</span> /etc/passwd</div><div class="line"><span class="comment"># 单词数</span></div><div class="line">$ wc -w /etc/passwd</div><div class="line"><span class="comment"># 字节数</span></div><div class="line">$ wc -c /etc/passwd</div><div class="line"><span class="comment"># 字符数</span></div><div class="line">$ wc -m /etc/passwd</div><div class="line"><span class="comment"># 最长行字节数</span></div><div class="line">$ wc -L /etc/passwd</div></pre></td></tr></table></figure>
<p><code>sort</code> 命令功能很简单就是将输入按照一定方式排序，然后再输出,它支持的排序有按字典排序,数字排序，按月份排序，随机排序，反转排序，指定特定字段进行排序等等。</p>
<p>默认为字典排序：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/passswd | sort</div></pre></td></tr></table></figure>
<p>反转排序：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/passwd | sort -r</div></pre></td></tr></table></figure>
<p>按特定字段排序：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/passwd | sort -t<span class="string">':'</span> -k 3</div></pre></td></tr></table></figure>
<p>上面的<code>-t</code>参数用于指定字段的分隔符，这里是以”:”作为分隔符；<code>-k</code> 字段号用于指定对哪一个字段进行排序。这里/etc/passwd文件的第三个字段为数字，默认情况下是一字典序排序的，如果要按照数字排序就要加上<code>-n</code>参数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat /etc/passwd | sort -t<span class="string">':'</span> -k 3 -n</div></pre></td></tr></table></figure>
<h2 id="八、数据流重定向"><a href="#八、数据流重定向" class="headerlink" title="八、数据流重定向"></a>八、数据流重定向</h2><p>默认使用终端的标准输入作为命令的输入和标准输出作为命令的输出</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat </div><div class="line">（按Ctrl+C退出）</div></pre></td></tr></table></figure>
<p>将<code>cat</code>的连续输出（heredoc方式）重定向到一个文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ mkdir Documents</div><div class="line">$ cat &gt; Documents/test.c &lt;&lt;EOF</div><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"hello world\n"</span>);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">EOF</div></pre></td></tr></table></figure>
<p>将一个文件作为命令的输入，标准输出作为命令的输出</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat Documents/test.c</div></pre></td></tr></table></figure>
<p>将<code>echo</code>命令通过管道传过来的数据作为<code>cat</code>命令的输入，将标准输出作为命令的输出</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'hi'</span> | cat</div></pre></td></tr></table></figure>
<p>将<code>echo</code>命令的输出从默认的标准输出重定向到一个普通文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'hello shiyanlou'</span> &gt; redirect</div><div class="line">$ cat redirect</div></pre></td></tr></table></figure>
<blockquote>
<p>管道默认是连接前一个命令的输出到下一个命令的输入，而重定向通常是需要一个文件来建立两个命令的连接</p>
</blockquote>
<h2 id="九、正则表达式基础"><a href="#九、正则表达式基础" class="headerlink" title="九、正则表达式基础"></a>九、正则表达式基础</h2><blockquote>
<p><strong>正则表达式</strong>，又称正规表示式、正规表示法、正规表达式、规则表达式、常规表示法（英语：Regular Expression，在代码中常简写为 regex、regexp 或 RE），计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。</p>
<p>许多程序设计语言都支持利用正则表达式进行字符串操作。例如，在 Perl 中就内建了一个功能强大的正则表达式引擎。正则表达式这个概念最初是由 UNIX 中的工具软件（例如<code>sed</code>和<code>grep</code>）普及开的。正则表达式通常缩写成“regex”，单数有 regexp、regex，复数有 regexps、regexes、regexen。</p>
<p>简单的说形式和功能上正则表达式和<strong>通配符</strong>很像，不过它们之间又有很大差别，特别在于一些特殊的匹配字符的含义上。</p>
</blockquote>
<h3 id="正则式和通配符的简单例子"><a href="#正则式和通配符的简单例子" class="headerlink" title="正则式和通配符的简单例子"></a>正则式和通配符的简单例子</h3><p>假设我们有这样一个文本文件，包含”shiyanlou”，和”shilouyan”这两个字符串，同样一个表达式：</p>
<p><code>shi*</code></p>
<p>如果这作为一个正则表达式，它将只能匹配 shi，而如果不是作为正则表达式<code>*</code>作为一个通配符，则将同时匹配这两个字符串。这是为什么呢？因为在正则表达式中<code>*</code>表示匹配前面的子表达式（这里就是它前面一个字符）零次或多次，比如它可以匹配”sh”,”shii”,”shish”,”shiishi”等等，而作为通配符表示匹配通配符后面任意多个任意字符，所以它可以匹配”shiyanlou”，和”shilouyan”两个字符。</p>
<h3 id="基本语法："><a href="#基本语法：" class="headerlink" title="基本语法："></a>基本语法：</h3><p>一个正则表达式通常被称为一个<strong>模式（pattern）</strong>，为用来描述或者匹配一系列符合某个句法规则的字符串。</p>
<h4 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h4><p><code>|</code>竖直分隔符表示选择，例如”<code>boy|girl</code>“可以匹配”boy”或者”girl”</p>
<h4 id="数量限定"><a href="#数量限定" class="headerlink" title="数量限定"></a>数量限定</h4><p>数量限定除了我们举例用的<code>*</code>,还有<code>+</code>加号,<code>?</code>问号,<code>.</code>点号，如果在一个模式中不加数量限定符则表示出现一次且仅出现一次：</p>
<ul>
<li><code>+</code>表示前面的字符必须出现至少一次(1次或多次)，例如，”<code>goo+gle</code>“,可以匹配”gooogle”,”goooogle”等；</li>
<li><code>?</code>表示前面的字符最多出现一次(0次或1次)，例如，”<code>colou?r</code>“,可以匹配”color”或者”colour”;</li>
<li><code>*</code>星号代表前面的字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次），例如，“<code>0*42</code>”可以匹配42、042、0042、00042等。</li>
</ul>
<h4 id="范围和优先级"><a href="#范围和优先级" class="headerlink" title="范围和优先级"></a>范围和优先级</h4><p><code>()</code>圆括号可以用来定义模式字符串的范围和优先级，这可以简单的理解为是否将括号内的模式串作为一个整体。例如，”<code>gr(a|e)y</code>“等价于”<code>gray|grey</code>“，（这里体现了优先级，竖直分隔符用于选择a或者e而不是gra和ey），”<code>(grand)?father</code>“匹配father和grandfather（这里体验了范围，<code>?</code>将<strong>圆括号内容作为一个整体匹配</strong>）。</p>
<h4 id="语法（部分）"><a href="#语法（部分）" class="headerlink" title="语法（部分）"></a>语法（部分）</h4><p>正则表达式有多种不同的风格，下面列举一些常用的作为 PCRE 子集的适用于<code>perl</code>和<code>python</code>编程语言及<code>grep</code>或<code>egrep</code>的正则表达式匹配规则：(由于markdown表格解析的问题，下面的竖直分隔符用全角字符代替，实际使用时请换回半角字符)</p>
<blockquote>
<p>PCRE（Perl Compatible Regular Expressions中文含义：perl语言兼容正则表达式）是一个用 C 语言编写的正则表达式函数库，由菲利普.海泽(Philip Hazel)编写。PCRE是一个轻量级的函数库，比Boost 之类的正则表达式库小得多。PCRE 十分易用，同时功能也很强大，性能超过了 POSIX 正则表达式库和一些经典的正则表达式库。</p>
</blockquote>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\</code></td>
<td><strong>将下一个字符标记为一个特殊字符、或一个原义字符</strong>。例如，“<code>n</code>”匹配字符“n”。“<code>\n</code>”匹配一个换行符。序列“<code>\\</code>”匹配“\”而“<code>\(</code>”则匹配“(”。</td>
</tr>
<tr>
<td><code>^</code></td>
<td><strong>匹配输入字符串的开始位置</strong>。</td>
</tr>
<tr>
<td><code>$</code></td>
<td><strong>匹配输入字符串的结束位置</strong>。</td>
</tr>
<tr>
<td><code>{n}</code></td>
<td>n是一个非负整数。<strong>匹配确定的n次</strong>。例如，“<code>o{2}</code>”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。</td>
</tr>
<tr>
<td><code>{n,}</code></td>
<td>n是一个非负整数。<strong>至少匹配n次</strong>。例如，“<code>o{2,}</code>”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“<code>o{1,}</code>”等价于“<code>o+</code>”。“<code>o{0,}</code>”则等价于“<code>o*</code>”。</td>
</tr>
<tr>
<td><code>{n,m}</code></td>
<td>m和n均为非负整数，其中n&lt;=m。<strong>最少匹配n次且最多匹配m次</strong>。例如，“<code>o{1,3}</code>”将匹配“fooooood”中的前三个o。“<code>o{0,1}</code>”等价于“o?”。请注意在逗号和两个数之间不能有空格。</td>
</tr>
<tr>
<td><code>*</code></td>
<td><strong>匹配前面的子表达式零次或多次</strong>。例如，<code>zo*</code>能匹配“z”、“zo”以及“zoo”。<code>*</code>等价于<code>{0,}</code>。</td>
</tr>
<tr>
<td><code>+</code></td>
<td><strong>匹配前面的子表达式一次或多次</strong>。例如，“<code>zo+</code>”能匹配“zo”以及“zoo”，但不能匹配“z”。<code>+</code>等价于<code>{1,}</code>。</td>
</tr>
<tr>
<td><code>?</code></td>
<td><strong>匹配前面的子表达式零次或一次</strong>。例如，“<code>do(es)?</code>”可以匹配“do”或“does”中的“do”。<code>?</code>等价于<code>{0,1}</code>。</td>
</tr>
<tr>
<td><code>?</code></td>
<td><strong>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的</strong>。<strong>非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串</strong>。例如，对于字符串“oooo”，“<code>o+?</code>”将匹配单个“o”，而“<code>o+</code>”将匹配所有“o”。</td>
</tr>
<tr>
<td><code>.</code></td>
<td><strong>匹配除“<code>\n</code>”之外的任何单个字符</strong>。要匹配包括“<code>\n</code>”在内的任何字符，请使用像“<code>(.｜\n)</code>”的模式。</td>
</tr>
<tr>
<td><code>(pattern)</code></td>
<td><strong>匹配pattern并获取这一匹配的子字符串</strong>。该子字符串用于向后引用。要匹配圆括号字符，请使用“<code>\(</code>”或“<code>\)</code>”。</td>
</tr>
<tr>
<td><code>x｜y</code></td>
<td><strong>匹配x或y</strong>。例如，“<code>z｜food</code>”能匹配“z”或“food”。“<code>(z｜f)ood</code>”则匹配“zood”或“food”。</td>
</tr>
<tr>
<td><code>[xyz]</code></td>
<td>字符集合（character class）。<strong>匹配所包含的任意一个字符</strong>。例如，“<code>[abc]</code>”可以匹配“plain”中的“a”。其中特殊字符仅有反斜线<code>\</code>保持特殊含义，用于转义字符。其它特殊字符如星号、加号、各种括号等均作为普通字符。脱字符^如果出现在首位则表示负值字符集合；如果出现在字符串中间就仅作为普通字符。连字符 - 如果出现在字符串中间表示字符范围描述；如果如果出现在首位则仅作为普通字符。</td>
</tr>
<tr>
<td><code>[^xyz]</code></td>
<td>排除型（negate）字符集合。<strong>匹配未列出的任意字符</strong>。例如，“<code>[^abc]</code>”可以匹配“plain”中的“plin”。</td>
</tr>
<tr>
<td><code>[a-z]</code></td>
<td>字符范围。<strong>匹配指定范围内的任意字符</strong>。例如，“<code>[a-z]</code>”可以匹配“a”到“z”范围内的任意小写字母字符。</td>
</tr>
<tr>
<td><code>[^a-z]</code></td>
<td>排除型的字符范围。<strong>匹配任何不在指定范围内的任意字符</strong>。例如，“<code>[^a-z]</code>”可以匹配任何不在“a”到“z”范围内的任意字符。</td>
</tr>
</tbody>
</table>
<p>正则式的思维导图：</p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/RegularExpression.png" alt="regexMindmap"></p>
<h3 id="grep模式匹配命令"><a href="#grep模式匹配命令" class="headerlink" title="grep模式匹配命令"></a>grep模式匹配命令</h3><p><code>grep</code>命令用于打印输出文本中匹配的模式串，它使用正则表达式作为模式匹配的条件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 将匹配以'z'开头以'o'结尾的所有字符串</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'zero\nzo\nzoo'</span> | grep <span class="string">'z.*o'</span></div><div class="line"><span class="comment"># 将匹配以'z'开头以'o'结尾，中间包含一个任意字符的字符串</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'zero\nzo\nzoo'</span> | grep <span class="string">'z.o'</span></div><div class="line"><span class="comment"># 将匹配以'z'开头,以任意多个'o'结尾的字符串</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'zero\nzo\nzoo'</span> | grep <span class="string">'zo*'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>注意：其中<code>\n</code>为换行符</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># grep默认是区分大小写的，这里将匹配所有的小写字母</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[a-z]'</span></div><div class="line"><span class="comment"># 将匹配所有的数字</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[0-9]'</span></div><div class="line"><span class="comment"># 将匹配所有的数字</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[[:digit:]]'</span></div><div class="line"><span class="comment"># 将匹配所有的小写字母</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[[:lower:]]'</span></div><div class="line"><span class="comment"># 将匹配所有的大写字母</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[[:upper:]]'</span></div><div class="line"><span class="comment"># 将匹配所有的字母和数字，包括0-9,a-z,A-Z</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[[:alnum:]]'</span></div><div class="line"><span class="comment"># 将匹配所有的字母</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'1234\nabcd'</span> | grep <span class="string">'[[:alpha:]]'</span></div></pre></td></tr></table></figure>
<p>要通过<code>grep</code>使用<strong>扩展正则表达式</strong>需要加上<code>-E</code>参数，或使用<code>egrep</code>。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 只匹配"zo"</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'zero\nzo\nzoo'</span> | grep -E <span class="string">'zo&#123;1&#125;'</span></div><div class="line"><span class="comment"># 匹配以"zo"开头的所有单词</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'zero\nzo\nzoo'</span> | grep -E <span class="string">'zo&#123;1,&#125;'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>注意：推荐掌握<code>{n,m}</code>即可，<code>+,?,*</code>，这几个不太直观，且容易弄混淆。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 匹配"www.shiyanlou.com"和"www.google.com"</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'www.shiyanlou.com\nwww.baidu.com\nwww.google.com'</span> | grep -E <span class="string">'www\.(shiyanlou|google)\.com'</span></div><div class="line"><span class="comment"># 或者匹配不包含"baidu"的内容</span></div><div class="line">$ <span class="built_in">echo</span> <span class="string">'www.shiyanlou.com\nwww.baidu.com\nwww.google.com'</span> | grep -Ev <span class="string">'www\.baidu\.com'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>注意：因为<code>.</code>号有特殊含义，所以需要转义。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;笔记来源于&lt;a href=&quot;http://www.shiyanlou.com&quot;&gt;实验楼&lt;/a&gt;的Linux基础教程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一、Linux学习路线&quot;&gt;&lt;a href=&quot;#一、Linux学习路线&quot; class=&quot;headerlink&quot; title=&quot;一、Linux学习路线&quot;&gt;&lt;/a&gt;一、Linux学习路线&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/linux_base/1-8.png&quot; alt=&quot;LinuxRoute&quot;&gt;&lt;/p&gt;
&lt;p&gt;Unix族谱：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/linux_base/1-9.svg&quot; alt=&quot;UnixFamily&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://kchen.cc/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 配置同步</title>
    <link href="http://kchen.cc/2016/04/09/sublime-text-3-settings-sync/"/>
    <id>http://kchen.cc/2016/04/09/sublime-text-3-settings-sync/</id>
    <published>2016-04-09T07:48:00.000Z</published>
    <updated>2016-06-16T14:26:39.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>你是否有过Sublime Text 3 在各台机器下的配置不能同步而带来的种种困扰？ 你是否想过能够随便打开一台电脑都有自己熟悉的Editor环境？下面我利用官方推荐的方法，教大家同步自己的配置。</p>
<blockquote>
<p>Sublime新人们，我已经为你们打造了一个包含一些基本（主要）插件的配置环境，可以方便<code>Java</code>、<code>Python</code>以及<code>前端</code>开发人员使用，具体使用的插件请详见后面。</p>
</blockquote>
<h2 id="部署教程"><a href="#部署教程" class="headerlink" title="部署教程"></a>部署教程</h2><h3 id="Fork我的仓库"><a href="#Fork我的仓库" class="headerlink" title="Fork我的仓库"></a>Fork我的仓库</h3><p><a href="https://coding.net/u/quentinchen/p/User/git" target="_blank" rel="external">点击进入仓库地址</a></p>
<p>把我的仓库fork到你自己的仓库（coding.net或者github都是可以的）里面去，以后就在自己的仓库下进行<code>push</code>和<code>pull</code>操作保持配置的同步了。</p>
<a id="more"></a>
<blockquote>
<p>不太熟悉Git的小伙伴，如果想偷个懒直接使用我的配置，可以直接点击仓库里的<a href="https://coding.net/u/quentinchen/p/User/git/archive/master" target="_blank" rel="external">下载</a>来代替后面的<code>git clone</code>部分。</p>
</blockquote>
<h3 id="安装-ST3"><a href="#安装-ST3" class="headerlink" title="安装 ST3"></a>安装 ST3</h3><p>首先到<a href="https://www.sublimetext.com/3" target="_blank" rel="external">官网</a>下载最新版的Sublime Text 3。</p>
<blockquote>
<p>注意：Sublime Text 2 的操作会有不同，因为ST3各方面都超过了ST2，如果不是因为某些特殊的插件必须使用在ST2下的话，建议大家都直接使用ST3。目前为止ST3依旧采用无限免费试用的策略，而购买一个license的价格是70美元。</p>
</blockquote>
<h3 id="安装Package-Control"><a href="#安装Package-Control" class="headerlink" title="安装Package Control"></a>安装Package Control</h3><p>打开Sublime Text 3，在主界面下按<code>ctrl+~</code>（反撇）（Windows）或者<code>command+~</code>（Mac OS X），在底部出现的command panel中键入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import urllib.request,os,hashlib; h = &apos;2915d1851351e5ee549c20394736b442&apos; + &apos;8bc59f460fa1548d1514676163dafc88&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)</div></pre></td></tr></table></figure>
<p>等待Package Control安装完成。</p>
<p>在主界面下按<code>ctrl+shift+p</code>（Windows）或者<code>command+shift+p</code>（Mac OS X），键入<code>pci</code>，如果出现package control: install，说明已经安装完成。</p>
<h3 id="同步设置"><a href="#同步设置" class="headerlink" title="同步设置"></a>同步设置</h3><p>在主界面菜单栏单击<code>Preference-&gt;Browse Packages</code>打开配置文件夹，删除目录下的<code>User</code>文件夹，在目录下执行Git命令（Mac或者Linux用户使用terminal，Windows用户使用Git Bash）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https://your_repo/User.git</div><div class="line">//此处的https://your_repo是你fork我的仓库过去之后的仓库地址</div><div class="line">//可以是https协议的，也可以是ssh协议的</div></pre></td></tr></table></figure>
<p>重启ST3(重启之后由于各个插件下载的顺序不一致，可能会出现一些奇怪的错误，不用担心，等插件下载完毕之后再次重启ST3即可)即可完成和我的仓库配置同步。</p>
<h3 id="关于配色"><a href="#关于配色" class="headerlink" title="关于配色"></a>关于配色</h3><p>配色我使用了当先十分流行的SpaceGray的dark模式，由于我编辑了BracketHighlighter插件的配色，所以需要将<code>User</code>目录下的<code>Theme - Spacegray.sublime-package</code>文件复制到与<code>Packages</code>目录同级的<code>Installed Packages</code>目录下，这样，括号的配色也就实现了。</p>
<p>为了使用我的主题配色和括号匹配配色，请在菜单栏单击<code>preference-&gt;Color Scheme-&gt;Theme - Spacegray-&gt;base16-ocean.dark</code>以选择配色。</p>
<blockquote>
<p>Windows用户最好将字体换成<code>consolas</code>，我在Mac下使用的字体是<code>Monaco</code>。</p>
</blockquote>
<p>SpaceGray配色如下：</p>
<p><img src="https://packagecontrol.io/readmes/img/d0545a784bcadd0df626c55ef74954eeffc44b63.png" alt=""></p>
<p>BracketHighlighter 括号高亮的配色如下：</p>
<p><img src="https://packagecontrol.io/readmes/img/2c23129492d6d74b8f9139711578e9ad0d1115a0.png" alt=""></p>
<h2 id="插件说明"><a href="#插件说明" class="headerlink" title="插件说明"></a>插件说明</h2><p>目前为止，我在ST3上安装的插件有：</p>
<ul>
<li>Anaconda：Python IDE</li>
<li>BracketHighlighter：括号匹配</li>
<li>Codecs33</li>
<li>Color Highlighter：css颜色高亮</li>
<li>ColorPicker：取色器</li>
<li>ConvertToUTF8：将中文韩文等转换为UTF-8编码</li>
<li>DocBlockr：块注释</li>
<li>Emmet：前段代码展开工具</li>
<li>GitGutter：支持代码改动标识</li>
<li>MarkdownEditing：Markdown语法高亮</li>
<li>Package Control</li>
<li>SideBarEnhancements：文件夹侧边增强</li>
<li>Theme - Spacegray</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你是否有过Sublime Text 3 在各台机器下的配置不能同步而带来的种种困扰？ 你是否想过能够随便打开一台电脑都有自己熟悉的Editor环境？下面我利用官方推荐的方法，教大家同步自己的配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sublime新人们，我已经为你们打造了一个包含一些基本（主要）插件的配置环境，可以方便&lt;code&gt;Java&lt;/code&gt;、&lt;code&gt;Python&lt;/code&gt;以及&lt;code&gt;前端&lt;/code&gt;开发人员使用，具体使用的插件请详见后面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;部署教程&quot;&gt;&lt;a href=&quot;#部署教程&quot; class=&quot;headerlink&quot; title=&quot;部署教程&quot;&gt;&lt;/a&gt;部署教程&lt;/h2&gt;&lt;h3 id=&quot;Fork我的仓库&quot;&gt;&lt;a href=&quot;#Fork我的仓库&quot; class=&quot;headerlink&quot; title=&quot;Fork我的仓库&quot;&gt;&lt;/a&gt;Fork我的仓库&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://coding.net/u/quentinchen/p/User/git&quot;&gt;点击进入仓库地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把我的仓库fork到你自己的仓库（coding.net或者github都是可以的）里面去，以后就在自己的仓库下进行&lt;code&gt;push&lt;/code&gt;和&lt;code&gt;pull&lt;/code&gt;操作保持配置的同步了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Sublime Text" scheme="http://kchen.cc/tags/Sublime-Text/"/>
    
  </entry>
  
  <entry>
    <title>利用Alfred Workflow快速上传粘贴板图片至七牛图床并在Markdown中引用</title>
    <link href="http://kchen.cc/2016/03/19/alfred-workflow-for-markdown-image-on-qiniu/"/>
    <id>http://kchen.cc/2016/03/19/alfred-workflow-for-markdown-image-on-qiniu/</id>
    <published>2016-03-20T05:51:00.000Z</published>
    <updated>2016-03-19T15:04:45.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>Markdown最大的缺陷就是不能方便的在文章中插入本地图片，所以通常情况下我们需要一个好的图床来帮助我们，国内现在使用体验最佳的图床就是七牛云存储，但是为了插入一张图片我们通常需要做的事情是：</p>
<ul>
<li>截个图存在桌面</li>
<li>打开七牛云存储的网站，上传图片</li>
<li>复制图片地址</li>
<li>在Markdown中使用<code>![]()</code>语法调用图片插入</li>
<li>填写图片地址</li>
<li>如果你使用原图保护功能，还需要自己添加样式符</li>
</ul>
<p>为了一张插入图片，真是心力交瘁。如果插入量巨大，真是不堪重负。所以我们需要使用一个工作流来一键帮我们完成这些复杂的机械化的工作。本教程<strong>实现的目标</strong>是：</p>
<ul>
<li>截图到粘贴板</li>
<li>快捷键插入到Markdown文本</li>
</ul>
<p>中途甚至不需要任何与编辑文本无关的工作，让你专心写作！</p>
<a id="more"></a>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>因为本方法用到了<a href="https://www.alfredapp.com" target="_blank" rel="external">Alfred</a>的PowerPackage扩展功能，所以你需要首先内（po）购（jie）其高级功能。</p>
<p>然后另一个准备工作就是七牛云存储了，到七牛云存储的<a href="https://portal.qiniu.com/signup?code=3lj4rde88jpzm" target="_blank" rel="external">官网</a>注册一个账号，开始使用。关于七牛云存储的一些设置，在这里我想说一下：</p>
<h3 id="七牛云存储的设置"><a href="#七牛云存储的设置" class="headerlink" title="七牛云存储的设置"></a>七牛云存储的设置</h3><p>在你的空间的<strong>数据处理</strong>中应该配置好「图片样式」：新建图片样式。</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/4be39d7cf43e26849216aa2a61709d8c.png-960.jpg" alt="style" title="图片样式"></p>
<p>使用图片样式的好处是你可以根据需求插入不同大小的图片，毕竟<strong>Markdown是没有图片编辑和调整功能</strong>的。我设置了如下的样式：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/dbf2f0ee3a25351f3b2d8490a155eff8.png-960.jpg" alt="style" title="图片样式"></p>
<p>这样我可以通过样式分割符合样式<code>-480.jpg</code>、<code>-960.jpg</code>、<code>-1920.jpg</code>调用不同大小的图片插入到文章中了。</p>
<h3 id="配置七牛云存储文件同步"><a href="#配置七牛云存储文件同步" class="headerlink" title="配置七牛云存储文件同步"></a>配置七牛云存储文件同步</h3><blockquote>
<p><strong>QRSync</strong>是七牛云存储提供的同步上传客户端工具，可以用于Linux、Mac OS X、Windows等操作系统。使用QRSync，可将用户本地某个目录的所有文件同步上传到七牛云存储中，同时支持增量上传，可以只将目录中新增的文件上传至七牛云存储。 </p>
</blockquote>
<p>首先，下载QRSBox</p>
<ul>
<li>Mac OS X: <a href="http://devtools.qiniu.com/qiniu-devtools-darwin_amd64-current.tar.gz" target="_blank" rel="external">qrsynccli darwin_amd64</a></li>
<li>Linux 64bits: <a href="http://devtools.qiniu.com/qiniu-devtools-linux_amd64-current.tar.gz" target="_blank" rel="external">qrsyncli linux_amd64</a></li>
<li>Linux 32bits: <a href="http://devtools.qiniu.com/qiniu-devtools-linux_386-current.tar.gz" target="_blank" rel="external">qrsyncli linux_386</a></li>
</ul>
<p>然后在你希望同步的文件夹下创建以下两个目录</p>
<ul>
<li><code>CLI</code> ： 用于存放QRSync命令脚本</li>
<li><code>Data</code> ： 用于存放需要同步的图片、文件等</li>
</ul>
<p>把下载好的QRSync解压后所有文件放到<code>CLI</code>目录下，在<code>CLI</code>目录下新建<code>conf.json</code>文件包含以下内容：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"src"</span>: <span class="string">"/home/your/sync_dir/Data"</span>,</div><div class="line">    <span class="attr">"dest"</span>: <span class="string">"qiniu:access_key=&lt;AccessKey&gt;&amp;secret_key=&lt;SecretKey&gt;&amp;bucket=&lt;Bucket&gt;&amp;key_prefix=&lt;KeyPrefix&gt;"</span>,</div><div class="line">    <span class="attr">"debug_level"</span>: <span class="number">1</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><code>src</code>是本地的同步目录<code>Data</code>，该目录下的文件会随时同步上传至七牛云存储。</li>
<li><code>AccessKey</code> 和 <code>SecretKey</code> 需要在七牛云存储平台上申请<ol>
<li>开通<a href="https://portal.qiniu.com/signup" target="_blank" rel="external">七牛开发者帐号</a></li>
<li>登录七牛开发者平台，<a href="https://portal.qiniu.com/user/key" target="_blank" rel="external">查看 Access Key 和 Secret Key</a></li>
</ol>
</li>
<li><p><code>&lt;Bucket&gt;</code> 是保存同步文件的资源空间名。</p>
</li>
<li><p><code>&lt;KeyPrefix&gt;</code> 是文件前缀，可选。如果设置了该参数，那么上传的文件名前都会加上前缀。这个前缀主要用于在空间中区分不同上传来源的文件。</p>
</li>
</ul>
<p>配置完成后，在<code>CLI</code>目录下就可以随时使用如下命令来同步文件夹了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./qrsync conf.json</div></pre></td></tr></table></figure>
<blockquote>
<p>另一个可以使用的工具是<strong>QRSBox</strong>，其支持后台实时监控目录，当有新文件加入到同步目录的时候，就会自动上传到相应的空间。但截止到我测试时（2016年3月19日）QRSBox仍有一些Bug导致工作流无法工作，所以我选择了更加可靠的QRSync。</p>
</blockquote>
<h3 id="配置WorkFlow"><a href="#配置WorkFlow" class="headerlink" title="配置WorkFlow"></a>配置WorkFlow</h3><p>下面我们来配置WorkFlow工作流来让一切变得自动化起来，首先打开Alfred，进入Workflow，并且创建一个空白的工作流：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/b7ca368796817f6641eb530779170cb9.png-960.jpg" alt=""></p>
<p>然后添加一个热键，我选择的是<code>⌘</code>+<code>⇧</code>+<code>V</code>，这样和我的Annotate截屏快捷键<code>⌘</code>+<code>⇧</code>+<code>A</code>正好形成一对：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/78fcbef093b58a4b5d7d559414087555.png-960.jpg" alt="hotkey" title="HotKey"></p>
<p>然后添加一个action，选择<code>osascript</code>作为脚本语言</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/ce75233c28ac53e40fa1905f6834918d.png-960.jpg" alt=""></p>
<p>我们添加如下脚本：</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">property</span> fileTypes : &#123;¬</div><div class="line">	&#123;«<span class="built_in">class</span> PNGf», <span class="string">".png"</span>&#125;, ¬</div><div class="line">	&#123;JPEG picture, <span class="string">".jpg"</span>&#125;&#125;</div><div class="line"></div><div class="line"><span class="keyword">on</span> getType()</div><div class="line">	<span class="keyword">repeat</span> <span class="keyword">with</span> aType <span class="keyword">in</span> fileTypes</div><div class="line">		<span class="keyword">repeat</span> <span class="keyword">with</span> theInfo <span class="keyword">in</span> (<span class="built_in">clipboard info</span>)</div><div class="line">			<span class="keyword">if</span> (<span class="keyword">first</span> <span class="built_in">item</span> <span class="keyword">of</span> theInfo) <span class="keyword">is</span> <span class="keyword">equal</span> <span class="keyword">to</span> (<span class="keyword">first</span> <span class="built_in">item</span> <span class="keyword">of</span> aType) <span class="keyword">then</span> <span class="literal">return</span> aType</div><div class="line">		<span class="keyword">end</span> <span class="keyword">repeat</span></div><div class="line">	<span class="keyword">end</span> <span class="keyword">repeat</span></div><div class="line"><span class="built_in">	return</span> <span class="literal">missing value</span></div><div class="line"><span class="keyword">end</span> getType</div><div class="line"></div><div class="line"><span class="keyword">set</span> theType <span class="keyword">to</span> getType()</div><div class="line"></div><div class="line"><span class="keyword">if</span> theType <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">missing value</span> <span class="keyword">then</span></div><div class="line">	<span class="keyword">set</span> filePath <span class="keyword">to</span> <span class="string">"/Users/quentin/Documents/Qiniu/Data/"</span> <span class="comment">--这里换成你自己放置图片的路径</span></div><div class="line">	<span class="keyword">set</span> fileName <span class="keyword">to</span> <span class="built_in">do shell script</span> <span class="string">"date \"+%Y%m%d%H%M%S\" | md5"</span> <span class="comment">--用当前时间的md5值做文件名</span></div><div class="line">	<span class="keyword">if</span> fileName <span class="keyword">does</span> <span class="keyword">not</span> <span class="keyword">end</span> <span class="keyword">with</span> (<span class="keyword">second</span> <span class="built_in">item</span> <span class="keyword">of</span> theType) <span class="keyword">then</span> <span class="keyword">set</span> fileName <span class="keyword">to</span> (fileName &amp; <span class="keyword">second</span> <span class="built_in">item</span> <span class="keyword">of</span> theType <span class="keyword">as</span> <span class="built_in">text</span>)</div><div class="line">	<span class="keyword">set</span> markdownUrl <span class="keyword">to</span> <span class="string">"![](http://7xin49.com1.z0.glb.clouddn.com/"</span> &amp; fileName &amp; <span class="string">"-960.jpg)"</span> <span class="comment">--这里是你的七牛域名和设置的图片样式</span></div><div class="line">	<span class="keyword">set</span> filePath <span class="keyword">to</span> filePath &amp; fileName</div><div class="line">	</div><div class="line">	<span class="keyword">try</span></div><div class="line">		<span class="keyword">set</span> imageFile <span class="keyword">to</span> (<span class="built_in">open for access</span> filePath <span class="keyword">with</span> <span class="built_in">write</span> permission)</div><div class="line">		<span class="built_in">set eof</span> imageFile <span class="keyword">to</span> <span class="number">0</span></div><div class="line">		<span class="built_in">write</span> (<span class="built_in">the clipboard</span> <span class="keyword">as</span> (<span class="keyword">first</span> <span class="built_in">item</span> <span class="keyword">of</span> theType)) <span class="keyword">to</span> imageFile</div><div class="line">		<span class="built_in">close access</span> imageFile</div><div class="line">		<span class="keyword">set</span> <span class="built_in">the clipboard</span> <span class="keyword">to</span> markdownUrl</div><div class="line">		<span class="keyword">try</span></div><div class="line">			<span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"System Events"</span></div><div class="line">				keystroke <span class="string">"v"</span> using command down</div><div class="line">			<span class="keyword">end</span> <span class="keyword">tell</span></div><div class="line">		<span class="keyword">end</span> <span class="keyword">try</span></div><div class="line">		<span class="built_in">do shell script</span> <span class="string">"/Users/quentin/Documents/Qiniu/CLI/qrsync /Users/quentin/Documents/Qiniu/CLI/conf.json"</span> <span class="comment">--此处是你的QRSync脚本目录和命令</span></div><div class="line">	<span class="keyword">on</span> <span class="keyword">error</span></div><div class="line">		<span class="keyword">try</span></div><div class="line">			<span class="built_in">close access</span> imageFile</div><div class="line">		<span class="keyword">end</span> <span class="keyword">try</span></div><div class="line"><span class="built_in">		return</span> <span class="string">""</span></div><div class="line">	<span class="keyword">end</span> <span class="keyword">try</span></div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="built_in">	return</span> <span class="string">""</span></div><div class="line"><span class="keyword">end</span> <span class="keyword">if</span></div></pre></td></tr></table></figure>
<p>代码中有<strong>4处需要替换修改地方</strong>：</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> filePath <span class="keyword">to</span> <span class="string">"/Users/quentin/Documents/Qiniu/Data/"</span></div></pre></td></tr></table></figure>
<p>换成你自己设定的同步目录。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> markdownUrl <span class="keyword">to</span> <span class="string">"![](http://7xin49.com1.z0.glb.clouddn.com/"</span> &amp; fileName &amp; <span class="string">"-960.jpg)"</span></div></pre></td></tr></table></figure>
<p>设定成你的七牛空间域名：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/fbb46f61dcd1b87b7328b939cf79c6ee.png-960.jpg" alt=""></p>
<p>注意如果你在设置QRSync时预设了<code>&lt;KeyPrefix&gt;</code>前缀，记得在域名后面补上。另外再加上自己设定的图片样式<code>-960.jpg</code>，我在样式中自带了一个统一的文件后缀<code>.jpg</code>是为了让Markdown编辑器知道这是一个图片链接。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">do shell script</span> <span class="string">"/Users/quentin/Documents/Qiniu/CLI/qrsync /Users/quentin/Documents/Qiniu/CLI/conf.json"</span></div></pre></td></tr></table></figure>
<p>换成你的QRSync的命令脚本目录即可。</p>
<p>然后，添加一个通知，让我们得到上传成功的反馈：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/1fd5378d66501b4039dfb49e8027a94b.png-960.jpg" alt=""></p>
<p>最后，把Trigger、Action和Notification用线连起来，就大功告成了：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/8134b421b50a8cc1ef3901bc7d560a52.png-960.jpg" alt=""></p>
<p>现在，你只需要</p>
<h3 id="额外的同步工作流"><a href="#额外的同步工作流" class="headerlink" title="额外的同步工作流"></a>额外的同步工作流</h3><p>此外，我再提供一个额外的工作流来负责同步目录到七牛云存储，针对那些直接复制到同步目录下的文件。另建一个Workflow，如图所示：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/53b405507e35f3ad39a96d62c20370d2.png-960.jpg" alt=""></p>
<p>使用你喜欢的HotKey来启动上传，然后使用bash语言键入以下script：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Users/quentin/Documents/Qiniu/CLI/qrsync /Users/quentin/Documents/Qiniu/CLI/conf.json</div></pre></td></tr></table></figure>
<p>同样，把相应目录改成你自己的QRSync命令脚本目录就可以了。</p>
<p><strong>注意</strong>：当上一个工作流没有成功上传时，可以使用这个工作流再次上传。</p>
<h3 id="直接下载"><a href="#直接下载" class="headerlink" title="直接下载"></a>直接下载</h3><p>我把自己写好的WorkFlow上传到百度云了，你也可以自己下载，然后修改参数直接使用，传送门：</p>
<p><a href="http://pan.baidu.com/s/1mhv4qTE" target="_blank" rel="external">百度网盘下载</a>  密码：q3cd</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;应用场景&quot;&gt;&lt;a href=&quot;#应用场景&quot; class=&quot;headerlink&quot; title=&quot;应用场景&quot;&gt;&lt;/a&gt;应用场景&lt;/h2&gt;&lt;p&gt;Markdown最大的缺陷就是不能方便的在文章中插入本地图片，所以通常情况下我们需要一个好的图床来帮助我们，国内现在使用体验最佳的图床就是七牛云存储，但是为了插入一张图片我们通常需要做的事情是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;截个图存在桌面&lt;/li&gt;
&lt;li&gt;打开七牛云存储的网站，上传图片&lt;/li&gt;
&lt;li&gt;复制图片地址&lt;/li&gt;
&lt;li&gt;在Markdown中使用&lt;code&gt;![]()&lt;/code&gt;语法调用图片插入&lt;/li&gt;
&lt;li&gt;填写图片地址&lt;/li&gt;
&lt;li&gt;如果你使用原图保护功能，还需要自己添加样式符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了一张插入图片，真是心力交瘁。如果插入量巨大，真是不堪重负。所以我们需要使用一个工作流来一键帮我们完成这些复杂的机械化的工作。本教程&lt;strong&gt;实现的目标&lt;/strong&gt;是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;截图到粘贴板&lt;/li&gt;
&lt;li&gt;快捷键插入到Markdown文本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中途甚至不需要任何与编辑文本无关的工作，让你专心写作！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Alfred" scheme="http://kchen.cc/tags/Alfred/"/>
    
      <category term="七牛" scheme="http://kchen.cc/tags/%E4%B8%83%E7%89%9B/"/>
    
      <category term="图床" scheme="http://kchen.cc/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="Markdown" scheme="http://kchen.cc/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法分析（一）：基础算法分析</title>
    <link href="http://kchen.cc/2016/01/28/data-structures-and-algorithm-analysis-1/"/>
    <id>http://kchen.cc/2016/01/28/data-structures-and-algorithm-analysis-1/</id>
    <published>2016-01-28T08:20:00.000Z</published>
    <updated>2016-06-15T04:42:40.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>由于 Hexo 对 Math 的显示效果不佳，请移步到下方链接阅读这篇博客：</p>
<p><a href="https://www.zybuluo.com/fyywy520/note/277242" target="_blank" rel="external">数据结构与算法分析（一）：基础算法分析</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;由于 Hexo 对 Math 的显示效果不佳，请移步到下方链接阅读这篇博客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/fyywy520
    
    </summary>
    
    
      <category term="数据结构" scheme="http://kchen.cc/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://kchen.cc/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="java" scheme="http://kchen.cc/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>通过路由表进行VPN国内外分流的办法</title>
    <link href="http://kchen.cc/2015/12/02/vpn-shunt/"/>
    <id>http://kchen.cc/2015/12/02/vpn-shunt/</id>
    <published>2015-12-03T04:49:00.000Z</published>
    <updated>2016-06-16T14:25:25.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Chnroutes-项目"><a href="#Chnroutes-项目" class="headerlink" title="Chnroutes 项目"></a>Chnroutes 项目</h2><p><strong>教程的目的是要达到通过执行路由脚本,可以让用户在使用vpn作为默认网络网关的时候, 不使用vpn进行对中国国内ip的访问, 从而减轻vpn的负担, 和增加访问国内网站的速度。</strong></p>
<p>需要利用一个开源项目 <a href="https://github.com/fivesheep/chnroutes" target="_blank" rel="external">https://github.com/fivesheep/chnroutes</a> 这个项目提供了可以直接使用的路由表和简易教程。</p>
<h2 id="Mac用户的安装"><a href="#Mac用户的安装" class="headerlink" title="Mac用户的安装"></a>Mac用户的安装</h2><ul>
<li>下载 <code>chnroutes.py</code> </li>
<li>从终端进入下载目录, 执 <code>python chnroutes.py -p mac</code> , 执行完毕之后同一目录下将生成两个文件 <code>ip-up</code> 和 <code>ip-down</code></li>
<li>把这两个文件copy到 <code>/etc/ppp</code> 目录, 并使用 <code>sudo chmod a+x ip-up ip-down</code> 命令把它们设置为可执行</li>
<li>设置完毕, 重新连接vpn</li>
</ul>
<h2 id="Windows用户的安装"><a href="#Windows用户的安装" class="headerlink" title="Windows用户的安装"></a>Windows用户的安装</h2><ul>
<li>下载 <code>chnroutes.py</code></li>
<li>从终端进入下载目录, 执行 python chnroutes.py -p win, 执行之后会生成 <code>vpnup.bat</code> 和 <code>vpndown.bat</code> 两个文件.</li>
</ul>
<blockquote>
<p>由于Windows上的pptp不支持拨号脚本, 所以也只能在进行拨号之前手动执行 <code>vpnup.bat</code> 文件以设置路由表. 而在断开vpn之后, 如果你觉得有必要, 可以运行 <code>vpndown.bat</code> 把这些路由信息给清理掉.</p>
</blockquote>
<a id="more"></a>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>连接VPN后打开<a href="http://www.ip138.com/" target="_blank" rel="external">http://www.ip138.com/</a> 和 <a href="https://www.whatismyip.com/" target="_blank" rel="external">https://www.whatismyip.com/</a></p>
</blockquote>
<p>前者会显示你的国内上网ip，后者会显示你国外VPN的ip</p>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul>
<li>路由表每隔两三个月需要更新一次</li>
</ul>
<p><strong>另外，对于Windows的用户而言：</strong></p>
<ul>
<li><p>重启后添加的所有规则会失效<br>可以替换bat中「route add」为「route -p add」设置永久路由。<br>使用一个叫SetRoute的软件，可以备份系统当前路由表方便下次使用。</p>
</li>
<li><p>批处理运行速度过慢。<br>因为需要一次性添加几千行，会比较慢，办法可以参考上面的两个办法，慢就慢一次。</p>
</li>
</ul>
<h2 id="chnroutes-py"><a href="#chnroutes-py" class="headerlink" title="chnroutes.py"></a>chnroutes.py</h2><p>文件源码如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> argparse</div><div class="line"><span class="keyword">import</span> math</div><div class="line"><span class="keyword">import</span> textwrap</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_ovpn</span><span class="params">(metric)</span>:</span></div><div class="line">    results = fetch_ip_data()  </div><div class="line">    rfile=open(<span class="string">'routes.txt'</span>,<span class="string">'w'</span>)</div><div class="line">    <span class="keyword">for</span> ip,mask,_ <span class="keyword">in</span> results:</div><div class="line">        route_item=<span class="string">"route %s %s net_gateway %d\n"</span>%(ip,mask,metric)</div><div class="line">        rfile.write(route_item)</div><div class="line">    rfile.close()</div><div class="line">    <span class="keyword">print</span> <span class="string">"Usage: Append the content of the newly created routes.txt to your openvpn config file,"</span> \</div><div class="line">          <span class="string">" and also add 'max-routes %d', which takes a line, to the head of the file."</span> % (len(results)+<span class="number">20</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_linux</span><span class="params">(metric)</span>:</span></div><div class="line">    results = fetch_ip_data()</div><div class="line">    upscript_header=textwrap.dedent(<span class="string">"""\</span></div><div class="line">    #!/bin/bash</div><div class="line">    export PATH="/bin:/sbin:/usr/sbin:/usr/bin"</div><div class="line">    </div><div class="line">    OLDGW=`ip route show | grep '^default' | sed -e 's/default via \\([^ ]*\\).*/\\1/'`</div><div class="line">    </div><div class="line">    if [ $OLDGW == '' ]; then</div><div class="line">        exit 0</div><div class="line">    fi</div><div class="line">    </div><div class="line">    if [ ! -e /tmp/vpn_oldgw ]; then</div><div class="line">        echo $OLDGW &gt; /tmp/vpn_oldgw</div><div class="line">    fi</div><div class="line">    </div><div class="line">    """)</div><div class="line">    </div><div class="line">    downscript_header=textwrap.dedent(<span class="string">"""\</span></div><div class="line">    #!/bin/bash</div><div class="line">    export PATH="/bin:/sbin:/usr/sbin:/usr/bin"</div><div class="line">    </div><div class="line">    OLDGW=`cat /tmp/vpn_oldgw`</div><div class="line">    </div><div class="line">    """)</div><div class="line">    </div><div class="line">    upfile=open(<span class="string">'ip-pre-up'</span>,<span class="string">'w'</span>)</div><div class="line">    downfile=open(<span class="string">'ip-down'</span>,<span class="string">'w'</span>)</div><div class="line">    </div><div class="line">    upfile.write(upscript_header)</div><div class="line">    upfile.write(<span class="string">'\n'</span>)</div><div class="line">    downfile.write(downscript_header)</div><div class="line">    downfile.write(<span class="string">'\n'</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> ip,mask,_ <span class="keyword">in</span> results:</div><div class="line">        upfile.write(<span class="string">'route add -net %s netmask %s gw $OLDGW\n'</span>%(ip,mask))</div><div class="line">        downfile.write(<span class="string">'route del -net %s netmask %s\n'</span>%(ip,mask))</div><div class="line"></div><div class="line">    downfile.write(<span class="string">'rm /tmp/vpn_oldgw\n'</span>)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">print</span> <span class="string">"For pptp only, please copy the file ip-pre-up to the folder/etc/ppp,"</span> \</div><div class="line">          <span class="string">"and copy the file ip-down to the folder /etc/ppp/ip-down.d."</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_mac</span><span class="params">(metric)</span>:</span></div><div class="line">    results=fetch_ip_data()</div><div class="line">    </div><div class="line">    upscript_header=textwrap.dedent(<span class="string">"""\</span></div><div class="line">    #!/bin/sh</div><div class="line">    export PATH="/bin:/sbin:/usr/sbin:/usr/bin"</div><div class="line">    </div><div class="line">    OLDGW=`netstat -nr | grep '^default' | grep -v 'ppp' | sed 's/default *\\([0-9\.]*\\) .*/\\1/' | awk '&#123;if($1)&#123;print $1&#125;&#125;'`</div><div class="line">    if [ ! -e /tmp/pptp_oldgw ]; then</div><div class="line">        echo "$&#123;OLDGW&#125;" &gt; /tmp/pptp_oldgw</div><div class="line">    fi</div><div class="line">    </div><div class="line">    dscacheutil -flushcache</div><div class="line">    route add 10.0.0.0/8 "$&#123;OLDGW&#125;"</div><div class="line">    route add 172.16.0.0/12 "$&#123;OLDGW&#125;"</div><div class="line">    route add 192.168.0.0/16 "$&#123;OLDGW&#125;"</div><div class="line">    """)</div><div class="line">    </div><div class="line">    downscript_header=textwrap.dedent(<span class="string">"""\</span></div><div class="line">    #!/bin/sh</div><div class="line">    export PATH="/bin:/sbin:/usr/sbin:/usr/bin"</div><div class="line">    </div><div class="line">    if [ ! -e /tmp/pptp_oldgw ]; then</div><div class="line">            exit 0</div><div class="line">    fi</div><div class="line">    </div><div class="line">    ODLGW=`cat /tmp/pptp_oldgw`</div><div class="line">    route delete 10.0.0.0/8 "$&#123;OLDGW&#125;"</div><div class="line">    route delete 172.16.0.0/12 "$&#123;OLDGW&#125;"</div><div class="line">    route delete 192.168.0.0/16 "$&#123;OLDGW&#125;"</div><div class="line">    """)</div><div class="line">    </div><div class="line">    upfile=open(<span class="string">'ip-up'</span>,<span class="string">'w'</span>)</div><div class="line">    downfile=open(<span class="string">'ip-down'</span>,<span class="string">'w'</span>)</div><div class="line">    </div><div class="line">    upfile.write(upscript_header)</div><div class="line">    upfile.write(<span class="string">'\n'</span>)</div><div class="line">    downfile.write(downscript_header)</div><div class="line">    downfile.write(<span class="string">'\n'</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> ip,_,mask <span class="keyword">in</span> results:</div><div class="line">        upfile.write(<span class="string">'route add %s/%s "$&#123;OLDGW&#125;"\n'</span>%(ip,mask))</div><div class="line">        downfile.write(<span class="string">'route delete %s/%s $&#123;OLDGW&#125;\n'</span>%(ip,mask))</div><div class="line">    </div><div class="line">    downfile.write(<span class="string">'\n\nrm /tmp/pptp_oldgw\n'</span>)</div><div class="line">    upfile.close()</div><div class="line">    downfile.close()</div><div class="line">    </div><div class="line">    <span class="keyword">print</span> <span class="string">"For pptp on mac only, please copy ip-up and ip-down to the /etc/ppp folder,"</span> \</div><div class="line">          <span class="string">"don't forget to make them executable with the chmod command."</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_win</span><span class="params">(metric)</span>:</span></div><div class="line">    results = fetch_ip_data()  </div><div class="line"></div><div class="line">    upscript_header=textwrap.dedent(<span class="string">"""@echo off</span></div><div class="line">    for /F "tokens=3" %%* in ('route print ^| findstr "\\&lt;0.0.0.0\\&gt;"') do set "gw=%%*"</div><div class="line">    </div><div class="line">    """)</div><div class="line">    </div><div class="line">    upfile=open(<span class="string">'vpnup.bat'</span>,<span class="string">'w'</span>)</div><div class="line">    downfile=open(<span class="string">'vpndown.bat'</span>,<span class="string">'w'</span>)</div><div class="line">    </div><div class="line">    upfile.write(upscript_header)</div><div class="line">    upfile.write(<span class="string">'\n'</span>)</div><div class="line">    upfile.write(<span class="string">'ipconfig /flushdns\n\n'</span>)</div><div class="line">    </div><div class="line">    downfile.write(<span class="string">"@echo off"</span>)</div><div class="line">    downfile.write(<span class="string">'\n'</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> ip,mask,_ <span class="keyword">in</span> results:</div><div class="line">        upfile.write(<span class="string">'route add %s mask %s %s metric %d\n'</span>%(ip,mask,<span class="string">"%gw%"</span>,metric))</div><div class="line">        downfile.write(<span class="string">'route delete %s\n'</span>%(ip))</div><div class="line">    </div><div class="line">    upfile.close()</div><div class="line">    downfile.close()</div><div class="line">    </div><div class="line"><span class="comment">#    up_vbs_wrapper=open('vpnup.vbs','w')</span></div><div class="line"><span class="comment">#    up_vbs_wrapper.write('Set objShell = CreateObject("Wscript.shell")\ncall objShell.Run("vpnup.bat",0,FALSE)')</span></div><div class="line"><span class="comment">#    up_vbs_wrapper.close()</span></div><div class="line"><span class="comment">#    down_vbs_wrapper=open('vpndown.vbs','w')</span></div><div class="line"><span class="comment">#    down_vbs_wrapper.write('Set objShell = CreateObject("Wscript.shell")\ncall objShell.Run("vpndown.bat",0,FALSE)')</span></div><div class="line"><span class="comment">#    down_vbs_wrapper.close()</span></div><div class="line">    </div><div class="line">    <span class="keyword">print</span> <span class="string">"For pptp on windows only, run vpnup.bat before dialing to vpn,"</span> \</div><div class="line">          <span class="string">"and run vpndown.bat after disconnected from the vpn."</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_android</span><span class="params">(metric)</span>:</span></div><div class="line">    results = fetch_ip_data()</div><div class="line">    </div><div class="line">    upscript_header=textwrap.dedent(<span class="string">"""\</span></div><div class="line">    #!/bin/sh</div><div class="line">    alias nestat='/system/xbin/busybox netstat'</div><div class="line">    alias grep='/system/xbin/busybox grep'</div><div class="line">    alias awk='/system/xbin/busybox awk'</div><div class="line">    alias route='/system/xbin/busybox route'</div><div class="line">    </div><div class="line">    OLDGW=`netstat -rn | grep ^0\.0\.0\.0 | awk '&#123;print $2&#125;'`</div><div class="line">    </div><div class="line">    """)</div><div class="line">    </div><div class="line">    downscript_header=textwrap.dedent(<span class="string">"""\</span></div><div class="line">    #!/bin/sh</div><div class="line">    alias route='/system/xbin/busybox route'</div><div class="line">    </div><div class="line">    """)</div><div class="line">    </div><div class="line">    upfile=open(<span class="string">'vpnup.sh'</span>,<span class="string">'w'</span>)</div><div class="line">    downfile=open(<span class="string">'vpndown.sh'</span>,<span class="string">'w'</span>)</div><div class="line">    </div><div class="line">    upfile.write(upscript_header)</div><div class="line">    upfile.write(<span class="string">'\n'</span>)</div><div class="line">    downfile.write(downscript_header)</div><div class="line">    downfile.write(<span class="string">'\n'</span>)</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> ip,mask,_ <span class="keyword">in</span> results:</div><div class="line">        upfile.write(<span class="string">'route add -net %s netmask %s gw $OLDGW\n'</span>%(ip,mask))</div><div class="line">        downfile.write(<span class="string">'route del -net %s netmask %s\n'</span>%(ip,mask))</div><div class="line">    </div><div class="line">    upfile.close()</div><div class="line">    downfile.close()</div><div class="line">    </div><div class="line">    <span class="keyword">print</span> <span class="string">"Old school way to call up/down script from openvpn client. "</span> \</div><div class="line">          <span class="string">"use the regular openvpn 2.1 method to add routes if it's possible"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch_ip_data</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment">#fetch data from apnic</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"Fetching data from apnic.net, it might take a few minutes, please wait..."</span></div><div class="line">    url=<span class="string">r'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest'</span></div><div class="line">    data=urllib2.urlopen(url).read()</div><div class="line">    </div><div class="line">    cnregex=re.compile(<span class="string">r'apnic\|cn\|ipv4\|[0-9\.]+\|[0-9]+\|[0-9]+\|a.*'</span>,re.IGNORECASE)</div><div class="line">    cndata=cnregex.findall(data)</div><div class="line">    </div><div class="line">    results=[]</div><div class="line"></div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> cndata:</div><div class="line">        unit_items=item.split(<span class="string">'|'</span>)</div><div class="line">        starting_ip=unit_items[<span class="number">3</span>]</div><div class="line">        num_ip=int(unit_items[<span class="number">4</span>])</div><div class="line">        </div><div class="line">        imask=<span class="number">0xffffffff</span>^(num_ip<span class="number">-1</span>)</div><div class="line">        <span class="comment">#convert to string</span></div><div class="line">        imask=hex(imask)[<span class="number">2</span>:]</div><div class="line">        mask=[<span class="number">0</span>]*<span class="number">4</span></div><div class="line">        mask[<span class="number">0</span>]=imask[<span class="number">0</span>:<span class="number">2</span>]</div><div class="line">        mask[<span class="number">1</span>]=imask[<span class="number">2</span>:<span class="number">4</span>]</div><div class="line">        mask[<span class="number">2</span>]=imask[<span class="number">4</span>:<span class="number">6</span>]</div><div class="line">        mask[<span class="number">3</span>]=imask[<span class="number">6</span>:<span class="number">8</span>]</div><div class="line">        </div><div class="line">        <span class="comment">#convert str to int</span></div><div class="line">        mask=[ int(i,<span class="number">16</span> ) <span class="keyword">for</span> i <span class="keyword">in</span> mask]</div><div class="line">        mask=<span class="string">"%d.%d.%d.%d"</span>%tuple(mask)</div><div class="line">        </div><div class="line">        <span class="comment">#mask in *nix format</span></div><div class="line">        mask2=<span class="number">32</span>-int(math.log(num_ip,<span class="number">2</span>))</div><div class="line">        </div><div class="line">        results.append((starting_ip,mask,mask2))</div><div class="line">         </div><div class="line">    <span class="keyword">return</span> results</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</div><div class="line">    parser=argparse.ArgumentParser(description=<span class="string">"Generate routing rules for vpn."</span>)</div><div class="line">    parser.add_argument(<span class="string">'-p'</span>,<span class="string">'--platform'</span>,</div><div class="line">                        dest=<span class="string">'platform'</span>,</div><div class="line">                        default=<span class="string">'openvpn'</span>,</div><div class="line">                        nargs=<span class="string">'?'</span>,</div><div class="line">                        help=<span class="string">"Target platforms, it can be openvpn, mac, linux,"</span> </div><div class="line">                        <span class="string">"win, android. openvpn by default."</span>)</div><div class="line">    parser.add_argument(<span class="string">'-m'</span>,<span class="string">'--metric'</span>,</div><div class="line">                        dest=<span class="string">'metric'</span>,</div><div class="line">                        default=<span class="number">5</span>,</div><div class="line">                        nargs=<span class="string">'?'</span>,</div><div class="line">                        type=int,</div><div class="line">                        help=<span class="string">"Metric setting for the route rules"</span>)</div><div class="line">    </div><div class="line">    args = parser.parse_args()</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> args.platform.lower() == <span class="string">'openvpn'</span>:</div><div class="line">        generate_ovpn(args.metric)</div><div class="line">    <span class="keyword">elif</span> args.platform.lower() == <span class="string">'linux'</span>:</div><div class="line">        generate_linux(args.metric)</div><div class="line">    <span class="keyword">elif</span> args.platform.lower() == <span class="string">'mac'</span>:</div><div class="line">        generate_mac(args.metric)</div><div class="line">    <span class="keyword">elif</span> args.platform.lower() == <span class="string">'win'</span>:</div><div class="line">        generate_win(args.metric)</div><div class="line">    <span class="keyword">elif</span> args.platform.lower() == <span class="string">'android'</span>:</div><div class="line">        generate_android(args.metric)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span>&gt;&gt;sys.stderr, <span class="string">"Platform %s is not supported."</span>%args.platform</div><div class="line">        exit(<span class="number">1</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Chnroutes-项目&quot;&gt;&lt;a href=&quot;#Chnroutes-项目&quot; class=&quot;headerlink&quot; title=&quot;Chnroutes 项目&quot;&gt;&lt;/a&gt;Chnroutes 项目&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;教程的目的是要达到通过执行路由脚本,可以让用户在使用vpn作为默认网络网关的时候, 不使用vpn进行对中国国内ip的访问, 从而减轻vpn的负担, 和增加访问国内网站的速度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要利用一个开源项目 &lt;a href=&quot;https://github.com/fivesheep/chnroutes&quot;&gt;https://github.com/fivesheep/chnroutes&lt;/a&gt; 这个项目提供了可以直接使用的路由表和简易教程。&lt;/p&gt;
&lt;h2 id=&quot;Mac用户的安装&quot;&gt;&lt;a href=&quot;#Mac用户的安装&quot; class=&quot;headerlink&quot; title=&quot;Mac用户的安装&quot;&gt;&lt;/a&gt;Mac用户的安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载 &lt;code&gt;chnroutes.py&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;从终端进入下载目录, 执 &lt;code&gt;python chnroutes.py -p mac&lt;/code&gt; , 执行完毕之后同一目录下将生成两个文件 &lt;code&gt;ip-up&lt;/code&gt; 和 &lt;code&gt;ip-down&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把这两个文件copy到 &lt;code&gt;/etc/ppp&lt;/code&gt; 目录, 并使用 &lt;code&gt;sudo chmod a+x ip-up ip-down&lt;/code&gt; 命令把它们设置为可执行&lt;/li&gt;
&lt;li&gt;设置完毕, 重新连接vpn&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Windows用户的安装&quot;&gt;&lt;a href=&quot;#Windows用户的安装&quot; class=&quot;headerlink&quot; title=&quot;Windows用户的安装&quot;&gt;&lt;/a&gt;Windows用户的安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载 &lt;code&gt;chnroutes.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从终端进入下载目录, 执行 python chnroutes.py -p win, 执行之后会生成 &lt;code&gt;vpnup.bat&lt;/code&gt; 和 &lt;code&gt;vpndown.bat&lt;/code&gt; 两个文件.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;由于Windows上的pptp不支持拨号脚本, 所以也只能在进行拨号之前手动执行 &lt;code&gt;vpnup.bat&lt;/code&gt; 文件以设置路由表. 而在断开vpn之后, 如果你觉得有必要, 可以运行 &lt;code&gt;vpndown.bat&lt;/code&gt; 把这些路由信息给清理掉.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="VPN" scheme="http://kchen.cc/tags/VPN/"/>
    
      <category term="Mac" scheme="http://kchen.cc/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Maven 学习笔记</title>
    <link href="http://kchen.cc/2015/11/16/mvn-study/"/>
    <id>http://kchen.cc/2015/11/16/mvn-study/</id>
    <published>2015-11-17T07:39:00.000Z</published>
    <updated>2015-11-19T09:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Maven-简介"><a href="#Maven-简介" class="headerlink" title="Maven 简介"></a>Maven 简介</h2><p>Maven 的作用：</p>
<ul>
<li>构建工具</li>
<li>依赖管理</li>
<li>项目信息</li>
</ul>
<p>还可以用来进行极限编程（XP）和敏捷开发、瀑布开发。</p>
<h2 id="Maven-的安装和配置"><a href="#Maven-的安装和配置" class="headerlink" title="Maven 的安装和配置"></a>Maven 的安装和配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>下载Maven 3</li>
<li>解压安装</li>
<li>配置环境变量<ul>
<li><code>%M2_HOME%</code></li>
<li><code>path = %M2_HOME%/bin</code></li>
</ul>
</li>
</ul>
<p>在Mac下，可以直接使用BrewHome的<code>brew install</code>来安装。</p>
<a id="more"></a>
<h4 id="安装目录分析"><a href="#安装目录分析" class="headerlink" title="安装目录分析"></a>安装目录分析</h4><ul>
<li>bin</li>
<li>boot</li>
<li>conf</li>
<li>lib</li>
</ul>
<p>bin：包含了<code>mvn</code>运行脚本（还有<code>mvnDebug</code>）。</p>
<p>boot：不必关心。</p>
<p>conf：非常重要的配置文件<code>settings.xml</code>。最好把该文件复制到<code>~/.m2/settings.xml</code>下来配置，这样利于管理、恢复和升级。</p>
<p>lib: Maven运行时得所有Java类库，可以说此目录就是真正的Maven。</p>
<h3 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h3><p>//TODO </p>
<p>通过<code>mvn -v</code>来查看Maven、Java、OS的版本信息等。</p>
<h2 id="Maven-使用入门"><a href="#Maven-使用入门" class="headerlink" title="Maven 使用入门"></a>Maven 使用入门</h2><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><ul>
<li>XML 头<code>&lt;?xml version = &quot;1.0&quot; encoding = &quot;UTF-8&quot;&gt;</code></li>
<li>根节点<code>&lt;project&gt;</code><ul>
<li><code>&lt;modelVersion&gt;</code>只能选择4.0.0</li>
<li><code>&lt;groupId&gt;</code>项目的地址，例如<code>com.googlecode.myapp</code></li>
<li><code>&lt;artifactId&gt;</code>项目的名称，例如<code>hello-world</code></li>
<li><code>&lt;version&gt;</code>版本号，默认起始为<code>1.0-SNAPSHOT</code></li>
<li><code>&lt;name&gt;</code>项目描述</li>
</ul>
</li>
</ul>
<h3 id="代码的目录结构"><a href="#代码的目录结构" class="headerlink" title="代码的目录结构"></a>代码的目录结构</h3><ul>
<li>src<ul>
<li>main<ul>
<li>java</li>
<li>resources</li>
</ul>
</li>
<li>test<ul>
<li>java</li>
</ul>
</li>
</ul>
</li>
<li>target<ul>
<li>classes</li>
<li>test-classes</li>
<li>.jar</li>
</ul>
</li>
<li>pom.xml</li>
</ul>
<p>要求<code>src</code>目录必须按照如上的结构生成，其中源代码全部放在<code>src/main/java</code>目录下，测试代码全部放在<code>src/test/java</code>目录下，项目的根目录下必须有<code>pom.xml</code>文件。</p>
<p><code>target</code>目录是由Maven命令脚本生成的，所有的输出文件都会在该目录下。</p>
<h3 id="最常用的四个Maven命令"><a href="#最常用的四个Maven命令" class="headerlink" title="最常用的四个Maven命令"></a>最常用的四个Maven命令</h3><ul>
<li><code>mvn clean compile</code></li>
<li><code>mvn clean test</code></li>
<li><code>mvn clean package</code></li>
<li><code>mvn clean install</code></li>
</ul>
<p>这其中，<code>install</code>&gt;<code>package</code>&gt;<code>test</code>&gt;<code>compile</code>会形成包含关系，执行左边的命令之前会先执行右边的命令。</p>
<p>命令都在项目的根部目录下执行。</p>
<ul>
<li><code>compile</code>会编译<code>src/main/java</code>下的所有源代码，输出<code>.class</code>文件到<code>target/classes</code>目录下。</li>
<li><code>test</code>会编译<code>src/test/java</code>下的所有代码，输出<code>.class</code>文件到<code>target/test-classes</code>目录下。</li>
<li><code>package</code>会把编译结果打包为<code>artifactId-version.jar</code>输出到<code>target</code>目录下。</li>
<li><code>install</code>会把打包结果安装到本地仓库，供其他Maven项目使用。</li>
</ul>
<h4 id="关于测试"><a href="#关于测试" class="headerlink" title="关于测试"></a>关于测试</h4><p>如果在<code>pom.xml</code>中添加了Junit依赖：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--junit中声明的scope只对test目录下的文件有效--&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>
<p>则可以在测试代码中利用junit来进行代码测试。</p>
<p>使用<code>@test</code>来标记测试的方法。</p>
<h4 id="关于打包"><a href="#关于打包" class="headerlink" title="关于打包"></a>关于打包</h4><p>默认的<code>package</code>命令并不包含<code>.jar</code>中的<code>mainClass</code>属性，需要通过<code>maven-shade-plugin</code>插件来指定主类。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span> = <span class="string">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span></div><div class="line">                                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.chenkun.mvnstudy.helloworld.HelloWorld<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="项目骨架"><a href="#项目骨架" class="headerlink" title="项目骨架"></a>项目骨架</h3><p>可以使用Archetype来生成如之前所述的代码目录结构的项目骨架。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn archetype:generate</div></pre></td></tr></table></figure>
<h3 id="IDE-1"><a href="#IDE-1" class="headerlink" title="IDE"></a>IDE</h3><p>//TODO</p>
<h2 id="Maven-坐标"><a href="#Maven-坐标" class="headerlink" title="Maven 坐标"></a>Maven 坐标</h2><p>Maven的任何一个构建都需要一个坐标来定位，它们是通过一些元素来定义的：<code>groupId</code>、<code>artifactId</code>、<code>version</code>、<code>packaging</code>、<code>classifier</code>。</p>
<ul>
<li><code>&lt;groupId&gt;</code>: 定义当前Maven项目隶属的实际项目，其表示方式与Java包名的表示方式类似，通常与反向域名一一对应，例如<code>org.sonatype.nexus</code>。</li>
<li><code>&lt;artifactId&gt;</code>: 定义实际项目中的一个Maven项目（模块），推荐做法是将实际项目作为前缀，例如<code>nexus-indexer</code>，这样便于快速检索和区分。</li>
<li><code>&lt;version&gt;</code>: 使用规范的版本定义，包括对<code>SNAPSHOT</code>的使用。</li>
<li><code>&lt;packaging&gt;</code>: 定义Maven项目的打包方式，默认为<code>.jar</code>。</li>
<li><code>&lt;classifier&gt;</code>: 帮助定义构建输出的一些附属构件，例如<code>nexus-indexer-2.0.0-javadoc.jar</code>等，此属性不能直接定义，需由插件生成。</li>
</ul>
<blockquote>
<p>项目构件的文件名是与坐标相对应的，一般的规则是<code>artifactID-version[-classifier].packaging</code>。</p>
</blockquote>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><h3 id="依赖的配置"><a href="#依赖的配置" class="headerlink" title="依赖的配置"></a>依赖的配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></div><div class="line">	...</div><div class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>...<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">type</span>&gt;</span>...<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>...<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>...<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span>...<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">				...</div><div class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		...</div><div class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">	...</div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这其中：</p>
<ul>
<li><code>&lt;groupId&gt;</code>、<code>&lt;artifactId&gt;</code>和<code>&lt;version&gt;</code>是依赖的基本坐标，<strong>唯一且重要</strong>。</li>
<li><code>&lt;type&gt;</code>对应的是坐标定义的<code>&lt;packaging&gt;</code>，默认的值是<code>.jar</code>。</li>
<li><code>&lt;scope&gt;</code>依赖的生效范围。</li>
<li><code>&lt;optional&gt;</code>标记以来是否可选。</li>
<li><code>&lt;exclusions&gt;</code>用来排除传递性依赖。</li>
</ul>
<h3 id="依赖的范围"><a href="#依赖的范围" class="headerlink" title="依赖的范围"></a>依赖的范围</h3><ul>
<li><code>compile</code></li>
<li><code>test</code></li>
<li><code>provided</code></li>
<li><code>runtime</code></li>
<li><code>system</code></li>
</ul>
<p>依赖范围与生效的classpath关系如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">依赖范围（Scope）</th>
<th style="text-align:center">对于编译classpath有效</th>
<th style="text-align:center">对于测试classpath有效</th>
<th style="text-align:center">对于运行时classpath有效</th>
<th style="text-align:center">例子</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">compile</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">spring-core</td>
</tr>
<tr>
<td style="text-align:center">test</td>
<td style="text-align:center">-</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">-</td>
<td style="text-align:center">JUnit</td>
</tr>
<tr>
<td style="text-align:center">provided</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">-</td>
<td style="text-align:center">servlet-api</td>
</tr>
<tr>
<td style="text-align:center">runtime</td>
<td style="text-align:center">-</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">JDBC驱动实现</td>
</tr>
<tr>
<td style="text-align:center">system</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">-</td>
<td style="text-align:center">本地的，Maven之外</td>
</tr>
</tbody>
</table>
<h3 id="依赖的传递性"><a href="#依赖的传递性" class="headerlink" title="依赖的传递性"></a>依赖的传递性</h3><p>A依赖于B，B依赖于C，称<strong>A对B是第一直接依赖，B对C是第二直接依赖，A对C是传递性依赖</strong>。</p>
<h3 id="依赖调解"><a href="#依赖调解" class="headerlink" title="依赖调解"></a>依赖调解</h3><p>如果存在这样的依赖关系：</p>
<ul>
<li>A-&gt;B-&gt;C-&gt;X(1.0)</li>
<li>A-&gt;D-&gt;X(2.0)</li>
</ul>
<p>X是A的传递性依赖，关于到底选择哪一个依赖有如下两条调解规则：</p>
<ol>
<li>路径最近者优先</li>
<li>第一声明者优先</li>
</ol>
<h3 id="可选依赖"><a href="#可选依赖" class="headerlink" title="可选依赖"></a>可选依赖</h3><p>如果存在如下依赖：</p>
<p>A-&gt;B-&gt;X or Y （optional）</p>
<p>那么<strong>A将不会依赖X，也不会依赖Y</strong>。由于可选依赖一定程度违反了<strong>单一职责性原则</strong>，所以并不推荐使用。</p>
<h3 id="排除依赖"><a href="#排除依赖" class="headerlink" title="排除依赖"></a>排除依赖</h3><p>如果存在以下依赖：</p>
<p>A-&gt;B-&gt;C(version?)</p>
<p>A可以通过排除依赖C来接触和C的传递依赖关系，然后重新进行直接依赖定义C(version)。</p>
<h3 id="归类依赖"><a href="#归类依赖" class="headerlink" title="归类依赖"></a>归类依赖</h3><p>多个相关依赖如果使用相同的版本号，可以在<code>&lt;dependencies&gt;</code>之外定于如下的<code>&lt;property&gt;</code>来统一定义：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">name.version</span>&gt;</span>x.y.z<span class="tag">&lt;/<span class="name">name.version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div></pre></td></tr></table></figure>
<p>后面的依赖在调用版本号时便可直接通过<code>${name.version}</code>来调用<code>x.y.z</code>这个版本了，这样非常利于管理和升级依赖包。</p>
<h3 id="优化依赖"><a href="#优化依赖" class="headerlink" title="优化依赖"></a>优化依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mvn dependency:list</div><div class="line">mvn dependency:tree</div></pre></td></tr></table></figure>
<p>命令可以用来查看当前项目中的<strong>依赖列表</strong>和<strong>依赖树</strong>，同时表明依赖范围等</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn dependency:analyze</div></pre></td></tr></table></figure>
<p>则可以分析依赖中出现的问题：</p>
<ul>
<li>Used undeclared dependencies</li>
<li>Unused declared dependencies</li>
</ul>
<p>其中<code>Used undecalred dependencies</code>需要注意仔细分析。</p>
<h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><h3 id="仓库的分类"><a href="#仓库的分类" class="headerlink" title="仓库的分类"></a>仓库的分类</h3><ul>
<li>Maven 仓库<ul>
<li>本地仓库</li>
<li>远程仓库<ul>
<li>中央仓库</li>
<li>私服</li>
<li>其他公共仓库</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h3><p>本地仓库在<code>~/.m2/repository</code>目录下，任何一个构件，<strong>只有当被下载安装到了本地仓库中才会被其他的Maven项目所使用</strong>。所以，如果要使用本地的构件作为依赖，必须先使用<code>mvn clean install</code>来安装到本地仓库。</p>
<p>如果因为某些原因想要改变本地仓库的存储目录，修改<code>~/.m2/settings.xml</code>即可（此文件需从Maven的<code>config</code>目录下拷贝过来）。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>new path<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><p>当本地仓库没有我们所需要的构件的时候，Maven就会到远程仓库去下载。</p>
<blockquote>
<p>这好比藏书。例如，我想要读『红楼梦』，会先检查自己的书房是否已经收藏了这本书，如果发现没有这本书，于是就跑去书店买一本回来，放到书房里。可能有一天我又想读一本英文版的『程序员修炼之道』，而书房里只有中文版，于是又去书店找，可发现书店没有，好在还有网上书店，于是从Amazon买了一本，几天后我收到了这本书，又放到了自己的书房。</p>
<p>本地仓库和远程仓库之间的关系就好比是自己的书房和网上书店的关系、自己想看的书先从书房找、没有的话从网上淘一本放到自己的书房看、自己的书房最需要一个就够了、而网上书店可以有很多、同样本地仓库只有一个、而远程仓库就可以有很多。我们可以在<code>settings.xml</code>中指定远程仓库。</p>
</blockquote>
<h4 id="中央仓库"><a href="#中央仓库" class="headerlink" title="中央仓库"></a>中央仓库</h4><p>中央仓库是Maven默认的远程仓库，它的地址是<code>http://repo.maven.org/maven2</code>。中央仓库在超级POM中是这样描述的：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>Central Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="私服"><a href="#私服" class="headerlink" title="私服"></a>私服</h4><p>私服是一种特殊的远程仓库，它一般架设在内网中，一方面它可以将别的远程仓库的构件缓存下来，一方面可以提供构件给内部Maven用户下载，同时还支持本地用户上传自己的构件供网内的用户使用，大大提高了访问速度和减轻了中央仓库的压力。常见的架构私服的软件是<strong>Nexus</strong>。</p>
<h3 id="远程仓库的配置"><a href="#远程仓库的配置" class="headerlink" title="远程仓库的配置"></a>远程仓库的配置</h3><p>在很多情况下，默认的中央仓库可能无法满足项目的需求（例如有些依赖<code>JDBC</code>因为版权许可原因并不能放在中央仓库里），项目可能存在别的公共远程仓库里，那我们就可以在自己的项目中配置仓库。下面以添加一个<code>JBoss</code>仓库为例：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></div><div class="line">	...</div><div class="line">	<span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>jboss<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>JBoss Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repository.jboss.com/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">releases</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">	...</div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>注意：Maven的中央仓库的<code>&lt;id&gt;</code>是<code>central</code>，如果其他仓库的声明使用了这个id，就会覆盖中央仓库。</p>
</blockquote>
<p>如果允许<code>&lt;snapshot&gt;</code>快照版本的构件被索引下载，那么有可能使得项目的某些功能变得不太稳定，这个属性需要看需求来开启。</p>
<h3 id="远程仓库的认证"><a href="#远程仓库的认证" class="headerlink" title="远程仓库的认证"></a>远程仓库的认证</h3><p>大部分的仓库访问都不需要认证，但是出于安全考虑，有些仓库也是需要认证保护，特别内部使用的仓库。访问这样的仓库，需要<strong>提前配置认证信息</strong>。认证信息的配置必须在<code>setting.xml</code>中，这样是更加安全的，下例是给一个<code>id</code>为<code>my-repo</code>的仓库配置的认证信息：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></div><div class="line">	...</div><div class="line">	<span class="tag">&lt;<span class="name">servers</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">server</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>my-repo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">username</span>&gt;</span>repo-user<span class="tag">&lt;/<span class="name">username</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">password</span>&gt;</span>repo-pwd<span class="tag">&lt;/<span class="name">password</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">server</span>&gt;</span></div><div class="line">		...</div><div class="line">	<span class="tag">&lt;/<span class="name">servers</span>&gt;</span></div><div class="line">	...</div><div class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="快照版本"><a href="#快照版本" class="headerlink" title="快照版本"></a>快照版本</h3><p>SNAPSHOT 版本的构件在上传至仓库时，会被打上<code>x.y.z-yyyymmdd.hhmmss-times</code>的时间戳例如<code>2.1-20151119.145320-13</code>，代表该构件是2.1版本，2015年11月19日14时53分20秒第13次提交更新。</p>
<p>这样别人使用快照版的构件是都将得到最新的版本。</p>
<blockquote>
<p>快照版本只应在组织内部的项目或模块间依赖使用，因为这时，组织对这些快照版本的依赖具有完全的理解及控制权。项目不应该依赖于任何组织外部的快照版本依赖，由于快照版本的不稳定性，这样的依赖会造成潜在的危险。也就是说，<strong>即使构建项目今天是成功的，由于外部的快照版本依赖实际对应的构件随时可能变化，项目的构建就有可能由于这些外部的不可控因素而失败</strong>。</p>
</blockquote>
<h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><p>如果仓库X中能提供所有Y仓库能提供的构件，那么就称X是Y的一个镜像。举个例子，<code>http://maven.net.cn/content/groups/public</code>是中央仓库<code>http://repo.maven.org/maven2</code>在中国的一个镜像，国内的访问速度普遍会快上很多。因此，可以配置<code>setting.xml</code>文件使用该镜像来替代中央仓库：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></div><div class="line">	...</div><div class="line">	<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></div><div class="line">     	<span class="tag">&lt;<span class="name">id</span>&gt;</span>maven.oschina.net<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">     	<span class="tag">&lt;<span class="name">name</span>&gt;</span>one of the central mirrors in China<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">     	<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">     	<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></div><div class="line">	...</div><div class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></div></pre></td></tr></table></figure>
<p>关于镜像的常见用法是配合私服，也就是使得私服是所有远程仓库的镜像，只需<code>&lt;mirrorOf&gt;</code>的值为<code>*</code>即可。<strong>这样对于任何远程仓库的请求都会映射到私服对应的<code>&lt;url&gt;</code>上去</strong>。</p>
<p>为了满足一些复杂的需求，Maven还支持更高级的镜像配置：</p>
<ul>
<li><code>*</code>：匹配所有的远程仓库</li>
<li><code>external：*</code>：匹配所有远程仓库，使用<code>localhost</code>的除外</li>
<li><code>repo1, repo2</code>：使用逗号隔开多个远程仓库</li>
<li><code>*, !repo1</code>：匹配除<code>repo1</code>以外所有的远程仓库</li>
</ul>
<h3 id="仓库搜索服务"><a href="#仓库搜索服务" class="headerlink" title="仓库搜索服务"></a>仓库搜索服务</h3><ul>
<li><a href="http://repository.sonatype.org/" target="_blank" rel="external">http://repository.sonatype.org/</a></li>
<li><a href="http://www.jarvana.com/jarvana/" target="_blank" rel="external">http://www.jarvana.com/jarvana/</a></li>
<li><a href="http://www.mvnbrower.com/" target="_blank" rel="external">http://www.mvnbrower.com/</a></li>
<li><a href="http://mvnrepository.com/" target="_blank" rel="external">http://mvnrepository.com/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Maven-简介&quot;&gt;&lt;a href=&quot;#Maven-简介&quot; class=&quot;headerlink&quot; title=&quot;Maven 简介&quot;&gt;&lt;/a&gt;Maven 简介&lt;/h2&gt;&lt;p&gt;Maven 的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建工具&lt;/li&gt;
&lt;li&gt;依赖管理&lt;/li&gt;
&lt;li&gt;项目信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还可以用来进行极限编程（XP）和敏捷开发、瀑布开发。&lt;/p&gt;
&lt;h2 id=&quot;Maven-的安装和配置&quot;&gt;&lt;a href=&quot;#Maven-的安装和配置&quot; class=&quot;headerlink&quot; title=&quot;Maven 的安装和配置&quot;&gt;&lt;/a&gt;Maven 的安装和配置&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下载Maven 3&lt;/li&gt;
&lt;li&gt;解压安装&lt;/li&gt;
&lt;li&gt;配置环境变量&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%M2_HOME%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path = %M2_HOME%/bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Mac下，可以直接使用BrewHome的&lt;code&gt;brew install&lt;/code&gt;来安装。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Maven" scheme="http://kchen.cc/tags/Maven/"/>
    
      <category term="笔记" scheme="http://kchen.cc/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>养老保险和投资收益对比</title>
    <link href="http://kchen.cc/2015/11/09/insurance-vs-investiment/"/>
    <id>http://kchen.cc/2015/11/09/insurance-vs-investiment/</id>
    <published>2015-11-09T18:22:00.000Z</published>
    <updated>2015-11-17T22:59:00.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="命题场景"><a href="#命题场景" class="headerlink" title="命题场景"></a>命题场景</h3><blockquote>
<p>保险简介</p>
</blockquote>
<ul>
<li>从48岁开始，每年缴纳3.5万元的保险金，连续缴纳3年至50岁。</li>
<li>从60岁开始，每个月领取4000元养老金，每年共4.8万元。</li>
<li>合同期的第20年（68岁）一次性领取所缴保金11.5万元。</li>
</ul>
<blockquote>
<p>投资</p>
</blockquote>
<ul>
<li>把同样的投保金用于投资理财来获取养老金。</li>
<li>福利享受同化为：从60岁开始，每个月领取4000元养老金，每年共4.8万元。</li>
</ul>
<p>后文对二者的收益进行比较。</p>
<a id="more"></a>
<h3 id="收益关系"><a href="#收益关系" class="headerlink" title="收益关系"></a>收益关系</h3><p><img src="http://7xin49.com1.z0.glb.clouddn.com/img-gains.gif-480.jpg" alt="gains"></p>
<p>图例：</p>
<ul>
<li>横轴的单位是年龄</li>
<li>纵轴的单位是万元</li>
<li>红色是人寿保险的收益（从60岁开始领取养老金，68岁获得再一次性购置本金11.5万元）</li>
<li>蓝色是理想投资曲线</li>
<li>绿色是实际投资收益（从60岁开始领取养老金）</li>
<li>粉色是根据通货膨胀率计算出来的保险等效收益</li>
<li>参数k是投资的年化利率</li>
<li>参数a是前三年每年的投资额</li>
</ul>
<h3 id="关于通胀"><a href="#关于通胀" class="headerlink" title="关于通胀"></a>关于通胀</h3><p>根据年通胀率3.5%计算：</p>
<ul>
<li>60岁时，4000元工资相当于现在的2647元</li>
<li>70岁时，4000元工资相当于现在的1876元</li>
<li>80岁时，4000元工资相当于现在的1330元</li>
</ul>
<h3 id="等效对比"><a href="#等效对比" class="headerlink" title="等效对比"></a>等效对比</h3><p><img src="http://7xin49.com1.z0.glb.clouddn.com/img-gains1.png-480.jpg" alt="gains1"></p>
<p>从保守的8%的年化利率来看，投资本金将会在75岁时全部花光。此时，养老保险看起来更好。</p>
<h3 id="投资优化"><a href="#投资优化" class="headerlink" title="投资优化"></a>投资优化</h3><h4 id="投资不变"><a href="#投资不变" class="headerlink" title="投资不变"></a>投资不变</h4><p>如果保持前三年每年投资3.5万元不变，当投资年化利率达到15%时，投资收益会高于保险收益。如下图所示：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/img-gains2.png-480.jpg" alt="gains2"></p>
<h4 id="加大投资"><a href="#加大投资" class="headerlink" title="加大投资"></a>加大投资</h4><p>如果前三年每年投资5.5万元的话，只要投资年化利率达到12%时，投资收益就会高于保险收益，如下图所示：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/img-gains3.png-480.jpg" alt="gains3"></p>
<h4 id="延长投资"><a href="#延长投资" class="headerlink" title="延长投资"></a>延长投资</h4><p>如果延长投资的年限，投资超过3年，达到5年以上，收益效益将会得到大幅的提高，下图是每年投资3.5万元，投资6年，每年年化利率10%的收益图：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/img-gains4.png-480.jpg" alt="gains4"></p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>保险的收益虽然稳定，但是根据通胀，每年能够拿到的资金将会越来越不值钱。</p>
<p>而合理投资，只要能够突破一定的年化利率（15%）。养老金的涨幅将会变得极大。或者增加投资额度和延长投资年限都可以大化收益。但是这需要花费精力去打理资金，和承担资金风险。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;命题场景&quot;&gt;&lt;a href=&quot;#命题场景&quot; class=&quot;headerlink&quot; title=&quot;命题场景&quot;&gt;&lt;/a&gt;命题场景&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;保险简介&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;从48岁开始，每年缴纳3.5万元的保险金，连续缴纳3年至50岁。&lt;/li&gt;
&lt;li&gt;从60岁开始，每个月领取4000元养老金，每年共4.8万元。&lt;/li&gt;
&lt;li&gt;合同期的第20年（68岁）一次性领取所缴保金11.5万元。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;投资&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;把同样的投保金用于投资理财来获取养老金。&lt;/li&gt;
&lt;li&gt;福利享受同化为：从60岁开始，每个月领取4000元养老金，每年共4.8万元。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后文对二者的收益进行比较。&lt;/p&gt;
    
    </summary>
    
    
      <category term="保险" scheme="http://kchen.cc/tags/%E4%BF%9D%E9%99%A9/"/>
    
  </entry>
  
  <entry>
    <title>你们去卅城</title>
    <link href="http://kchen.cc/2015/11/03/go-to-sa-city/"/>
    <id>http://kchen.cc/2015/11/03/go-to-sa-city/</id>
    <published>2015-11-04T07:58:06.000Z</published>
    <updated>2016-11-04T07:05:38.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://src.aidiao.com/city/photo/guangzhou/1421984043971.jpg" alt="卅城"></p>
<blockquote>
<p>【来自《独唱团》第一辑。BY：北山】</p>
</blockquote>
<h3 id="不在卅城，就在去卅城的路上"><a href="#不在卅城，就在去卅城的路上" class="headerlink" title="不在卅城，就在去卅城的路上"></a>不在卅城，就在去卅城的路上</h3><p>电话响起，方强拿起听筒，那边是老同学老五极富感染力的骂娘声。</p>
<p>『妈的，傻逼飞机晚点了!我刚出机场，正在打车去酒店，安顿好就去找你。现在5点，到那能赶上走秀吗?』</p>
<p>还没轮到方强讲话，电话那头已经自己作答，『算了，我现在直接过去找你，晚上回来再去酒店。』</p>
<p>放下电话，想着这小子气急败坏的样子，他笑得肚子都痛了。</p>
<p>方强完全理解这种气急败坏。</p>
<p>欺上瞒下，公然旷工，顶着老婆查岗的压力，编出弱智的出差理由；忍痛买全价机票飞来G省省城，次日还得屁颠屁颠赶回去一就只为了这么一个晚上。而且，当然绝不是为了找老同学聚会而已。该死的航空公司，几乎使这一切都白忙活。</p>
<p>老五远在华东，非要这样千里奔袭，只是因为收到了一条短信，内容如下：卅城新开五星××洒店。欧美风情东北韵昧，奔驰车模气质文员，94女儿红，太型T台秀。特别推介上海x x学院32位学生妹正式挂牌。</p>
<p>此类短信并不陌生，尤其是对那些手机号码比较『阳亢』的朋友来说。人们通常将其归为『垃圾短信』而果断删除一当然，内容带劲儿的。还会乐滋滋地回味一会儿。不过，对干这条短信的含金量，老五却毫不怀疑。方强也不怀疑。只因为它来自卅城。</p>
<p>很少人会无缘无故收到来自卅城的邀请。同样，收信者也很少会怀疑其真实性。事实上，全国哪里的色情短信你都可以怀疑，唯独发自卅城的，你大可相信。</p>
<p>这就是信誉。</p>
<a id="more"></a>
<p>半个小时，这厮已经到了楼下，方强不敢相信。拿着枪抵着的士司机的脑袋也就这么快了吧。他开车出来。老五还没坐稳，就指着手机短信里附带的详细行车路线，说：『走吧。一个小时应该能到。』</p>
<p>因为生活在卅城的『一小时生活圈』，方强这年经常『被聚会』，频率甚至比读书时还要高。他找到了学生时代没有体会到的集体感。</p>
<p>从这个意义上说，方强觉得自己跟中国制造业一样，都挺感激卅城的。</p>
<p>上路后，两人一边闲扯，一边展望未来几个小时的美丽时光。曾经是酒桌上的叙旧，如今在往返卅城的路上进行，而这比酒精更拉近感情。请人吃饭。不如请人洗澡，这话精辟啊。</p>
<p>车窗外。南方的夜晚姗姗来迟。</p>
<h3 id="二十八镇风光"><a href="#二十八镇风光" class="headerlink" title="二十八镇风光"></a>二十八镇风光</h3><p>经过详细计算，方强选择了时间成本最低的广深高速，这条路现状如下：年久失修的路面，匪夷所思的关卡，变幻莫测的交通指示。幽灵一般的各式车辆，时而飞驰，时而蠕动，此情此最，使他想起张楚那首歌。『双腿夹着灵魂，赶路匆忙』。</p>
<p>进入卅城境内。路上的车辆变得极具暗示性：车牌主要是外地的。几乎都是轿车．还有时而飘过身边的乘客表情，憧憬，满足。各路人马浩浩荡荡，空气里弥漫着心照不宣的默契。路过加油站，老五钻进旁边的便利店，神神叨叨地捧着一堆瓶瓶罐罐出来。『力保健』、『元气神』，发奋图强。杀气腾腾。江湖有云：不到北京，不知官小。不到上海，小知钱少，不到卅城。不知身体差也。</p>
<p>不久转入号称「黄金走廊」的107国道，这表达很艺术化，可事实上，像所有国道一样，这条路破败不堪、危机重重，充斥着各式机动车的噪音、废气，夹杂着横冲直撞的各色人等，颓废的店铺和民居占据两边。诡异的是，这样穿乡越镇的公路，却时时有金碧辉煌的各色『酒店』、『会所』在道边赫然矗立，其中不乏五星级酒店。霓虹闪烁，极尽暧昧。『黄金』两字。就此而来。外人常常惊叹：一个镇的豪华酒店数量，堪比一个中等城市。这人未必知道，卅城一个镇的年轻外来人口，庶凡也可与一个中等城市相比。</p>
<p>很多人都到过卅城，但未必到过卅城市区。方强没去过，经常来G省的老五也没去过。两人对各个镇的情况如数家珍，对卅城市区却毫无兴趣。事实上，卅城的知名度很大程度上是由它所辖的28镇得来。不光是寻欢客，一般人对于卅城的印象一世界工厂、民工之乡——人多也产生于因制造业而存在、演变的乡镇。这个城市的灵魂，似乎始终游离于市区那索然无味的城市文明之外，而在这些杂色斑驳、光怪陆离的小镇中澎湃生长。</p>
<h3 id="走秀"><a href="#走秀" class="headerlink" title="走秀"></a>走秀</h3><p>T酒店，这是本镇最豪华的酒店，小镇外围的荒郊野地之中。一-栋金色太厦傲然挺立，通体散发着亮彻夜空的光芒，突兀得令人恍惚。这地方名为』洒店』，其实没有客房，也不留宿。挂着羊头，卖的是『人肉』整栋大厦数百个(套)房间，全是豪华奢侈的桑拿房。</p>
<p>桑拿这个词实在是现代汉语词汇中最销魂的一个，连发音都令人发酥。旧时说法『青楼』，令人遐想，现代人的创意都用在了词义演变上，干巴巴的白话文也可以意味深长。当然，『桑拿』前面再加上『卅式』两宇，就更加妙不可言。</p>
<p>方强正在胡思乱想，只听『先生您好，T酒店有您更精彩!』是酒店门口的一群迎宾小姐。衣着光鲜，笑容可掬。</p>
<p>两人昂首挺胸，目不斜视。这些小姐很漂亮，但是这时大家都还是人，不是狼。</p>
<p>大厅里一位知客走过来，点头哈腰说：『先生，请问桑拿还是淋足？』</p>
<p>『桑拿，刚刚打过电话给经理。』来之前老五已经按照短信联系了一位王经理。</p>
<p>『请问先生手机尾号是多少？』</p>
<p>方强告诉了她号码。她用对讲机唧唧歪歪了一阵。_过了两分钟，一个瘦小的身影健步如飞赶了过来。这位就是王经理，有的地方也也叫主任、主管。</p>
<p>一番热情寒暄后，王经理领着二人穿过大堂，来到酒店附设的夜总会。通过介绍得知，本地收赞标准为房费加小费，分不同的级别。这几天正赶上酒店举行『上海滩风情之夜』活动，据说是新招了一批上海××学院出来『社会实践』的学生，在这里打短工。夜总会门廊里，已经密密麻麻挂满了姹紫嫣红的美人照，摄影技术高超，模特表现一流，千姿百态。勾魂摄魄。照片里的人，官方说法叫『性从业人员』。通俗说法叫『小蛆』。在卅城。大家称之为『技师』，或直接说『女孩子』，前者听起来专业。后者听起来亲呢。照片下方，是技师的工号和个人签名档，活力四射，生气勃勃。</p>
<p>妖娆的灯光下。方强感觉心跳加剧，再看老五，一张脸也生气勃勃起来。此刻在大厅正中的T形台上。一场山寨『时装秀』正在火热进行。一排排性感佳丽在环绕全场的糜靡之音中轮番登场，燕瘦环肥，曼妙天成。泳装。内农、簿纱、旗袍，不一而足。千娇百媚。仪态万方。这就是走秀，细数之下，登台者竟达两百人之多。『卅式』两个字的份量这才开始显示出来。性交易已经脱离了一手交钱，一手脱裤的猥琐。化身为丰富而高稚的精神享受了。『值了，值了，没白来。』老五喷喷有声。『不愧是大手笔，跟看春晚似的。』</p>
<p>方强刚呷的一口红酒差点喷出来。『这算个屁!你在家看A片不更刺激。看得见又摸得着，这才是卅城精神。』</p>
<p>确实，满眼春色不过瘾，任君采撷才是关键。台下一桌桌客人。此刻心里都无比踏实，黑暗的角落里，欲望开始发酵。无数双眼睛闪着狼一般的光芒。经理们开始穿梭往来。为客人送上玫瑰花枝。看中哪位女孩子。客人即示意经理将玫瑰送上。</p>
<p>眼花缭乱看了半天。二人只觉喉头发干，一根烟叼存嘴上，却忘了点。这时一位装扮有如圣诞树的帅哥走了出来，『各位嘉宾各位朋友，欢迎来到大型T台秀，浓情上海滩……』一番动员讲话后，宣布开始今晚的抽奖仪式。</p>
<p>『抽奖？』两人对视一眼。</p>
<p>为丰富客人『性前』生活，卅城酒店经常举办各种活动，任何节日和事件都可以拿来为卅城性产业助威。情人节、七夕这种节日，当然得太办特办，国庆、中秋等节日，普天同庆，当然也不例外，还有一些如庆奥运、迎亚运等特殊活动。祖国母亲可以选择性遗忘性产业，但是这个行业可能比什么都更爱今天的中国——哦，也许不如房地产业爱得那么强烈。</p>
<p>抽奖也有花样：十位佳丽站在台上，每人胸前挂一个气球。</p>
<p>由前十位到达酒店的客人上台将气球弄破。奖券就藏于其中。不许用手．不许用头，因为气球挂得比较低，似乎只能用腰以下、腿以上的部位发力。奖品丰厚，中奖者桑拿费用减免，而且是百分之百中奖率。</p>
<p>台下开始骚动，十位幸运者意气风发上台。在主持人的插科打浑中与美女开始第一次亲密接触。</p>
<p>方强和老五是第十二批到达的客人，就差十几分钟。</p>
<p>『傻逼飞机!』两人同时开骂。</p>
<p>半个多小时后，走秀结束，客人们左拥右抱络绎而出。两人心荡神驰，难以决定递玫瑰给谁，王经理不愧是业务骨干，_二话不说。带他们进行二次选择—一美女吧。</p>
<p>这里俗称『金鱼缸』——又一个妙不可言的词儿。一个大房间被一堵璃璃墙隔开了两个世界。那一边，是柔情款款的女人，强烈的灯光照射下，丰乳肥臀．一览无余。这一边，是如饥似渴的男人。接踵并肩。跃跃欲试。这堵玻璃墙是单面可视的，也就是说客人们能看到技师。并可以指指点点。评头论足，但是技师们却看不见客人。只能凭感觉展现自己最诱惑的一面。表演难度堪比好菜坞特效片中的明星。『谁想出来的，真他妈太有才了!』</p>
<p>方强不禁折服。</p>
<p>这是另一种刺激。像在黑夜里偷窥光明，角落里觊觎世界。所有的羞涩、矜持都被这一堵魔幻的墙消弭于无形。</p>
<p>王经理开始介绍不同的级别：某某工号系列的。属于『B牌』。小费500；某某系列。属于『小公主』，小费500,往上是『A牌』，小费600；然后是『模特』，小费800；最后是『丽人』，小费1000。</p>
<p>分类的标准主要是身高，1．60米以上的才能算是『A牌』。模特就更是高得出奇。间或也有特殊标准，比如小公主通常长相清纯可爱，丽人要气质出众，直追电影明星。</p>
<p>老五如愿以偿。挑到了一位『模特』，据说就是那批『沪上名媛』之一。按他的话来说，这女孩子有一一种『初恋的感觉』。</p>
<p>此刻『初恋』正亲热地挽着老五的手，像白雪公主拉着个小矮人。</p>
<p>完事前，嫖客都是诗人，完事后，诗人也不过差钱的嫖客。方强没有老五那么诗情画意，主要原因是他的初恋实在不堪回首。那女人令天回想起来只会倒尽胃口。他看中了一位『B牌』的女孩儿，看上去有点不合时宜的冷漠，方强想满足一下有已的征服欲。</p>
<p>不过他心里清楚得很，能征服这女人的，是500块小费罢了。</p>
<p>方强指着她，对王经理说：『这个吧，168号。』跟所有客人一样，他的口气像是在菜市场买根黄瓜。</p>
<h3 id="女儿红"><a href="#女儿红" class="headerlink" title="女儿红"></a>女儿红</h3><p>这根黄瓜的名字叫董萍。</p>
<p>董萍的冷漠不是装出来的，也不是什么『美丽的忧郁』，她只是心情不好罢了。最近她比较倒霉，刚买的手机坏了，贪便宜买了水货，结果不能保修。赶上这两天客人给的小费都是刷卡的，按照酒店里的规定，刷卡的小费要扣一部分手续费，而且还得到月底才能结现。本来500块的小费，酒店要收100的，这样又得贴进去几十。没办法，客人要刷卡，酒店不能拒绝，技师就更没话说了。卅城的大型桑拿场都是公司化管理，对员工的规定多得很，稍有不慎就扣钱或撵人。前一阵子，有个女孩子就因为客人临走时随便跟经理说了一句『态度不够热情』，就被罚了五百。『什么玩意儿！嫌我叫床声小，明说就是了。』那个女孩子气得想走，但是最终还是留下了。现在工厂妹满街，1995年出生的，毛都没长齐，都挂牌『女儿红』了。皮肉生意，最看得出长江后浪推前浪的残酷。能在这样规范的酒店里做桑拿，比起一些不知底细的桑拿沐足场，还有那些被桑拿行当淘汰的站街妹和发廊妹，真是好很多了，至少安全些，稳定些，至少公司还每月组织体检。董萍知道，在有些镇，还有商场型快捷服务，类似『50块5次草地』之类，快餐风格的，那些女孩子什么客人都敢接，得艾滋都不知道。『老板，来100块的』，想起来都觉得恶心。</p>
<p>在这个行当里，董萍自诩还不算差，虽然她已经22岁，年纪算大，不过天生丽质的她，有着四川女人引以为傲的柔韧身材和娇嫩皮肤，脱了衣服后，说是十七八岁，也没有人怀疑。而且桑拿这一行，昼伏夜出，工作时间不断洗澡，所以皮肤保持白皙不难。董萍每月收入过万，算是中产阶级。不过她很省，镇上也没有什么花钱的地方，只有一个大点的超市，偶尔去买买衣服，公司有宿舍，她也不想去租那些农民房。最大的消费就是酒店规定统一购买的成人用品，价格贵得出奇。她包里放着一盒杂牌的安全套，5块钱一个，按摩油50块一瓶，还有情趣内衣，成人玩具，质量差又贵，还不许自己买。董萍听说过，卅城这些酒店的服务用品都是专门采购的，真是商机无限。据说最早做按摩油的一个工厂，老板先前也是做桑拿小姐的。人比人，气死人。</p>
<p>做桑拿小姐的，基本上都是为了钱，有些急需钱，亲人生病、弟妹上学什么的最多，也有一些女孩子，没到山穷水尽的地步，只是因为不想打工过得那么辛苦，想快点攒一笔钱，回家做生意，嫁人。再有就是男人拉下水的了，董萍就是这样。她来自山区，不想一辈子翻山越岭，两年前来到G省，在一家鞋厂打工，从早到晚守着流水线，一个月累死一千块。那时有几个老乡跑到卅城做桑拿，也鼓动她下水，她没有。她有个男朋友，是同乡，人长得很帅，两个人相处得不错。后来男朋友听说卅城女孩子赚钱容易，竟也劝她去。董萍以前听说，很多做桑拿的都是自己赚钱养着男朋友的。那时候她觉得不可思议，觉得女人怎么会这么贱，男人又怎么会这么没用。到了自己身上，她才明白，贱点不要紧，最可怕的是孤独，男人没用也不要紧，只要会哄女孩子开心。背井离乡，孤苦伶仃，没个人陪着，过不下去。</p>
<p>半年前她来到这里。因为身高不够1米60，长相不够清纯，所以只能算『B牌』。这里一共有两三百技师，哪里的都有，大多数以前都是在卅城厂里做工的，也有不少是深圳、广州来的，还有一些是从老家直接过来做桑拿的。卅城之所以成为这些人的选择，主要因为这里『人多势众』，既有规模，又有规则。</p>
<p>不过，在董萍看来，在卅城做『小姐』真是比做工人轻松不了多少。尽管没做这行前，别人跟她描述过很多，但是到了进酒店后培训时，她还是傻了眼。从来没想到跟男人干那个事，是这么麻烦，这么累人。从一开始，酒店里负责培训的『师姐』就明确跟所有女孩子们说，客人来卅城，是来享受服务的，我们要无微不至。这个大家叫『师姐』的女孩子是东北的，其实比董萍还年轻，但已经是这一行的老手，经验丰富，风格奔放。长相虽然一般，胜在下得去手，下得去嘴，所以客人很多。一开始董萍没当回事，不就是全套服务嘛，她听得多了，一摸二吹三做，躺下坐下趴下，如此而已。可事情远不是那么简单。</p>
<p>卅城桑拿行业的服务标准很高，号称ISO。这个说法代表统一的标准和信誉，也代表了客人对于卅城性产业的认知度。不同地方，不同时期对这个标准的执行方式会有差异，但是只要是卅城的酒店桑拿，都会有一些基本不会改变的套路，否则无法再竞争中生存下来。『ISO』所指的就是这种普遍的最低标准。</p>
<p>董萍所在的酒店就是严格执行ISO的典型，最讲究细节的精益求精。这是客人们的乐事，却是技师们的苦事。什么时候用冷水，什么时候用热水，什么时候必须裸露，什么时候必须遮掩，哪里不能用力，哪里必须用力，什么时候得像荡妇淫娃，什么时候得像贞洁烈女，桩桩件件，条条框框，考大学也就这样了吧。很多其他酒店，为了竞争，剑走偏锋，专门搞特色服务，那些女孩子就更是辛苦。董萍经常听说靠近深圳那边的一些镇上，因为竞争太激烈，花样层出不穷，据说有的酒店光技师分类就十几种，什么『OL诱惑』、『强奸诱惑』、『动漫女郎』、『SM女郎』……各显神通，大类别下又细分小类别，技师一起出场时穿得有如八仙过海，连经理都会晕菜，比如把S服务的技师错安排给要M服务的客人。还有为客人提供定制服务的，想怎么折腾就怎么配合。这还不够，很多酒店引进外援，『西洋菜』、『日本菜』、『韩国菜』，漂洋过海来抢『本地鸡』的生意。还有些地方，一切照搬日本A片，什么『吞精』、『颜射』、『口爆』之类，恶心死了。总结起来，董萍还是挺认可自己的工作环境，虽然累一点，不过是大企业，大气，现在找工作都要找『500强』，做小姐也一样。</p>
<p>虽说如此，这里的活也不好干。培训的时候，『师姐』从头到尾演示服务流程，虽然演示的对象是女人，已经把她吓得够呛：这哪是性生活，分明拿自己当牲口。首先是体力上的劳累，按摩、推拿、洗澡、搓背、捏脚、掏耳、剪指甲，比干农活轻不了多少；其次是尊严的践踏，女性的羞涩早抛在一边，但是诸如口舌伺候客人下身、脚趾，再任由客人玩弄自己的下身，这也太难为人；还有心理上的紧张，走路要挺胸抬头，脸上要保持微笑，床铺要收拾整齐，衣物要摆放妥当，从进房间招呼客人坐下，帮客人拖鞋，替客人消毒，到离开房间时提醒客人带齐物品，事无巨细，动辄得咎。再到具体的性服务项目，什么『老树盘根』、『东方破晓』，什么『毒龙钻』、『再回首』，密密麻麻写在纸上，好比成语接龙。费力看下来，比老外到中餐馆点菜还晕。</p>
<p>但是人人都挺了下来，慢慢的她也就不觉得有什么不得了。再怎么折腾，也就两个小时，一天赚以前一个月的钱，什么都认了。而且，来这里的客人还算有素质，虽然偶尔会遇到难缠的，但是总的来说，他感觉自己还是幸运的。谋生嘛，都要付出。</p>
<p>比如今天这个客人，虽然看上去严肃点，不过还算年轻英俊，也挺和气，董萍有点后悔没有在酒店里化妆，面相不够妩媚。酒店里有专门的化妆师，技术很好，但是画一次妆要50，她有时候舍不得，就在镇上找那种专门做桑拿小姐生意的化妆店做。</p>
<p>董萍挽着方强的胳膊，等着电梯下来。看到方强没有说话的意思，她也没说话，只是悄悄将丰满的胸部挺起来，靠在方强的身上。</p>
<p>夜晚终于到来了。</p>
<h3 id="经理人生"><a href="#经理人生" class="headerlink" title="经理人生"></a>经理人生</h3><p>看着电梯门慢慢关上，王经理终于松开了笑得紧绷的脸部肌肉。</p>
<p>凌晨两点，这是今晚最后一批客人了。这个月的订房任务已经完成了一半，他不想再熬，打算收工了。酒店规定所有经理每月最低业务量是客人电话订房120间，必须是电话订房，来之前没打电话的不算。公司里对每个经理的来电量有记录，客人订房后一定要提供手机号码。这个是没法作假的。这意味着每天至少要有四个人找他订房，才能完成每月基本业务，他才能拿到全额工资四千多。在此之上，多订一间房，就多一份奖金。他的最高记录是一个月拿了一万五。</p>
<p>如今生意没有以前那么好做了。王经理在这行不久，以前一直是别人的助理——其实就是跟班。他穿起西装来显得很成熟，其实也不过二十五岁。不久前他的经理跳槽去了南海的一家酒店——听说那里很多酒店都在拷贝卅城模式，在卅城挖人——他才升了经理。</p>
<p>他回到自己租的房子附近，脱掉西装，从路口买了包烟，慢慢往回踱步。这条路是镇上仅有的几个热闹地方之一，此刻还是灯火通明，路边的小吃店里有不少年轻女孩子，他知道，这些是刚下斑的桑拿小姐。路口有几辆摩的，这也是在等下班的桑拿小姐。在这样的环境里生活久了，深更半夜见到妙龄女性，他没有什么欲望，倒是有点提防起来。</p>
<p>王经理是江西人，大学里读成人高考酒店管理专业，毕业后他来到G省，应聘了很多家酒店，收人太低，最后辗转来到卅城。卅城各镇是酒店之乡，机会很多。来了后，他才知道很多酒店基本上就是妓院，经理基本上就是『老鸨』，甚至有些酒店的女经理本身就是小姐出身。开始他还自视甚高，可高薪诱惑和男儿本色使他很快释然，自已是个纯爷们儿，怕什么，又不用去卖身——听说长安镇的很多酒店，真的有女经理也兼职做技师的。</p>
<p>而且其实从专业的角度讲，卅城酒店的管理水平和服务水平都是一流。星级酒店不用说，那里桑拿不是主业，这个以桑拿为主的酒店都是如此。这里一共有上百名经理，掌握着一大批固定客户，并要不断努力争取新客户，维护老客户。这个行当对管理水平的要求是很高的，上要应对地方政府和酒店资方，下要应对技师和客户，中间还有产业链的其他环节，变通，住宿，消耗品等等，方方面面，比教科书真切、复杂得多。</p>
<p>王经理没有赶上最好的时代。几年前，卅城的性产业如日中天，随便一个酒店，破破烂烂的硬件，技师良莠不齐，客户还是源源不断，地方政府睁一只眼闭一只眼，做桑拿的小姐也不像现在这么多，基本上经理不用做什么，在酒店等着客人来，拉几个女孩子到房间展示一下就算大功告成。现在不行了，大环境变得不利，经济危机使得技师增多，客人减少，供大于求，新开酒店如雨后春笋。为拉抢客源花招不断。免房费，减小费，送礼品，据说有个酒店一个抽奖就送出一部进口宝马摩托车。小场竞争力不够，经理们不得不跑到『黄金走廊』上等着，趁红灯时可怜兮兮去塞名片给过路司机，被撞死都有可能。</p>
<p>而来自政府的压力更是越来越大，从中央到地方，处处都说要扫『黄』，世道不稳，人心惶惶。前一阵子各镇酒店挨个排查，抓了不少人，还封了好多家。他记得上个月还有一次，因为同公司的另外两家酒店被查，不得不让技师们打游击，用大巴把几百个女孩子拉来拉去，查一处，换一个地方。赶上几个酒店的小姐大会师，景象怎一个壮观了得。然而很多客人接原计划到某个酒店，经理们无法遮掩，只好老实相告：水管坏了。然后找车把客人拉去其他酒店。『水管坏了』是暗语，桑拿没水，啥都没戏。经过这么一搞，很多客人不敢再来，客户对产品和信誉一旦失去信心，影响深远啊。</p>
<p>回想到此，王经理突然觉得自己有点忧国忧民的味道，转念间又是一阵恼火。娘的，这些酒店每年交了多少税啊，光他在的这家，每月就几十万，说查就查说封就封，兔死狗烹。</p>
<p>不过他心里知道，这阵子的『严打』，其实也没有什么新鲜，这玩意儿春风吹又生，即便是连根拔起，也不是想拔谁就拔谁。像他所在的这个酒店，后台非常强硬，老板听说跟国防部的人都有联系，对付地方警力根车不在话下。当然，这些事情他一个『老鸨』没法了解，也不想了解。上头的事，知道越多越麻烦。</p>
<p> 在他看来，整顿也好，严打也罢，最后的结果是产业整合，重新洗牌，强者更强，弱者淘汰。跟国企兼并是一个德性。</p>
<p>而他自己，就是呆在这样一个背景庞大的垄断国企里，怕什么呢。</p>
<p>而且，最近每天他的订房电话不断。看来大地回春，『胡汉三』要回来了，自己适时的客户回访起到了作用。</p>
<p>接照这一行经理人的职业道德，本来是不该给客人们打电话的，这里的客人什么角色都有，一个醒目的经理不会多事。但是最近情况特殊。给客户的邀请短信，是有专门的短信公司负责的，千篇一律，而且严格按照公司规定的格式和内容发送，很难体现出对客户的个人关怀。多事之秋，各个经理都觉得有必要跳过短信程序，跟客户直接对话。他前几天打了电话给一些熟客，通报近期『风声已过，优惠回馈』，希望重树客户信心。现在有效果了。</p>
<p>只要没变性，客户始终都会回来的。他接待过全国各地的，甚至全世界各地的客人，见识过组团飞来只为春宵一度的内地客人，见识过为了和技师对话而恶补中文的老外。他也是男人，每天和这些尤物在一起，要不是公司严令禁止，他也恨不得在介绍技师时给自己安排一个。</p>
<p>毕竟，这里是『卅式服务』，这里是IS0啊。</p>
<p>一阵莫名的自豪感使他忘掉了疲惫，他丢掉手上的烟头，大踏步朝自己的蜗居走去。</p>
<h3 id="天之尽-地之极"><a href="#天之尽-地之极" class="headerlink" title="天之尽 地之极"></a>天之尽 地之极</h3><p>在王经理进入梦乡的时候，方强和老五正在疲惫地往回赶。为了不辜负老五的机票，他们又去了另外几家酒店。</p>
<p>和所有游魂一样，他们在夜晚到来时奔向卅城，又像所有游魂一样，在黎明前匆匆逃离。阴茎的力量已经消退，脑袋开始重新占领高地。方强开始产生对老婆的愧疚，老五开始产生对钞票的思念。</p>
<p>两人在寂寞的公路上默默前行，</p>
<p>在小镇外围的T酒店里，董萍扯下难受的假健毛，换上舒服的运动衫，背起刚买的仿LV包，走出门来，坐上一辆摩的，消失在黑暗中。</p>
<p>酒店的灯光已经熄灭，整个小镇恢复静默。一条空荡荡的国道向远处延伸。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://src.aidiao.com/city/photo/guangzhou/1421984043971.jpg&quot; alt=&quot;卅城&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【来自《独唱团》第一辑。BY：北山】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;不在卅城，就在去卅城的路上&quot;&gt;&lt;a href=&quot;#不在卅城，就在去卅城的路上&quot; class=&quot;headerlink&quot; title=&quot;不在卅城，就在去卅城的路上&quot;&gt;&lt;/a&gt;不在卅城，就在去卅城的路上&lt;/h3&gt;&lt;p&gt;电话响起，方强拿起听筒，那边是老同学老五极富感染力的骂娘声。&lt;/p&gt;
&lt;p&gt;『妈的，傻逼飞机晚点了!我刚出机场，正在打车去酒店，安顿好就去找你。现在5点，到那能赶上走秀吗?』&lt;/p&gt;
&lt;p&gt;还没轮到方强讲话，电话那头已经自己作答，『算了，我现在直接过去找你，晚上回来再去酒店。』&lt;/p&gt;
&lt;p&gt;放下电话，想着这小子气急败坏的样子，他笑得肚子都痛了。&lt;/p&gt;
&lt;p&gt;方强完全理解这种气急败坏。&lt;/p&gt;
&lt;p&gt;欺上瞒下，公然旷工，顶着老婆查岗的压力，编出弱智的出差理由；忍痛买全价机票飞来G省省城，次日还得屁颠屁颠赶回去一就只为了这么一个晚上。而且，当然绝不是为了找老同学聚会而已。该死的航空公司，几乎使这一切都白忙活。&lt;/p&gt;
&lt;p&gt;老五远在华东，非要这样千里奔袭，只是因为收到了一条短信，内容如下：卅城新开五星××洒店。欧美风情东北韵昧，奔驰车模气质文员，94女儿红，太型T台秀。特别推介上海x x学院32位学生妹正式挂牌。&lt;/p&gt;
&lt;p&gt;此类短信并不陌生，尤其是对那些手机号码比较『阳亢』的朋友来说。人们通常将其归为『垃圾短信』而果断删除一当然，内容带劲儿的。还会乐滋滋地回味一会儿。不过，对干这条短信的含金量，老五却毫不怀疑。方强也不怀疑。只因为它来自卅城。&lt;/p&gt;
&lt;p&gt;很少人会无缘无故收到来自卅城的邀请。同样，收信者也很少会怀疑其真实性。事实上，全国哪里的色情短信你都可以怀疑，唯独发自卅城的，你大可相信。&lt;/p&gt;
&lt;p&gt;这就是信誉。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂文" scheme="http://kchen.cc/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>写让别人能读懂的代码</title>
    <link href="http://kchen.cc/2015/10/05/How-to-write-a-reading-friendly-code/"/>
    <id>http://kchen.cc/2015/10/05/How-to-write-a-reading-friendly-code/</id>
    <published>2015-10-06T04:00:00.000Z</published>
    <updated>2015-12-02T13:16:13.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>原文来自<a href="http://www.cnblogs.com/richieyang/p/4840614.html" target="_blank" rel="external">richieyang</a>的博客，根据自己的理解对原文有所更改。</p>
</blockquote>
<p>随着软件行业的不断发展，历史遗留的程序越来越多，代码的维护成本越来越大，甚至大于开发成本。而新功能的开发又常常依赖于旧代码，阅读旧代码所花费的时间几乎要大于写新功能的代码。</p>
<p>我前几天看了一本书，书中有这么一句话：</p>
<blockquote>
<p>“复杂的代码往往都是新手所写，只有经验老道的高手才能写出简单，富有表现力的代码”</p>
</blockquote>
<p>此话虽然说的有点夸张，可是也说明了经验的重要性。</p>
<p>我们所写的代码除了让机器执行外，还需要别人来阅读。所以我们要写：</p>
<ol>
<li>让别人能读懂的代码</li>
<li>可扩展的代码</li>
<li>可测试的代码(代码应该具备可测试性，对没有可测试性的代码写测试，是浪费生命的表现)</li>
</ol>
<p>其中2，3点更多强调的是面向对象的设计原则。而本文则更多关注于局部的代码问题，本文通过举例的方式，总结平时常犯的错误和优化方式。</p>
<a id="more"></a>
<p>本文的例子基于两个指导原则：</p>
<blockquote>
<p>一.DRY(Don’t repeat yourself)</p>
</blockquote>
<p>此原则如此重要，简单来说是因为：</p>
<ul>
<li>代码越少，Bug也越少</li>
<li>没有重复逻辑的代码更易于维护，当你修复了一个bug，如果相同的逻辑还出现在另外一个地方，而你没意识到，你有没有觉得自己很冤？</li>
</ul>
<blockquote>
<p>二.TED原则</p>
</blockquote>
<ul>
<li>简洁(Terse)</li>
<li>具有表达力(Expressive)</li>
<li>只做一件事(Do one thing)</li>
</ul>
<h2 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h2><h3 id="1-拒绝注释，用代码来阐述注释"><a href="#1-拒绝注释，用代码来阐述注释" class="headerlink" title="1.拒绝注释，用代码来阐述注释"></a>1.拒绝注释，用代码来阐述注释</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/// &lt;summary&gt;</span></div><div class="line"><span class="comment">/// !@#$%^&amp;^&amp;*((!@#$%^&amp;^&amp;*((!@#$%^&amp;^&amp;*((!@#$%^&amp;^&amp;*((</span></div><div class="line"><span class="comment">/// &lt;/summary&gt;</span></div><div class="line"><span class="comment">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class="line"> <span class="keyword">public</span> decimal GetCash()</div><div class="line"> &#123;</div><div class="line">     <span class="comment">//!@#$%^&amp;^&amp;*((!@#$%^&amp;^&amp;*((</span></div><div class="line">     <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="keyword">List</span>&lt;decimal&gt;() &#123; <span class="number">2</span>m, <span class="number">3</span>m, <span class="number">10</span>m &#125;;</div><div class="line">     <span class="keyword">var</span> b = <span class="number">2</span>;</div><div class="line">     <span class="keyword">var</span> c = <span class="number">0</span>m;</div><div class="line">     <span class="comment">//!@#$%^&amp;^&amp;*((!@#$%^&amp;^&amp;*((!@#$%^&amp;^&amp;*((</span></div><div class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> p in a)</div><div class="line">     &#123;</div><div class="line">         c += p*b;</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span> c;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> decimal CalculateTotalCash()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">var</span> prices=<span class="keyword">new</span> <span class="keyword">List</span>&lt;decimal&gt;()&#123;<span class="number">2</span>m,<span class="number">3</span>m,<span class="number">10</span>m&#125;;</div><div class="line">    <span class="keyword">var</span> itemCount = <span class="number">2</span>;</div><div class="line">    <span class="keyword">return</span> prices.Sum(p =&gt; p*itemCount);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>良好的代码命名完全可以替代注释的作用，如果你正在试图写一段注释，从某种角度来看，你正在试图写一段别人无法理解的代码。</p>
<p>当你无法为你的方法起一个准确的名称时，很可能你的方法不止做了一件事，违反了(Do one thing)。特别是你想在方法名中加入：And，Or，If等词时。</p>
<blockquote>
<p>注释：方法带Or/And，这个BCL就有不少，IsNullOrEmpty，FirstOrDefault之类，重点不应该是纠结一个方法干了几件事，而是这几件事适不适合放一起干，本来适合放一起的，为了所谓单一原则，非要拆开，就是教条了~</p>
</blockquote>
<h3 id="2-为布尔变量赋值"><a href="#2-为布尔变量赋值" class="headerlink" title="2.为布尔变量赋值"></a>2.为布尔变量赋值</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> bool IsAdult(int age)</div><div class="line">&#123;</div><div class="line">    bool isAdult;</div><div class="line">    <span class="keyword">if</span> (age &gt; <span class="number">18</span>)</div><div class="line">    &#123;</div><div class="line">        isAdult = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        isAdult = <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> isAdult;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> bool IsAdult(int age)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> age &gt; <span class="number">18</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-双重否定的条件判断"><a href="#3-双重否定的条件判断" class="headerlink" title="3.双重否定的条件判断"></a>3.双重否定的条件判断</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!isNotRemeberMe)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (isRemeberMe)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>不管你有没有见过这样的条件，反正我见过。见到这样的条件判断，我顿时就晕了。</p>
<h3 id="4-拒绝HardCode-拒绝挖坑"><a href="#4-拒绝HardCode-拒绝挖坑" class="headerlink" title="4.拒绝HardCode,拒绝挖坑"></a>4.拒绝HardCode,拒绝挖坑</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (carName == <span class="string">"Nissan"</span>)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (car == Car.Nissan)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>既然咱们玩的是强类型语言，咱就用上编译器的功能，让错误发生在编译阶段。</p>
<h3 id="5-拒绝魔数，拒绝挖坑"><a href="#5-拒绝魔数，拒绝挖坑" class="headerlink" title="5.拒绝魔数，拒绝挖坑"></a>5.拒绝魔数，拒绝挖坑</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (age &gt; <span class="number">18</span>)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> int adultAge = <span class="number">18</span>;</div><div class="line"> <span class="keyword">if</span> (age &gt; adultAge)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>所谓魔数(Magic number)就是一个魔法数字，读者完全弄不明白你这个数字是什么，这样的代码平时见的多了。</p>
<h3 id="6-复杂的条件判断"><a href="#6-复杂的条件判断" class="headerlink" title="6.复杂的条件判断"></a>6.复杂的条件判断</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (job.JobState == JobState.<span class="keyword">New</span></div><div class="line">    || job.JobState == JobState.Submitted</div><div class="line">    || job.JobState == JobState.Expired</div><div class="line">    || job.JobTitle.IsNullOrWhiteSpace())</div><div class="line">&#123;</div><div class="line">    <span class="comment">//....</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">if</span> (CanBeDeleted(job))</div><div class="line">&#123;</div><div class="line">    <span class="comment">//</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> bool CanBeDeleted(Job job)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">var</span> invalidJobState = job.JobState == JobState.<span class="keyword">New</span></div><div class="line">                          || job.JobState == JobState.Submitted</div><div class="line">                          || job.JobState == JobState.Expired;</div><div class="line">    <span class="keyword">var</span> invalidJob = string.IsNullOrEmpty(job.JobTitle);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> invalidJobState || invalidJob;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>有没有豁然开朗的感觉？</p>
<h3 id="7-嵌套判断"><a href="#7-嵌套判断" class="headerlink" title="7.嵌套判断"></a>7.嵌套判断</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> isValid = <span class="keyword">false</span>;</div><div class="line"><span class="keyword">if</span> (!string.IsNullOrEmpty(user.UserName))</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (!string.IsNullOrEmpty(user.Password))</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (!string.IsNullOrEmpty(user.Email))</div><div class="line">        &#123;</div><div class="line">            isValid = <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> isValid;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (string.IsNullOrEmpty(user.UserName)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="keyword">if</span> (string.IsNullOrEmpty(user.Password)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="keyword">if</span> (string.IsNullOrEmpty(user.Email)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</div></pre></td></tr></table></figure>
<p>第一种代码是受到早期的某些思想：使用一个变量来存储返回结果。事实证明，你一旦知道了结果就应该尽早返回。</p>
<h3 id="8-使用前置条件"><a href="#8-使用前置条件" class="headerlink" title="8.使用前置条件"></a>8.使用前置条件</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!string.IsNullOrEmpty(userName))</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (!string.IsNullOrEmpty(password))</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//register</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">"user password can not be empty"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">"user name can not be empty"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (string.IsNullOrEmpty(userName)) <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">"user name can not be empty"</span>);</div><div class="line"><span class="keyword">if</span> (string.IsNullOrEmpty(password)) <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">"user password can not be empty"</span>);</div><div class="line"><span class="comment">//register</span></div></pre></td></tr></table></figure>
<p>重构后的风格更接近契约编程，首先要满足前置条件，否则免谈。</p>
<h3 id="9-参数过多，超过3个"><a href="#9-参数过多，超过3个" class="headerlink" title="9.参数过多，超过3个"></a>9.参数过多，超过3个</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> void RegisterUser(string userName, string password, string email, string phone)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> void RegisterUser(User user)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>过多的参数让读者难以抓住代码的意图，同时过多的参数将会影响方法的稳定性。另外也预示着参数应该聚合为一个Model。</p>
<h3 id="10-方法签名中含有布尔参数"><a href="#10-方法签名中含有布尔参数" class="headerlink" title="10.方法签名中含有布尔参数"></a>10.方法签名中含有布尔参数</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> void RegisterUser(User user, bool sendEmail)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> void RegisterUser(User user)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> void SendEmail(User user)</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>布尔参数在告诉方法不止做一件事，违反了Do one thing。</p>
<h3 id="11-写具有表达力的代码"><a href="#11-写具有表达力的代码" class="headerlink" title="11.写具有表达力的代码"></a>11.写具有表达力的代码</h3><blockquote>
<p>反例：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> string CombineTechnicalBookNameOfAuthor(<span class="keyword">List</span>&lt;Book&gt; books, string author)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">var</span> filterBooks = <span class="keyword">new</span> <span class="keyword">List</span>&lt;Book&gt;();</div><div class="line"></div><div class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> book in books)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (book.Category == BookCategory.Technical &amp;&amp; book.Author == author)</div><div class="line">        &#123;</div><div class="line">            filterBooks.Add(book);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> name = <span class="string">""</span>;</div><div class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> book in filterBooks)</div><div class="line">    &#123;</div><div class="line">        name += book.Name + <span class="string">"|"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> name;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>重构后：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> string CombineTechnicalBookNameOfAuthor(<span class="keyword">List</span>&lt;Book&gt; books, string author)</div><div class="line"> &#123;</div><div class="line">     <span class="keyword">var</span> combinedName = books.Where(b =&gt; b.Category == BookCategory.Technical)</div><div class="line">         .Where(b =&gt; b.Author == author)</div><div class="line">         .Select(b =&gt; b.Name)</div><div class="line">         .Aggregate((a, b) =&gt; a + <span class="string">"|"</span> + b);</div><div class="line"></div><div class="line">     <span class="keyword">return</span> combinedName;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>相对于命令式代码，声明性代码更加具有表达力，也更简洁。这也是函数式编程为什么越来越火的原因之一。</p>
<h2 id="关于DRY"><a href="#关于DRY" class="headerlink" title="关于DRY"></a>关于DRY</h2><p>平时大家重构代码，一个重要的思想就是DRY。我要分享一个DRY的反例：</p>
<p>项目在架构过程中会有各种各样的MODEL层，例如：DomainModel，ViewModel，DTO。很多时候这几个Model里的字段大部分是相同的，于是有人就会想到DRY原则，干脆直接用一种类型，省得粘贴复制，来回转换。</p>
<p>这个反例失败的根本原因在于：这几种Model职责各不相同，虽然大部分情况下内容会有重复，但是他们担当着各种不同的角色。</p>
<p>考虑这种场景：</p>
<p>DomainModel有一个字段<code>DateTime Birthday{get;set;}</code>，ViewModel同样具有<code>DateTime Birthday{get;set;}</code>。需求升级:要求界面不再显示生日，只需要显示是否成年。我们只需要在ViewModel中添加一个<code>Bool IsAdult{get{return ....}}</code>即可，DomainModel完全不用变化。</p>
<h2 id="利用先进的生产工具"><a href="#利用先进的生产工具" class="headerlink" title="利用先进的生产工具"></a>利用先进的生产工具</h2><p>以vs插件中的Reshaper为例，本文列举的大部分反例，Reshaprer均能给予不同程度的提示。经过一段时间的练习，当Reshaper对你的代码给予不了任何提示的时候，你的代码会有一个明显的提高。</p>
<p>截图说明Reshaper的提示功能：</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/imageo_20150926142447.png-960.jpg" alt="reshaper1"></p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/imageo_20150926142514.png-960.jpg" alt="reshaper2"></p>
<p>光标移动在波浪线处，然后<code>Alt+Enter</code>,Resharper 会自动对代码进行优化。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果你能够避免本文总结的反例，你的代码就已经具备了优秀代码应有的基因。当然高质量的代码还需要良好的设计和遵循面向对象编程的原则。 如果想了解更多相关内容，请阅读《代码大全》，《代码整洁之道》，《重构 改善既有代码的设计》，《敏捷软件开发 原则、模式与实践》。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文来自&lt;a href=&quot;http://www.cnblogs.com/richieyang/p/4840614.html&quot;&gt;richieyang&lt;/a&gt;的博客，根据自己的理解对原文有所更改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随着软件行业的不断发展，历史遗留的程序越来越多，代码的维护成本越来越大，甚至大于开发成本。而新功能的开发又常常依赖于旧代码，阅读旧代码所花费的时间几乎要大于写新功能的代码。&lt;/p&gt;
&lt;p&gt;我前几天看了一本书，书中有这么一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“复杂的代码往往都是新手所写，只有经验老道的高手才能写出简单，富有表现力的代码”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此话虽然说的有点夸张，可是也说明了经验的重要性。&lt;/p&gt;
&lt;p&gt;我们所写的代码除了让机器执行外，还需要别人来阅读。所以我们要写：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;让别人能读懂的代码&lt;/li&gt;
&lt;li&gt;可扩展的代码&lt;/li&gt;
&lt;li&gt;可测试的代码(代码应该具备可测试性，对没有可测试性的代码写测试，是浪费生命的表现)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中2，3点更多强调的是面向对象的设计原则。而本文则更多关注于局部的代码问题，本文通过举例的方式，总结平时常犯的错误和优化方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Coding" scheme="http://kchen.cc/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 入门-最轻量的文字编辑语言</title>
    <link href="http://kchen.cc/2015/10/05/Markdown-Manual/"/>
    <id>http://kchen.cc/2015/10/05/Markdown-Manual/</id>
    <published>2015-10-05T20:00:00.000Z</published>
    <updated>2016-06-15T05:03:40.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="我们为什么要使用-Markdown"><a href="#我们为什么要使用-Markdown" class="headerlink" title="我们为什么要使用 Markdown"></a>我们为什么要使用 Markdown</h2><p>Markdown 是一种正在流行起来的「标记语言」，通常为程序员群体所用。但现在，不光是程序员，对于普通的文字编辑者而言，Markdown 的优势也越来越明显了。</p>
<h3 id="从前码字时我们面临着什么困境"><a href="#从前码字时我们面临着什么困境" class="headerlink" title="从前码字时我们面临着什么困境"></a>从前码字时我们面临着什么困境</h3><p>以前，大部分的人使用 Word 或 Pages 码字、写作、写论文，过去的文档也大都以<code>.doc</code>， <code>.docx</code>格式或是<code>.pages</code>格式储存。还有人为了编辑简洁、保证文稿发给谁都能正常打开，会用<code>.txt</code> 格式。</p>
<p><code>.doc</code>或<code>.pages</code>格式有如下问题：</p>
<a id="more"></a>
<ul>
<li><p><strong>文件格式难兼容：</strong>不一定谁都能打开。用 Windows 的人打不开<code>.pages</code>文件，用旧版 Word 的人不一定能打开你用新版 Word 写的稿子，而且在其他操作系统下（虽然这是少数）打开<code>.doc</code>的体验一向很糟糕。</p>
</li>
<li><p><strong>显示效果不统一：</strong>对方看到的稿子的样子和你自己看到的可能差别很大，可能是因为不同的软件版能，可能是不同的系统平台。</p>
</li>
<li><p><strong>功能繁复分人心：</strong>写 Word 文档的时候，我们经常浪费大量时间在 Word 本身上，特别是那80%我们用不到的功能，而且 Word 越来越臃肿的身躯，让每一次打开文件都是一种痛苦。</p>
</li>
<li><p><strong>排版耗时又耗力：</strong>使用 Word 时，我们会花费大量力气去排版，试图让文档变得漂亮一些。是粗体还是斜体，是宋体还是黑体，对创作来说，有那么重要吗？而且有相当一部分人为了简便，甚至不能正确的设置标题级别，仅仅是使用变大字号和加粗来表明「我是一个标题」。</p>
</li>
<li><p><strong>版本管理真着急：</strong>每一位自杀的写作者的电脑文档里面，都必然有一个 Word 文档，从V1.0到V20.0的无数版本……这样的版本管理方式是落后且低效的。</p>
</li>
<li><p><strong>协同工作在哪里：</strong>想想你让一位合作的编辑帮你改书有多么痛苦，一个Word文档来，一个Word去，使用那极其难用的修订与审阅功能，你就理解了。</p>
</li>
<li><p><strong>盗版卄年不心虚：</strong>Office 已经是你电脑上用得最久的盗版软件，导致心情不佳。</p>
</li>
</ul>
<h3 id="标记语言显神威"><a href="#标记语言显神威" class="headerlink" title="标记语言显神威"></a>标记语言显神威</h3><p>既然使用 Word 来码字这么闹心，我干脆写个纯文档算了，或者直接打开记事本，写个<code>.txt</code>多简单！可是<code>.txt</code>格式的问题在于没有样式：收到文档的人甚至不知道哪里是标题，哪里需要加粗，哪里是引用，更别说在文档里插个图片了。</p>
<p>有人肯定灵机一动，我在旁边标注一下不就行了么：</p>
<blockquote>
<p>在山的那边海的那边有一群蓝精灵（这是一个标题）</p>
</blockquote>
<p>作者实在太机智，是的，看到稿子的正常人应该都会把<code>(这是一个标题)</code>当做备注处理，剔除于正文之外。其实，这就是「标记语言」的原型了，不过试想一下，如果一篇文章充满了</p>
<blockquote>
<p>在山的那边海的那边有一群蓝精灵（这是一个标题）</p>
<p>他们（强调）活泼（强调结束）又聪明（这是一个子标题）</p>
<p>他们调皮（注：蓝精灵们喜欢恶作剧）又灵敏（这也是一个子标题）</p>
</blockquote>
<p>的确挺让人抓狂的，所以为了约定俗成，天才的 John Gruber 和 Aaron Swartz[^Swartz] 共同发明了 Markdown 这门轻量级的标记语言，它使用像<code>#</code>、<code>*</code>、<code>-</code>这样的符号来标记<strong>标题</strong>、<strong>强调</strong>甚至<strong>列表</strong>。</p>
<h3 id="到底什么是-Markdown"><a href="#到底什么是-Markdown" class="headerlink" title="到底什么是 Markdown"></a>到底什么是 Markdown</h3><p>在详细介绍 Markdown 之前，我不得不提一提 Markdown 的精神理念。</p>
<blockquote>
<p>Markdown 的目标是「易读易写」。</p>
</blockquote>
<p>为实现这一目标，Markdown 的语法几乎全部由标点符号构成，这些标点符号都是精心挑选而来，是与写作的习惯一脉相承的，每一个符号都尽量做到能<strong>望文生义</strong>。如：星号 <code>*</code> 括着一个单词（Markdown 中表示强调）看上去就像*强调*；Markdown的列表看上去就像列表；Markdown 的引文就像引文，和你使用 e-mail 时的感觉一样。</p>
<p>它实际上是个非常简单、非常容易学习的语法。这个语法简单到每个人都可以在5分钟以内学会，这样低廉的学习成本可以让你毫无负担地投入它的怀抱。</p>
<p>有了 Markdown 之后，我们编辑文字时就可以专注于文字的内容本身，而不用分心去关注文字的排版，甚至于可以说在它简单到不能再简单的语法下，你根本就没有思考排版的空间，也没必要思考。也正因为 Markdown 的语法格式足够简单，所以开发者非常容易生成漂亮的版式，一切既有的CSS都可以简单修改之后套用，比如这样：<img src="http://7xin49.com1.z0.glb.clouddn.com/image-Maxiro.jpg-960.jpg" alt="Marxico" title="来自马克飞象"></p>
<p>再比如这样<img src="http://7xin49.com1.z0.glb.clouddn.com/image-CMDMD.jpg-960.jpg" alt="CMDMarkdown" title="来自CMD Markdown"></p>
<h3 id="所以为什么我们要使用-Markdown"><a href="#所以为什么我们要使用-Markdown" class="headerlink" title="所以为什么我们要使用 Markdown"></a>所以为什么我们要使用 Markdown</h3><p>用 Markdown 有如下好处：</p>
<ol>
<li><p>兼顾了 <code>.txt</code> 文件什么系统环境都能打开和 <code>.doc</code>、<code>.pages</code> 文件系统的排版效果。因为一方面 Markdown 本身就是纯文本，他可以保存为自己专有的 <code>.md</code> 格式，也可以保存为 <code>.txt</code> 等任何的纯文本文件格式，所以什么系统都能打开。而它简单的语法让你可以用它来标记文本丰富的样式。</p>
</li>
<li><p>由于是纯文本，Markdown 文稿也不会因为未来软件升级而产生不同版本之间的兼容问题，不会出现「此文件是由较高版本的 Microsoft Word 创建的。是否要下载兼容包以便使用此文件？」的恼人问题，也不会出现好不容易下载兼容包了之后发现打开文件全变了样的尴尬。<br>想要获得丰富的表现样式，你只需要使用不同的CSS来表现这些标记元素即可，对于普通用户而言，就是用不同的「工具」或者「浏览器」来打开 Markdown 文档以获得不同的表现样式。</p>
</li>
<li><p>Markdown 转换为其他格式非常的方便。<code>HTML</code> 是整个万维网（web）的标记语言，但更重要的是，它也是目前主流电子书格式所用的标记语言。无论是 <code>.EPUB</code> 、<code>.mobi</code>，还是 Kindle 用的专有格式 <code>.azw</code>，都只是把一堆 <code>HTML</code> 文件打包而已。另外，后面的介绍的许多工具都能轻松地把 Markdown 文档转换成精美的 PDF 文档存储，便于出版和交流传播。</p>
</li>
</ol>
<hr>
<h2 id="Markdown-简明语法"><a href="#Markdown-简明语法" class="headerlink" title="Markdown 简明语法"></a>Markdown 简明语法</h2><p>前文我介绍了使用 Markdown 进行文字编辑的优势，下面我希望用简洁明了的方式为大家介绍一下 Markdown 的基本语法，进一步向大家揭示 Markdown 的强大之处。</p>
<h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>Markdown 以一段<strong>完整</strong>的空行作为段落间隔，<strong>「完整」</strong>的意思是允许你包含 <code>⌴ space</code> 空格符和 <code>⇥ tab</code> 制表符。单独的一个 <code>↵ enter</code> 回车符换行并不被认为另起了一个段落，哪怕你像中文写作一样换行以后用 <code>⇥ tab</code> 制表符缩进。</p>
<p>我建议大家养成用一个完整的空行分割段落的习惯，这样对于别人阅读你的文章是很友好的，密密麻麻「摩肩接踵」的文字会让人感到头昏脑胀。</p>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p>
<p>类 Setext 形式的标题在标题下一行使用<strong>连续两个及以上</strong><code>=</code>符号表示一级标题，使用<strong>连续两个及以上</strong><code>-</code>符号表示二级标题，例如：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="section">这是一级标题</span></div><div class="line">==</div><div class="line"><span class="section">这是二级标题</span></div><div class="line">---</div></pre></td></tr></table></figure>
<blockquote>
<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2></blockquote>
<p>类 Atx 形式则是在行首插入1到6个 <code>#</code> 符号，对应到标题1到6阶， <code>#</code> 符号和标题之间需要一个空格，例如：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section"># 这是一级标题</span></div><div class="line"><span class="section">## 这是二级标题</span></div><div class="line"><span class="section">### 这是三级标题</span></div><div class="line"><span class="section">#### 这是四级标题</span></div><div class="line"><span class="section">##### 这是五级标题</span></div><div class="line"><span class="section">###### 这是六级标题</span></div></pre></td></tr></table></figure>
<blockquote>
<h1 id="这是一级标题-1"><a href="#这是一级标题-1" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题-1"><a href="#这是二级标题-1" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6></blockquote>
<h3 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h3><p>Markdown 标记区块引用是使用类似 e-mail 中用 <code>&gt;</code> 的引用方式，在需要引用的文字之前使用 <code>&gt;</code> 符号即可，注意在 <code>&gt;</code> 符号与引文之间需要一个空格。</p>
<p>当你需要进行区块引用，也就是多段引用时，只需在每段之前都加上 <code>&gt;</code> 符号，包括空行。</p>
<p>引用允许嵌套使用，引文内的引文只需要连续使用 <code>&gt;</code> 符号即可。</p>
<p>引文内任何 Markdown 语法依旧生效，比如列表、标题等。例如</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="quote">&gt; 这是引文的第一段</span></div><div class="line"><span class="quote">&gt; 这是引文的第二段</span></div><div class="line">&gt;&gt; 这是内嵌的二级引文</div><div class="line"><span class="quote">&gt; ### 引文内还可以使用标题等其他语法标记</span></div></pre></td></tr></table></figure>
<blockquote>
<p>这是引文的第一段<br>这是引文的第二段</p>
<blockquote>
<p>这是内嵌的二级引文</p>
<h4 id="引文内还可以使用标题等其他语法标记"><a href="#引文内还可以使用标题等其他语法标记" class="headerlink" title="引文内还可以使用标题等其他语法标记"></a>引文内还可以使用标题等其他语法标记</h4></blockquote>
</blockquote>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持非常直观的无序列表和有序列表。</p>
<p>无序列表使用 <code>+</code> 加号、<code>-</code> 减号和 <code>*</code> 星号加空格来标识，列表的嵌套使用 <code>⌴ space</code> 空格符（建议使用4个）或 <code>⇥ tab</code> 制表符缩进，例如：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">这是一个无序列表</div><div class="line"><span class="bullet">+ </span>项目1</div><div class="line"><span class="bullet">+ </span>项目2</div><div class="line"><span class="bullet">+ </span>项目3</div><div class="line"></div><div class="line">这是一个无序列表</div><div class="line"><span class="bullet">- </span>项目1</div><div class="line"><span class="bullet">- </span>项目2</div><div class="line"><span class="code">	- 项目2.1</span></div><div class="line"><span class="code">	- 项目2.2</span></div><div class="line"><span class="bullet">- </span>项目3</div><div class="line"> </div><div class="line">这是一个无序列表</div><div class="line"><span class="bullet">* </span>项目1</div><div class="line"><span class="bullet">* </span>项目2</div><div class="line"><span class="bullet">* </span>项目3</div><div class="line"><span class="code">	* 项目3.1</span></div><div class="line"><span class="code">		* 项目3.1.1</span></div></pre></td></tr></table></figure>
<blockquote>
<p>这是一个无序列表</p>
<ul>
<li>项目1</li>
<li>项目2</li>
<li>项目3</li>
</ul>
<p>这是一个无序列表</p>
<ul>
<li>项目1</li>
<li>项目2<ul>
<li>项目2.1</li>
<li>项目2.2     </li>
</ul>
</li>
<li>项目3 </li>
</ul>
<p>这是一个无序列表</p>
<ul>
<li>项目1</li>
<li>项目2</li>
<li>项目3<ul>
<li>项目3.1<ul>
<li>项目3.1.1</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<p>有序列表也非常的直观，只需要使用数字接着一个 <code>.</code> 英文句点然后空格，就可以标识一个有序列表了。值得一提的是<strong>任何一个数字</strong>都可以触发<strong>有序</strong>列表，并按正确的<strong>数序</strong>予以显示。例如：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">这是一个有序列表</div><div class="line"><span class="bullet">1. </span>项目一</div><div class="line"><span class="bullet">2. </span>项目二</div><div class="line"><span class="bullet">3. </span>项目三</div><div class="line"></div><div class="line">这也是一个有序列表</div><div class="line"><span class="bullet">8. </span>项目一</div><div class="line"><span class="bullet">1. </span>项目二</div><div class="line"><span class="bullet">3. </span>项目三</div></pre></td></tr></table></figure>
<blockquote>
<p>这是一个有序列表</p>
<ol>
<li>项目一</li>
<li>项目二</li>
<li>项目三</li>
</ol>
<p>这也是一个有序列表</p>
<ol>
<li>项目一</li>
<li>项目二</li>
<li>项目三</li>
</ol>
</blockquote>
<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用 <code>*</code> 星号和 <code>_</code> 下划线作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被显示为<em>斜体</em>，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被显示为<strong>粗体</strong>，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被显示为<strong><em>粗斜体</em></strong>，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">_我是一行斜体字_</div><div class="line">**我是一行粗体字**</div><div class="line">***我是一行粗斜体***</div></pre></td></tr></table></figure>
<blockquote>
<p><em>我是一行斜体字</em><br><strong>我是一行粗体字</strong><br><strong><em>我是一行粗斜体</em></strong></p>
</blockquote>
<p>在这里说一句，因为中文字体鲜有斜体设计，大部分字体显示效果都不尽人意，所以不建议大家使用斜体强调中文。</p>
<h3 id="代码标识和代码区块"><a href="#代码标识和代码区块" class="headerlink" title="代码标识和代码区块"></a>代码标识和代码区块</h3><p>作为一名码农常常需要往自己的文稿中写入大量的代码，而代码的排版和显示甚至于使用的字体与普通文字都是很不一样的，Markdown 对于代码区块有很好的支持。值得一提的是，代码区块中的所有输入都会按照原样输出，包括连续的空格。</p>
<p>Markdown 中的代码标识主要有行内代码和代码区块两种。行内代码用一对 ` 反引号`（位于键盘 <code>⎋ esc</code> 键下方）标识。例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">我是可爱的 \`⌘ command\` 键，当我设置变量 \`int a = 20;\` 时，就可以内嵌行内代码了。</div></pre></td></tr></table></figure>
<blockquote>
<p>我是可爱的 <code>⌘ command</code> 键，当我设置变量 <code>int a = 20;</code> 时，就可以内嵌行内代码了。</p>
</blockquote>
<p>当需要输入大段的代码时，只需要用一对连续3个 ` ` ` 反引号 ` ` ` 将代码区块包围（enclose）起来就可以了，第一组反引号后可以标注代码块的语言以帮助编辑器识别，例如：</p>
<pre><code><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Hello world!"</span>);                   <span class="comment">// 教科书的写法</span></div><div class="line">    <span class="built_in">puts</span>(<span class="string">"Hello world!"</span>);                     <span class="comment">// 我最喜欢的</span></div><div class="line">    <span class="built_in">puts</span>(<span class="string">"Hello"</span> <span class="string">" "</span> <span class="string">"world!"</span>);               <span class="comment">// 拼接字符串</span></div><div class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello world!"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>; <span class="comment">// C++风格的教科书写法</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><p>还有一种产生区块代码的方式，是在每段的段首使用多于1个 <code>⇥ tab</code> 制表符或者4个 <code>⌴ space</code> 空格符进行整体缩进。由于这种方法不方便使用而且极易混淆视听，所以我不推荐大家使用，也不多做介绍了，大家知道即可。</p>
<blockquote>
<p><code>hilight.js</code> 支持的语法有：</p>
<ul>
<li>1C</li>
<li>ActionScript</li>
<li>Apache</li>
<li>AppleScript</li>
<li>AsciiDoc</li>
<li>AspectJ</li>
<li>AutoHotkey</li>
<li>AVR Assembler</li>
<li>Axapta</li>
<li>Bash</li>
<li>Brainfuck</li>
<li>Cap’n Proto</li>
<li>Clojure REPL</li>
<li>Clojure</li>
<li>CMake</li>
<li>CoffeeScript</li>
<li>C++/cpp</li>
<li>C#</li>
<li>CSS</li>
<li>D</li>
<li>Dart</li>
<li>Delphi</li>
<li>Diff</li>
<li>Django</li>
<li>Dockerfile</li>
<li>DOS .bat</li>
<li>Dust</li>
<li>Elixir</li>
<li>ERB (Embedded Ruby)</li>
<li>Erlang REPL</li>
<li>Erlang</li>
<li>FIX</li>
<li>Fortran</li>
<li>F#</li>
<li>G-code (ISO 6983)</li>
<li>Gherkin</li>
<li>GLSL</li>
<li>Go</li>
<li>Gradle</li>
<li>Groovy</li>
<li>Haml</li>
<li>Handlebars</li>
<li>Haskell</li>
<li>Haxe</li>
<li>HTTP</li>
<li>Ini</li>
<li>Java</li>
<li>JavaScript</li>
<li>JSON</li>
<li>Julia</li>
<li>Kotlin</li>
<li>Lasso</li>
<li>Less</li>
<li>Lisp</li>
<li>LiveCode</li>
<li>LiveScript</li>
<li>Lua</li>
<li>Makefile</li>
<li>Markdown</li>
<li>Mathematica</li>
<li>Matlab</li>
<li>MEL</li>
<li>Mercury</li>
<li>Mizar</li>
<li>Monkey</li>
<li>Nginx</li>
<li>Nimrod</li>
<li>Nix</li>
<li>NSIS</li>
<li>Objective C</li>
<li>OCaml</li>
<li>Oxygene</li>
<li>Parser3</li>
<li>Perl</li>
<li>pf</li>
<li>PHP</li>
<li>PowerShell</li>
<li>Processing</li>
<li>Python profile</li>
<li>Prolog</li>
<li>Protocol Buffers</li>
<li>Puppet</li>
<li>Python</li>
<li>Q</li>
<li>R</li>
<li>RenderMan RIB</li>
<li>Roboconf</li>
<li>RenderMan RSL</li>
<li>Ruby</li>
<li>Oracle Rules Language</li>
<li>Rust</li>
<li>Scala</li>
<li>Scheme</li>
<li>Scilab</li>
<li>SCSS</li>
<li>Smali</li>
<li>Smalltalk</li>
<li>SML</li>
<li>SQL</li>
<li>Stata</li>
<li>STEP Part 21 (ISO 10303-21)</li>
<li>Stylus</li>
<li>Swift</li>
<li>Tcl</li>
<li>TeX</li>
<li>Thrift</li>
<li>Twig</li>
<li>TypeScript</li>
<li>Vala</li>
<li>VB.NET</li>
<li>VBScript in HTML</li>
<li>VBScript</li>
<li>Verilog</li>
<li>VHDL</li>
<li>Vim Script</li>
<li>Intel x86 Assembly</li>
<li>XL</li>
<li>HTML, XML- &gt; </li>
</ul>
</blockquote>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>你可以在一行中用三个以上的 <code>*</code> 星号、 <code>-</code> 减号、<code>_</code> 下划线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：（希望大家多使用分割线来分割自己文章的区块，提高可读性）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">___</div><div class="line">- - - - - </div><div class="line">__ _ ___</div></pre></td></tr></table></figure></p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 中对链接和图片采取很舒服的表达方式，我们先来看看链接。</p>
<p>Markdown 支持两种形式的链接语法：行内式和参考式两种形式。</p>
<p><strong>行内式</strong>的语法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[链接文字](链接地址)</div><div class="line">[链接文字](链接地址 &quot;title属性&quot;)</div></pre></td></tr></table></figure>
<p>其中<code>(链接地址)</code>如果是绝对地址请不要忘记加上<code>http://</code>，<code>&quot;title&quot;属性</code>是指鼠标移到链接上显示的文字，这个属性还可以应用在空链接上实现特殊的效果，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">欢迎关注我的微博[@悦华](http://www.weibo.com/quentinchen/)</div><div class="line">欢迎莅临我的[简书](http://www.jianshu.com/users/6e06e4695b9a/ &quot;这是悦华的简书&quot;)</div><div class="line">这是[百度](http://www.baidu.com/)</div><div class="line">[请把鼠标悬停在这里](#no-link &quot;你会看到一条注释&quot;)，不要点击</div></pre></td></tr></table></figure>
<blockquote>
<p>欢迎关注我的微博<a href="http://www.weibo.com/quentinchen/" target="_blank" rel="external">@悦华</a><br>欢迎莅临我的<a href="http://www.jianshu.com/users/6e06e4695b9a/" title="这是悦华的简书" target="_blank" rel="external">简书</a><br>这是<a href="http://www.baidu.com/" target="_blank" rel="external">百度</a><br><a href="#no-link" title="你会看到一条注释">请把鼠标悬停在这里</a>，不要点击</p>
</blockquote>
<p><strong>参考式</strong>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记，接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">欢迎关注我的微博[@悦华][weibo]</div><div class="line">欢迎莅临我的[简书][jianshu]</div><div class="line">这是[百度][1]</div><div class="line">[请把鼠标悬停在这里][2]，不要点击</div><div class="line"></div><div class="line">其间可以有</div><div class="line">任意多的文本</div><div class="line"></div><div class="line">[weibo]:http://www.weibo.com/quentinchen/</div><div class="line">[jianshu]:http://www.jianshu.com/users/6e06e4695b9a/ &quot;这是悦华的简书&quot;</div><div class="line">[1]:http://www.baidu.com/</div><div class="line">[2]:#no-link &quot;你会看到一条注释&quot;</div></pre></td></tr></table></figure>
<blockquote>
<p>欢迎关注我的微博<a href="http://www.weibo.com/quentinchen/" target="_blank" rel="external">@悦华</a><br>欢迎莅临我的<a href="http://www.jianshu.com/users/6e06e4695b9a/" title="这是悦华的简书" target="_blank" rel="external">简书</a><br>这是<a href="http://www.baidu.com/" target="_blank" rel="external">百度</a><br><a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">请把鼠标悬停在这里</a>，不要点击</p>
<p>其间可以有<br>任意多的文本</p>
</blockquote>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片<a id="photo"></a></h3><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p>
<p>Markdown 使用一种和链接很相似的语法来标记图片，只需要在链接的语法前面加一个 <code>!</code> 感叹号就可以了，同样也允许两种样式： 行内式和参考式。</p>
<p>行内式的语法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![替代文字](链接地址)</div><div class="line">![替代文字](链接地址 &quot;title属性&quot;)</div></pre></td></tr></table></figure>
<p>其中<code>[替代文字]</code>是指当图片加载不出来时显示的替代文字以提高文章的可读性，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![Aaron Swartz](http://pic.baike.soso.com/p/20130113/20130113123158-66539251.jpg &quot;Markdown 开发组帅哥 Aaron Swartz&quot;)</div><div class="line"></div><div class="line">![这就是一张裂掉的图(╬￣皿￣)凸](nothing)</div></pre></td></tr></table></figure>
<p><img src="http://pic.baike.soso.com/p/20130113/20130113123158-66539251.jpg" alt="Aaron Swartz" title="Markdown 开发组帅哥 Aaron Swartz"></p>
<p><img src="nothing" alt="这就是一张裂掉的图(╬￣皿￣)凸"></p>
<p>图片的参考式插入和链接的参考式是一样的，我就不做过多的赘述了。</p>
<p>想必大家也发现了，由于 Markdown 是纯文本语言，里面是不可能真的插入一张照片的，除非使用工具（后文会介绍）直接拖拽图片进来，否则我们还需要借助图床来插入图片，下面为大家推荐几个好用的图床：</p>
<ul>
<li><a href="https://portal.qiniu.com/signup?code=3lj4rde88jpzm" target="_blank" rel="external">七牛云存储</a> - 国内大公司云空间，各网速度都挺快</li>
<li><a href="https://t.williamgates.net/" target="_blank" rel="external">https://t.williamgates.net</a> - 简单好用，速度看网络</li>
<li><a href="http://photobucket.com/" target="_blank" rel="external">Photo Bucket</a> - 据说是BBC官方图床</li>
</ul>
<h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown 提供了一种快捷方式「自动地」定义链接和 E-mail 地址：直接用一对尖括号把 URL 或 E-mail 地址包住。这表示链接文本就是 URL 本身，E-mail 文本就是 E-mail 本身。这样你就得到了一个可点击的链接，如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;http://example.com/&gt;</div></pre></td></tr></table></figure>
<p>自动 E-mail 地址工作方式相似，只有一点不同。Markdown 自动的用一些十进制和十六进制数字表示你的 E-mail，以防止遭遇垃圾邮件袭击。 例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;address@example.com&gt;</div></pre></td></tr></table></figure>
<p>会被转换为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</div></pre></td></tr></table></figure>
<p>浏览器会将它渲染为一个可点击的链接，并正确显示 <a href="&#109;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#x61;&#100;&#100;&#114;&#101;&#x73;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;">&#x61;&#100;&#100;&#114;&#101;&#x73;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;</a>。</p>
<p>这种实体编码的小方法可以骗过一些收集邮件地址的机器人，不过它确实无法骗过所有的机器人。有总比没有强，聊胜于无。能阻止一点就阻止一点好了。</p>
<h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 可以利用 <code>\</code> 反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果，你可以在星号的前面加上反斜杠：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\*我只想用星号来强调这段内容\*</div></pre></td></tr></table></figure>
<blockquote>
<p>*我只想用星号来强调这段内容*</p>
</blockquote>
<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<ul>
<li><code>\</code>   反斜杠</li>
<li><code>*</code>   星号</li>
<li><code>_</code>   下划线</li>
<li><code>{}</code>  花括号</li>
<li><code>[]</code>  方括号</li>
<li><code>()</code>  园括号</li>
<li><code>#</code>   井号</li>
<li><code>+</code>   加号</li>
<li><code>-</code>   减号</li>
<li><code>.</code>   英文句点</li>
<li><code>!</code>   敢叹号</li>
<li>`  反引号</li>
</ul>
<h2 id="Markdown-进阶语法"><a href="#Markdown-进阶语法" class="headerlink" title="Markdown 进阶语法"></a>Markdown 进阶语法</h2><p>为适应更多更复杂的描述，尤其是理工科文字工作者的编辑需求，Markdown 语言扩展出了 MultiMarkdown ，简称 MMD。MMD有更多的标识，使得 Markdown 的「描述」能力大大增强。（以下介绍的语法并非所有的解释器都能识别，但肯定也会逐渐得到广泛认可）</p>
<h3 id="锚点链接"><a href="#锚点链接" class="headerlink" title="锚点链接"></a>锚点链接</h3><p>锚点是 <code>HTML</code> 文档内部链接的一种形式，既然 Markdown 继承于 <code>HTML</code>，是它的一个子集，那应该对锚点也是支持的，所以我们可以使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a id=&quot;name&quot;&gt;&lt;/a&gt;</div></pre></td></tr></table></figure>
<p>代码在文档的任意一处设置锚点，然后将</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[链接文字](链接地址)</div><div class="line">[链接文字](链接地址 &quot;title属性&quot;)</div></pre></td></tr></table></figure>
<p>中的 <code>(链接地址)</code> 改为相应的 <code>(#name)</code> 即可。例如：</p>
<p>我在前面「图片」的那个小节设置了一个 <code>id=&quot;photo&quot;</code> 的锚点，那么下面的代码将会成功的链接那个锚点：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[如何在 Markdown 中插入图片](#photo)</div></pre></td></tr></table></figure>
<p><a href="#photo">如何在 Markdown 中插入图片</a></p>
<h3 id="LaTeX-公式-LaTeX"><a href="#LaTeX-公式-LaTeX" class="headerlink" title="LaTeX 公式[^LaTeX]"></a>LaTeX 公式[^LaTeX]</h3><p>LaTeX 的数学公式主要有两种，即行内公式（Inline Formulas）和块级公式（Display Formulas）。行内公式内嵌于正文文本中间，与正文文字行高相等；块级公式则单独成行。</p>
<h4 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h4><p>用<code>$...$</code>符号包围的 LaTeX 代码，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这样的代码可以生成如`$x^n+y^n=z^n$`这样的行内公式。</div></pre></td></tr></table></figure>
<blockquote>
<p>这样的代码可以生成如$x^n+y^n=z^n$这样的行内公式。</p>
</blockquote>
<h4 id="块级公式"><a href="#块级公式" class="headerlink" title="块级公式"></a>块级公式</h4><p>用<code>$$...$$</code>符号包围的 LaTeX 代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这样的代码可以生成如`$$x=\dfrac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;$$`这样的块级公式。</div></pre></td></tr></table></figure>
<blockquote>
<p>这样的代码可以生成如$$x=\dfrac{-b\pm\sqrt{b^2-4ac}}{2a}$$这样的块级公式。</p>
</blockquote>
<p>对理工科的同学而言，LaTeX 公式的插入是一个非常值得探讨的话题，我在另一篇文章<a href="https://www.zybuluo.com/fyywy520/note/82980/" target="_blank" rel="external">《Markdown 下 LaTeX 公式、编号、对齐》</a>中做了深入的介绍，感兴趣的读者可以打开看看。</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是纯文本格式文字比较难以表达的一个部分，Markdown 在这一点上做的也不是非常出彩，下面的例子是一个表格绘制语法的展示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| 项目        | 价格   |  数量  |</div><div class="line">| --------   | -----:  | :----:  |</div><div class="line">| 计算机     | $1600 |   5     |</div><div class="line">| 手机        |   $12   |   12   |</div><div class="line">| 管线        |    $1    |  234  |</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<p>表格由表头和表项组成，用 <code>|---|</code>符号组隔开即可，其中 <code>|:--|</code> 表示表项左对齐， <code>|:--:|</code> 表示表项居中对齐，<code>|--:|</code> 表示表项右对齐。</p>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用 <code>~~</code> 包围文本表示删除线，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~~这是一段错误的文本。~~</div></pre></td></tr></table></figure>
<blockquote>
<p><del>这是一段错误的文本。</del></p>
</blockquote>
<h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><p>使用 <code>[^keyword]</code> 表示注脚，在文章的任意位置输入 <code>[^keyword]: 脚注内容</code> 可以在文章最后生成注脚。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">这是一个注脚[^footnote]的样例。</div><div class="line"></div><div class="line">这是第二个注脚[^footnote2]的样例。</div><div class="line"></div><div class="line">[^footnote]: 这是一个*注脚*的**文本**。</div><div class="line"></div><div class="line">[^footnote2]: 这是另一个*注脚*的**文本**。</div></pre></td></tr></table></figure>
<p>这是一个注脚<a href="这是一个*注脚*的**文本**。">^footnote</a>的样例。</p>
<p>这是第二个注脚<a href="这是另一个*注脚*的**文本**。">^footnote2</a>的样例。</p>
<h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">st=&gt;start: 开始</div><div class="line">e=&gt;end: 结束</div><div class="line">op=&gt;operation: 问你个事儿</div><div class="line">cond=&gt;condition: 这篇文章写的好么</div><div class="line"></div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;op</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">st=&gt;start: 开始</div><div class="line">e=&gt;end: 结束</div><div class="line">op=&gt;operation: 问你个事儿</div><div class="line">cond=&gt;condition: 这篇文章写的好么</div><div class="line"></div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;op</div></pre></td></tr></table></figure>
<p>以及时序图:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">李雷-&gt;韩梅梅: 韩梅梅，你现在好吗，他好吗?</div><div class="line">Note right of 韩梅梅: 迟疑了一会儿</div><div class="line">韩梅梅--&gt;李雷: 我很好，他也很好! 你呢，你还好吗，她好吗？</div><div class="line">Note left of 李雷: 顿了顿</div><div class="line">李雷-&gt;韩梅梅: 我很好，她刚才告诉我她也很好。</div><div class="line">Note right of 韩梅梅: 无语凝噎</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">李雷-&gt;韩梅梅: 韩梅梅，你现在好吗，他好吗?</div><div class="line">Note right of 韩梅梅: 迟疑了一会儿</div><div class="line">韩梅梅--&gt;李雷: 我很好，他也很好! 你呢，你还好吗，她好吗？</div><div class="line">Note left of 李雷: 顿了顿</div><div class="line">李雷-&gt;韩梅梅: 我很好，她刚才告诉我她也很好。</div><div class="line">Note right of 韩梅梅: 无语凝噎</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>提示：</strong>想了解更多，请查看<strong>流程图<a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">语法</a></strong>以及<strong>时序图<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">语法</a></strong>。</p>
</blockquote>
<h3 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p>
<p>[TOC]</p>
<hr>
<h2 id="Markdown-编辑器推荐"><a href="#Markdown-编辑器推荐" class="headerlink" title="Markdown 编辑器推荐"></a>Markdown 编辑器推荐</h2><p>诚然，简便轻巧的 Markdown 语言只需要一个小小的<strong>记事本</strong>或者<strong>文本编辑</strong>就可以轻松胜任，但正所谓「工欲善其事，必先利其器」，「好马还需好鞍配」，Markdown 如果配上一个强大的编辑器，那肯定会让自己感到舒心，让编辑工作事半功倍。</p>
<p>什么样的编辑器才是一个好的编辑器呢？</p>
<p>首先，作为一门「标记型语言」，最重要的就是能够实时查看自己的「标记」效果是否正确。所以，「分屏显示，同屏滚动」是一款优秀编辑器的基本功能。其次，能对 Markdown 的语法有良好的支持，尽可能支持最新的扩展语法。然后，便是界面、操控、性能、特性等等一堆需要关心的东西，下面我们就来看看哪些编辑器荣登我的推荐榜。</p>
<h3 id="马克飞象"><a href="#马克飞象" class="headerlink" title="马克飞象"></a>马克飞象</h3><p><a href="http://maxiang.info/" target="_blank" rel="external"><strong>马克飞象</strong></a>是一款专为印象笔记（Evernote）打造的 Markdown 编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/image-Maxiro.jpg-960.jpg" alt="Marxico" title="来自马克飞象"></p>
<p>虽说马克飞象是专为印象笔记而设计，但是对于平常 Markdown 文档的书写而言，也绝对是编辑器中的佼佼者。它有非常多的优点：</p>
<ul>
<li><strong>支持离线</strong>：在线的 Markdown 编辑器有很多，大多都功能完备，制作精良，但是需要联网才能打开不免让人觉得有时候没网只能干着急。现在，在电脑有 Chrome 浏览器的情况下，马克飞象已经可以作为离线应用下载了。</li>
<li><strong>语法丰富</strong>：支持高亮代码块，自动识别代码语言；插入丰富的 <em>LaTeX</em> 公式，是理工科同学工作学习好帮手；其还支持 <code>[toc]</code> 目录自动生成、<code>html</code> 语言扩展和注脚等众多 MultiMarkdown 扩展。</li>
<li><strong>得心应手</strong>：支持便捷的插入图片助手，无论是本地上传/图片URL/拖放图片/直接截图粘贴，随心所欲。</li>
<li><strong>界面美观</strong>：作为一名颜控，我不得不说马克飞象的界面非常美观。分屏编辑时，两边屏幕都是滚屏关联的，左边的源码会根据输入的标记语言自动变换样式，配色多样；右边的预览窗口可以试试看到文档的渲染效果，其渲染的 CSS 样式大方得体，淡雅清丽，非常耐看。当然你也可以手动更改 CSS 样式，调整出你最喜欢的渲染效果。</li>
<li><strong>深度整合</strong>：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。这是马克飞象的主打特色，就是和印象笔记的双向同步功能。不管是在国内还是国际上，印象笔记[^evernote]（Evernote International）都是非常主流的笔记管理工具。值得一提的是中文版<strong>马克飞象</strong>能与印象笔记和 Evernote 绑定，同步笔记是其 Premium 功能，年功能费79元。国际版 <a href=""><strong>Marxico</strong></a> 只能绑定 Evernote，但是同步笔记功能免费。</li>
<li><strong>多样导出</strong>：马克飞象支持文档导出为 Markdown 的 <code>.md</code> 格式（纯文本），HTML 的 <code>.html</code> 格式（可以用任何一款主流浏览器打开），以及出版物发行文档 <code>.pdf</code> 格式。</li>
<li><strong>美中不足</strong>：我想想，代码区块在某些情况下标识不合理，比如代码区块内的 <em>LaTeX</em> 代码。代码区块不支持行号，你可以自己用 CSS 修改。</li>
</ul>
<h3 id="作业部落-CMD-Markdown"><a href="#作业部落-CMD-Markdown" class="headerlink" title="作业部落 - CMD Markdown"></a>作业部落 - CMD Markdown</h3><p><a href="https://www.zybuluo.com/mdeditor/" target="_blank" rel="external"><strong>CDM Markdown</strong></a>是大神<a href="http://weibo.com/ghosert" target="_blank" rel="external">@ghoster</a>和他的团队开发的一款在线 Markdown 编辑器。</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/image-CMDMD.jpg-960.jpg" alt="作业部落 - CMDMarkdown" title="来自CMD Markdown"></p>
<blockquote>
<h4 id="欢迎使用-Cmd-在线-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-在线-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd - 在线 Markdown 编辑阅读器"></a>欢迎使用 Cmd - 在线 Markdown 编辑阅读器</h4><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。</p>
<p>您可以使用 Cmd Markdown：</p>
<ul>
<li>整理知识，学习笔记 </li>
<li>发布日记，杂文，所见所想 </li>
<li>撰写发布技术文稿（代码支持） </li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p>基本上马克飞象拥有的功能，除了马克飞象主打的与印象笔记同步之外，它都有了，而与马克飞象不同的是：</p>
<ul>
<li>更加完善的代码高亮系统，识别更精准，排版更漂亮，而且支持行号。</li>
<li>带有社交属性的发布与分享系统。CDM Markdown 是作者的网站<strong>作业部落</strong>的一个编辑工具，所以你编辑的文稿都会储存在作业部落的服务器上，为了保障数据安全，CMD Markdown 会将你每一次击键的内容保存至云端，你无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 CMD Markdown 的时候继续写作。同时，你的思想和知识可以通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识。</li>
<li>在网络环境不稳定的情况下记录文字一样很安全！在你编辑文档的时候，如果电脑突然失去网络连接，CMD Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 CMD Markdown 的时候，它会提醒你将离线保存的文字传送至云端。</li>
<li>文章可以和别人协同编辑，以自然的方式让别人进行批注</li>
</ul>
<p>较为遗憾的是，由于开发时间还短，CMD Markdown 也有许多不尽如人意的地方，例如：</p>
<ul>
<li>并没有离线的客户端</li>
<li><code>.pdf</code> 和 <code>.html</code> 导出还是乱码</li>
</ul>
<p>我和作者<a href="http://weibo.com/ghosert" target="_blank" rel="external">@ghoster</a>联系后，<a href="http://weibo.com/ghosert" target="_blank" rel="external">@ghoster</a>告诉我说，这些功能都在做了，很快就会更新面世，所以，让我们好好期待吧！</p>
<h3 id="简书"><a href="#简书" class="headerlink" title="简书"></a>简书</h3><p><a href="http://www.jianshu.com/" target="_blank" rel="external"><strong>简书</strong></a>是一个将写作与阅读整合在一起的网络产品。旨在为写作者打造最优秀的写作软件 ，为阅读者打造最优雅的阅读社区。</p>
<p><img src="http://7xin49.com1.z0.glb.clouddn.com/image-简书.jpg-960.jpg" alt="jianshu" title="来自简书"></p>
<p>简书的中文排版效果非常好，与<strong>作业部落</strong>不相伯仲，文本颜色更加丰富。研究表明，在淡黄色的背景下阅读深蓝色或黑色的文字让人的眼睛觉得最舒适，这就是<strong>简书</strong>。</p>
<p>简书的强大还在于它超级强大的的版本管理，你每一次的文档保存都会被记录，你可以回到文档的任一个版本，彻底告别 <code>v1.0</code> <code>v2.0</code> <code>v3.0</code> 的时代。而且，你所有的文档只需要一键就可以打包下载到本地，储存为 <code>.md</code> 文档。</p>
<p>简书还提供了十分强大博客和社交的功能，上面聚集了成千上万的优秀作者。</p>
<p>不过，简书对于理工科的公式、代码输入，还有许多 MultiMarkdown 并不是很支持。所以如果你是一名文科文字编辑者，轻巧简便，淡雅脱俗的<strong>简书</strong>就是你的不二选择！</p>
<h3 id="终端软件"><a href="#终端软件" class="headerlink" title="终端软件"></a>终端软件</h3><p>刚才介绍的编辑器都是在线编辑器，下面再给大家推荐几款终端编辑器：</p>
<ul>
<li><a href="http://mouapp.com/" target="_blank" rel="external"><strong>Mou</strong></a> - 一个 Mac OS X上的Markdown编辑器。</li>
<li><a href="http://macdown.uranusjr.com/" target="_blank" rel="external"><strong>MacDown</strong></a> - Mac OS X 上的 Markdown 开源编辑器，作者称其深受 Mou 启发。</li>
<li><a href="http://markdownpad.com/" target="_blank" rel="external"><strong>MarkdownPad</strong></a> - Windows上的全功能 Markdown 编辑器。</li>
<li><a href="http://pad.haroopress.com/" target="_blank" rel="external"><strong>Haroopad</strong></a> - Linux 上的优秀 Markdown 编辑器。</li>
</ul>
<p>这些软件在终端都有完善的功能和不错的表现，大家可以根据自己的平台选择，作为「记事本」和「文本编辑」的替代也是相当不错的。</p>
<p>至于移动端，由于屏幕大小受到限制，我认为使用系统自带的「文本编辑器」就可以了，并不需要特别的工具。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>花了几个日日夜夜的功夫，终于把这篇文章写完了，其间为了找参考资料和构思全文布局，花了不少时间和心思。希望这篇文章可以帮到大家，带大家走进 Markdown 的世界。如果大家有什么问题的话，可以到我的微博给我留言，也可以给我写 E-mail。最后，希望喜欢这篇文章的朋友多多转载。谢谢大家耐心看完！（看到这里的都是<strong>真爱</strong>）</p>
<p>微博：<a href="http://weibo.com/quentinchen/" target="_blank" rel="external">@悦华</a><br>邮箱：<a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#x71;&#x75;&#101;&#110;&#116;&#x69;&#x6e;&#x2e;&#99;&#104;&#101;&#x6e;&#64;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;">&#x71;&#x75;&#101;&#110;&#116;&#x69;&#x6e;&#x2e;&#99;&#104;&#101;&#x6e;&#64;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>
<hr>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">Markdown - John Gruber - Daring Fireball</a><br><a href="http://zh.wikipedia.org/wiki/Markdown#cite_note-md-1/" target="_blank" rel="external">Markdown - 维基百科</a><br><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown 语法说明 (简体中文版) - Wow!Ubuntu</a><br><a href="http://www.ituring.com.cn/article/775" target="_blank" rel="external">Markdown 语法 - shukebete - 图灵社区</a><br><a href="http://www.yangzhiping.com/tech/r-markdown-knitr.html/" target="_blank" rel="external">Markdown 写作浅谈 - 阳志平</a><br><a href="http://yuedu.baidu.com/ebook/7408817d5f0e7cd184253681" target="_blank" rel="external">Markdown - Macin Chen</a><br><a href="http://apple4us.com/2012/02/why-writers-should-use-markdown/" target="_blank" rel="external">为什么作家应该用 Markdown 保存自己的文稿 - Lawrence Li</a><br><a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">献给写作者的 Markdown 新手指南 - 简书</a><br><a href="https://www.zybuluo.com/chanvee/note/10788/" target="_blank" rel="external">Cmd Markdown 简明语法手册</a><br><a href="http://codego.net/328489/" target="_blank" rel="external">如何创建和链接到 Multimarkdown 命名锚 - CodeGo</a><br><a href="http://www.jianshu.com/p/dcffb6f60fe2" target="_blank" rel="external">Markdown 编辑器之比较 - 怀瑾握瑜</a></p>
<p>[^Swartz]: Aaron Swartz，1986年11月8日－2013年1月11日，一位程序员、作家、政治组织策划人和积极行动主义者。他年仅14岁就参与创造RSS 1.0规格，因而在程式设计圈当中声名大噪。2011年7月19日他被指控自 JSTOR 非法下载大量学术期刊文章，并遭联邦政府起诉被捕，因而获得主流媒体关注。Swartz 是 Demand Progress 和 Progressive Change Campaign Committee 的共同创办人。他曾住在美国马萨诸塞州的剑桥，于2013年1月11日自杀。</p>
<p>[^LaTeX]: LaTeX 是一种基于 TEX 的排版系统，由美国计算机学家莱斯利·兰伯特（Leslie Lamport）在20世纪80年代初期开发，利用这种格式，即使使用者没有排版和程序设计的知识也可以充分发挥由 TeX 所提供的强大功能，能在几天，甚至几小时内生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学类文档。这个系统同样适用于生成从简单的信件到完整书籍的所有其他种类的文档。</p>
<p>[^evernote]: 印象笔记帐户和 Evernote 国际版帐户使用同一款软件，但帐户相互独立（可以用同一个邮箱在两边注册）。Evernote 国际版帐户服务器在国外。印象笔记帐户服务器在国内，有更快更稳定的同步速度和更完善的用户支持服务，并专门为国内用户增加如收藏微信和微博等本地化功能 。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;我们为什么要使用-Markdown&quot;&gt;&lt;a href=&quot;#我们为什么要使用-Markdown&quot; class=&quot;headerlink&quot; title=&quot;我们为什么要使用 Markdown&quot;&gt;&lt;/a&gt;我们为什么要使用 Markdown&lt;/h2&gt;&lt;p&gt;Markdown 是一种正在流行起来的「标记语言」，通常为程序员群体所用。但现在，不光是程序员，对于普通的文字编辑者而言，Markdown 的优势也越来越明显了。&lt;/p&gt;
&lt;h3 id=&quot;从前码字时我们面临着什么困境&quot;&gt;&lt;a href=&quot;#从前码字时我们面临着什么困境&quot; class=&quot;headerlink&quot; title=&quot;从前码字时我们面临着什么困境&quot;&gt;&lt;/a&gt;从前码字时我们面临着什么困境&lt;/h3&gt;&lt;p&gt;以前，大部分的人使用 Word 或 Pages 码字、写作、写论文，过去的文档也大都以&lt;code&gt;.doc&lt;/code&gt;， &lt;code&gt;.docx&lt;/code&gt;格式或是&lt;code&gt;.pages&lt;/code&gt;格式储存。还有人为了编辑简洁、保证文稿发给谁都能正常打开，会用&lt;code&gt;.txt&lt;/code&gt; 格式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.doc&lt;/code&gt;或&lt;code&gt;.pages&lt;/code&gt;格式有如下问题：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="http://kchen.cc/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>好疼的金圣叹</title>
    <link href="http://kchen.cc/2015/03/28/jinshengtan-hurt/"/>
    <id>http://kchen.cc/2015/03/28/jinshengtan-hurt/</id>
    <published>2015-03-28T07:21:46.000Z</published>
    <updated>2016-11-04T07:10:04.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://www.xueshiboke.com/zb_users/upload/2016/09/201609221474503508138153.jpg" alt="金圣叹"></p>
<blockquote>
<p>【来自《独唱团》第一辑。BY：<strong>咪蒙</strong>】</p>
</blockquote>
<h3 id="广告x金圣叹"><a href="#广告x金圣叹" class="headerlink" title="广告x金圣叹"></a>广告x金圣叹</h3><p>他是17世纪的精神先锋。</p>
<p>他的使命是惊世骇俗。</p>
<p>乱世中，他最达观。浊世里，他最清醒。</p>
<p>他是清醒的酒鬼，玩世不恭的才子，爱吃狗肉的佛教徒，精通哲学的神棍，恶毒的文艺批评家，视规则如狗屎的学者，反礼教的孝子慈父。</p>
<p>他属于中国历代文人中有趣、任性又精神分裂的稀有物种。</p>
<h3 id="狱警x金圣叹"><a href="#狱警x金圣叹" class="headerlink" title="狱警x金圣叹"></a>狱警x金圣叹</h3><p>『我是南京监狱狱警。今天金圣叹被分到我的辖区了。』</p>
<p>这是1661年中秋节前夕天涯社区最红爆料贴。楼主ID为『《越狱》是部脑残剧』。</p>
<p>『金圣叹很难搞。一会摆出莫测高深的装B样，据说在想「半夜两更半」的下联；一会儿又很亢奋地跟我讨论一线城市房价。丫那小身板，瘦骨嶙峋的，想打他吧，最近全国监狱搞形象工程，查出来要扣老子奖金。不过哥还是赚到了，提前买了100本他的书让他签名，感兴趣的朋友请光临我的淘宝网店。金圣叹临死前的绝笔，全球限量发行。哥很低调，拒绝人肉！』</p>
<p>当天各大媒体、门户网站集体陷入癫狂状态。狗仔24小时在监狱周边蹲点守候最新八卦。没办法，金圣叹啊，年度作家首富、出版界大腕、星象学家、预言大师，连续5年当选全国娱记最喜爱的名人NO.1——作为一个偶像派『文化超男』，他时不时登上娱乐头条，标题都很重口味。比如『和花美男十指相扣，金圣叹是gay？』『金圣叹携表妹海边度假72小时，疑似近亲乱伦』。作为『清朝第一博主』，金圣叹的博客篇篇有爆点。他向历代文化名人开炮，骂刘辰翁是奴才，苏轼没有大局观，晏殊的才气如『痴狗咬块』。他列出人生最爽33件事，件件恶趣味：私密部位长疮，关起门用热水洗一洗泡一泡，爽；看到别人放风筝时线突然断了，爽；听说有人刚死了，一打听，原来是城中第一心机鬼，爽翻天！</p>
<p>而现在，最轰动的新闻是，金圣叹因涉嫌参与聚众闹事被最高法院判了死刑。公检法全面封锁消息，居然有想钱想疯了的狱警出来爆料，媒体们无法淡定。</p>
<p>第二篇爆料贴又引发网络瘫痪。</p>
<a id="more"></a>
<p>『我冒死又来了。金圣叹的死刑明天执行。刚才他把我神神秘秘地叫过去，特诚恳的拜托我，准许他写封遗书，让我带给他家属。靠。看在我老婆是他铁粉的份上，我才勉强答应了。金圣叹千叮咛万嘱咐让我不要看遗书内容，但万一他Y的写了反动言论，老子要受牵连的啊。哥很纠结，大家说我该怎么办？』狱警很懂得跟网民互动。</p>
<p>当在4小时之内获得50多万跟帖，大部分都是要求楼主『尊重民众知情权、公布遗书内容』时，楼主终于善解人意地再次现身。</p>
<p>『我来了。哥不是怕出事嘛，专门请示了监狱长，在他的指示下我们监控了这封信的内容。说实话，打开信的时候，哥手都是抖的。金圣叹好歹版税都赚了几千万，这遗书少不了要写点财产去向、银行密码什么的，最次也是点学术秘籍、名人八卦，把消息卖给八卦小报也赚翻了。哥要发达了。等下，我接个电话。』</p>
<p>万千网友欲火焚身地等待下文。</p>
<p>『我打开那张纸，金圣叹写的是：「大儿子，你要看清楚，咸菜和黄豆一起吃，有核桃的味道。这个独家发明一传，我就死而无憾！」哥被雷惨了。金圣叹，你强！』</p>
<p>第二天，金圣叹被押上刑场，连同其他17位『乱党』被集体处决，据现场网友爆料，当时宛如巨星演唱会，万人空巷。天朝电视台直播时，只给了一个远景，一行简洁的字幕：恐怖分子死有余辜。</p>
<p>两天后，狱警再度爆料：『砍金圣叹头的那位刽子手现在已经成为我们公检法系统的红人了。据他说，金圣叹死之前，恳请刽子手优先杀自己，省得看到其他朋友被杀，不爽。那刽子手肯定不干噻，金圣叹就说，我身上藏有银票，你先杀了我，钱都归你了。刽子手想「人之将死其言也善」，就网开一面优先杀了他，搜了半天，真的从他两边耳朵里各搜出一个小纸团。乱激动的，打开一看，你们猜是啥？』</p>
<p>这狱警要是去写悬疑小说，东野圭吾要失业的啊。</p>
<p>『一个纸团上写的「好」。另一个写的「疼」。』</p>
<p>有网友猜测，金圣叹是在模仿鱼玄机。王小波的小说《寻找无双》里，鱼玄机死刑前，最纠结的事有三件：要不要穿白裙子看起来更像模范犯人；在牢里胸部饿瘦了早知道买有衬垫的胸罩；必须请狱卒买副太阳眼镜增加明星范儿。</p>
<p>有网友表白，临死都这么有幽默感，大叔，你好萌！</p>
<h3 id="同学x金圣叹"><a href="#同学x金圣叹" class="headerlink" title="同学x金圣叹"></a>同学x金圣叹</h3><p>金圣叹是时代的否定者。</p>
<p>他的离经叛道始自10岁。据ID为『欢迎清穿』的网友称，金圣叹和他是发小，读书时还是睡在他上铺的兄弟。当时金圣叹在私塾当插班生，作为一个大龄文盲，他完全不走五讲四美三热爱路线。他听老师讲《大学》、《中庸》、《论语》、《孟子》时，却产生了与澳洲动画片《玛丽与马克思》中男主角相呼应的情绪：『困茫』——困惑加茫然的合体。金圣叹经常听着听着就睡着了，醒了就跟同桌『欢迎清穿』抱怨：『学四书有个屁用啊？太无聊了。这老头唠唠叨叨有完没完，是不是磕了药？如果所有的书都这么千篇一律，大爷我不念了。』</p>
<p>金圣叹是行动派，很巧的生了场大病，办了休学。成名后接受记者采访，他说：『我对清朝教育体制早已失望，教材根本不说人话。幸好我11岁的时候读了《水浒》、《西厢》这类所谓「非主流」读物，才发现这世界上的书并不全是狗屎。』</p>
<p>从学生时代开始，他就与社会的游戏规则互不兼容。</p>
<p>『欢迎清穿』同学还慷慨地向记者透露了几个金圣叹在考场上的八卦。</p>
<p>有一次考生员，作文题目和现代高考题目保持了同样的智商：《如此则动心否乎》——遇到这些事你动不动心？金圣叹是这样写的：『空山穷谷之中，黄金万两；露白葭苍而外，有一美人，试问夫子动心否乎？曰：动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动动。』考官一数，39个加大号的动字，把试卷填满，气得骂金圣叹朽木不可雕。金圣叹不以为意：孟子不是曰过，吾四十不动心；孔子也曰过，四十而不惑。所以1岁-39岁在荒郊野外看到钞票和美女不动心，那不是傻B吗？</p>
<p>一次是乡试，题目是《西子来矣》，让大家根据越国西施出使吴国这一史实写一篇议论文。金圣叹的答案很幼齿：开东城，西子不来；开南城，西子不来；开北城，西子不来！开西城，则西子来矣！西子来矣。</p>
<p>主考官很有娱乐精神地配合他写批注：秀才去矣！秀才去矣！金圣叹又落榜了。</p>
<p>又是一次乡试。作文题目是『孟子将见王』。金圣叹在答卷的四角分别写了一个『吁』字。照例主考官又被雷焦了。金圣叹解释：『填空题、阅读题都写了40多次孟子了，不用再重复；至于见王，见梁惠王、梁襄王、齐宣王都差不多，也不必写了。只有「将」字可以写一下。你没看过戏吗？王上朝之前，都有四个内侍在周围喊「吁」。这就是「将」。』主考官当场崩溃。</p>
<p>教育界怒了，真以为我们是病猫！县里派了两位很有声望的专家，职位是教谕和训导，要给金圣叹一点颜色看看。两人闭关思索七七四十九天，炮制出一个高明的题目：《人之所以异于禽兽者几希》，并意淫了金圣叹的各种难堪表情。这一次，金圣叹创造了一分钟交卷的新纪录：禽兽不可以教谕，即教谕亦禽兽也；禽兽不可以训导，即训导亦禽兽也。据说，教谕和训导结伴去看了心理医生。</p>
<p>本次过招被网友们称为『禽兽门』，金圣叹完胜。</p>
<p>这些八卦在网络上疯狂转载，金圣叹的微博粉丝数一夜暴增20万。</p>
<p>连90后都很哈他。都是玩叛逆，为什么金圣叹如此有创意？</p>
<p>对此，金圣叹给媒体的解释是，90后算什么？『自古至今，只我一人是大材』。</p>
<p>他的兴趣爱好就是调戏社会。科学是神圣不可侵犯的，他偏要一再侵犯。考场是装腔作势的，他偏要一派天真。</p>
<p>如果清朝也有《世说新语》，金圣叹会被纳入《任诞篇》。古代圣贤倡导的是温柔敦厚、仁者爱人，但他是刻薄刁钻的毒舌派；儒家社会鼓励的是一本正经、积极入世，但他是游戏人间的逍遥家。他把一切既定规则当做跨栏道具，每一次跨越都有型有款。</p>
<p>金圣叹说：我亦弃世。</p>
<p>其实，这个时代配不上他。</p>
<h3 id="施耐庵x金圣叹"><a href="#施耐庵x金圣叹" class="headerlink" title="施耐庵x金圣叹"></a>施耐庵x金圣叹</h3><p>1641年，怪才金圣叹腻歪了惹同代人生气，决定来点刺激的，把已经死了很久的施耐庵再气死一次。</p>
<p>《水浒》金圣叹评点本出版。</p>
<p>据说，施耐庵隔着时空向金圣叹竖起了中指。</p>
<p>在施耐庵看来，金圣叹对他的心血之作《水浒》简直是一种强奸。</p>
<p>一般的点评本，也就是写个总批，来个序言，然后每页来点眉批或夹注，这些加工虽然施耐庵也不是很乐意，但介于并未破坏小说整体性，他也忍了。</p>
<p>『但是，金圣叹卑鄙无耻！』施耐庵接受《穿越壹周刊》记者采访时，情绪有点失控。『金圣叹欺世盗名！他不喜欢后50回，说我狗尾续貂，直接把后面删了，只保留前70回，自己造了个意淫的结局，还不要脸的宣布，这才是原本。盗版把正版都干掉了！我能淡定吗？完全不尊重原著者版权！他写了篇序，冒充是我写的。他动不动就从文章中间插入，写些毫不相干的破事，我设计的叙述高潮经常被他的屁话打断，我不得不指出，你们清朝的版权法相当的不完善！』</p>
<p>记者假装斡旋：『金圣叹奉你为偶像，他不是在点评本的开头就讴歌你了嘛：「天下之文章，无有出《水浒》之右者；天下之格物君子，无有出施耐庵先生右者。」』</p>
<p>『他这话很中肯。但是，不能因为你爱一个女人你就合法强奸她，还任意肢解吧？法律！！明白？』施耐庵又补充了一句，『还有，作为一个有多年临床经验的专业医生，我对金圣叹的忠告是，你的躁郁症继续治疗。』</p>
<p>但读者哪管施耐庵高不高兴，金圣叹的点评本，在图书市场制造了空前轰动。清初百姓哪里见过这种妖孽读物？他们对金圣叹的无厘头点评手法、大亮透露日常八卦的恶趣味和一些类似成功学的心灵母鸡汤迷得神魂颠倒，不仅平民追捧，连知识分子也着了迷，他们从没想到，文学批评可以用这么有想象力的方式去做，奇谈怪论大面积分布。金圣叹上来就说，『乱自上作』，官僚集团其实小人集团，他倡导言论自由，孔子说『天下有道则庶人不议』，金圣叹则指出这不是议与不议的问题，而是敢议与不敢议的问题。他认为文人的创作自由与言论自由才是天下一等大事。他最恨伪善，极度讨厌宋江。『一时学者爱读圣叹书，几乎家置一篇。』</p>
<p>金圣叹继续生猛。</p>
<p>几年后，金批《西厢记》问世。《西厢记》是什么故事？张生迷恋崔莺莺的漂亮脸蛋和性感肉体，两人从一夜情发展为多夜情，张生娶了崔莺莺，还惦记着要和红娘搞3P。这是低级趣味，是情色文学，但金圣叹说，西厢记是一部神作，足以与《离骚》、《史记》、《杜诗》并列，是史上最伟大的巨著！</p>
<p>当时民众就被震撼了：儒家经典和情色小说并提，金圣叹，你有种！</p>
<p>金圣叹号召大家虔诚地读《西厢记》，必须焚香读之、对雪读之、对花读之、与美人并坐读之、与道人对坐读之……因为这份虔诚，金圣叹对《西厢记》只是做了</p>
<p>些小手术，尽管他不喜欢第五本，认为是『伧夫』所为，张生变成猪八戒，隋莹莹变成了木头人，但他没有把第五本删掉了事，还是保留下来，并且恶狠狠地说：『何必续，如何续，偏要续，我便看你续！』一副泼妇骂街的姿态。</p>
<p>在新书出版的记者招待会上，金圣叹上来就说，指责《西厢记》淫秽的人，那是淫者见淫。他指出，中国文人最大的一项虚伪，就是认为君子可以好色，但不能淫。好色是高贵情感，淫是低俗作为，事实上，好色和淫只是机会与条件的问题，淫是天赋人权！发乎情止乎礼，根本就是违背人性的狗屁！</p>
<p>他的言论，像一把华丽的剑，刺穿了现实。</p>
<p>金圣叹的一位虔诚粉丝，广东人廖柴舟为了写好《金圣叹先生传》，以制作精品纪录片的精神，做了大量实地考察、人物访谈和资料收集，最后得出一个严肃的结论：金圣叹之所以那么牛B，全部秘密在于被某个神灵附体。</p>
<p>只能说，金圣叹的才情和见地大大超出同时代的人的理解与想象。</p>
<p>他跑得太快，时代在他后面气喘吁吁。</p>
<h3 id="归庄x金圣叹"><a href="#归庄x金圣叹" class="headerlink" title="归庄x金圣叹"></a>归庄x金圣叹</h3><p>凭藉两本书长期占据图书畅销榜首位，当红作家金圣叹成为媒体曝光率最高的名人，他在各种文学研讨会上亮相，尖脸秃额，目光如电，插科打诨，妙语连珠，到任何场合都成为当之无愧的焦点。各大媒体都邀请他登上封面，酒迹斑斑的破烂长衫和鼓鼓囊囊的LV钱包成为他的两大logo，这种乡镇企业家范儿被当朝时尚男士争相效仿。</p>
<p>追捧和攻击对于名人来说，向来是买一赠一的必然配置。</p>
<p>尤侗、陆士衡等文人都在各种媒体上大骂金圣叹。反金圣叹小组中最活跃的斗士，当属归庄，他在当红辩论节目《一席一虎谈》上炮轰金圣叹，『金圣叹就是一邪教教主。他的水浒点评本，是「倡乱之书」；他的西厢记点评本，是「诲淫之书」。这样一个不顾礼仪廉耻的反动文人，败坏社会风气、扰乱学术氛围，竟然被公众奉为意见领袖、精神偶像，只能说，大家都被他蒙蔽了！』</p>
<p>归庄红了。金圣叹的粉丝对他展开了疯狂围剿，他的百度贴吧当晚就被爆吧。归庄继续抱着金圣叹的大腿炒作，他向八卦小报透露，金圣叹招了一帮花美男当学生，实际上对学生大搞潜规则。</p>
<p>但金圣叹这次让媒体失望了。他不接招。据说，金圣叹唯一的动作是把MSN签名改成『如果我没回复你，那是因为我太拽了』，又据说，他披了马甲在论坛上玩，引用了英国诗人兰德的两句诗：我和谁都不争/和谁争我都不屑。</p>
<p>世界的游戏规则从来都在他个人好恶之下。他的本名很菜市场，叫金采，他给自己改名为『圣叹』，不是期望受到圣人的赞叹——或许他更希望赢得圣人的愤慨。『圣叹』出自《论语》，孔子和众弟子郊游，让大家谈理想谈人生，曾点很装B地说，『暮春者，春服既成，冠者五六人，童子六七人，浴乎沂，风乎舞雩，咏而归。』孔子对曾点的理想表示喟叹，『吾与点也』。曾点是一个狂者，金圣叹也以愤青著称，他推崇的是以轻狂的态度过闲适人生。对于同样是狂者的归庄的种种攻讦，他置若罔闻。如同王朔跳起来骂金庸，后者却假装没听见。</p>
<p>后来，《才子必读古文》的选评出版，金圣叹的人气再次抵达高潮，这次图书营销主打一个『意外』。一个科举制度的叛逆者，突然编辑出版了一套考试类用书，亲自教大家看什么书才能在考试中拿高分——让世人大跌眼镜的同时又纷纷好奇他这次会对经典古文如何嘲弄？</p>
<p>金圣叹负责为这个单调的世界提供意外。现在，这些意外卖了个好价钱。</p>
<p>而历史给了他更大的意外。</p>
<p>1660年，北京传来消息，帝国最高独裁者——顺治皇帝对金圣叹的作品发表了赞美之词，『此是古文高手，莫以时文眼看他』，金圣叹得此知己，扬眉吐气，激动得『感而泣下，因向北叩首』。</p>
<p>一个社会的逆子，却对最高统治者的赏识感激涕零，这让历代批评家崩溃。</p>
<p>所有人都以为金圣叹从此将平步青云，包括金圣叹自己都很傻很天真地幻想为皇帝讲经的场面。他以为统治者已经拥有足够的智慧和胸怀包容他带有『异端』色彩的言论，而事实上这可能是顺治一时心血来潮表演一下自己的大度而已。</p>
<p>金圣叹的政治抱负还没来得及施展就遭遇了『哭庙案』——吴县县长任维初把赈灾粮拿出来高价卖给百姓，激起民怨，一帮知识分子借顺治驾崩的契机，组织反贪游行，在文庙中先圣牌位前痛哭流涕，发泄自己的不满。当朝者的处理方式是，将包括金圣叹在内的18位核心人物『斩立决』。当金圣叹刚刚决定成为朝廷的拥戴者，就当即被作为朝廷的叛逆者处死，这是怎样的笑话和讽刺？</p>
<p>鲁迅说金圣叹的死，是因为他早被官绅们认为是坏货的缘故。在古代，知识阶层可以享有同性恋、狎妓、吸毒等各种自由，但不可以对政治秩序说三道四。祢衡击鼓骂曹操，嵇康要『非汤武而薄周礼』，李贽则说什么男女平等、理学吃人，金圣叹拿人生当实验，挑战当权者底线，但其实这些游戏不太好玩。清朝政府将金圣叹的死当成一项热身，之后直接实施文字狱，连犯上作乱的标签都懒得贴。</p>
<p>社会表彰活着的顺从者和死去的叛逆者，而文人不过是时代的点缀而已。金圣叹将死之时，才真正地意识到这一点，他借着死亡做出最后一场表演。据南京狱警的最后一次爆料说，金圣叹的头被砍下来，脸上还挂着微笑。</p>
<p>《CMM报》时事评论员写道，这笑容具有后现代结构主义特征，表达了金圣叹对这个荒诞世界的超然和拒绝。</p>
<h3 id="完"><a href="#完" class="headerlink" title="完"></a>完</h3><blockquote>
<p>这篇文章也是我高中以来除了《郑智与谭望嵩传》和《明朝那些事儿》之后，看过的最有意思的一篇文章。</p>
<p>作者的才气文笔还有文字的驾驭能力都好的没话说，所以我愿意用一下午的时间逐字逐句的打出来和有识之士分享分享。</p>
<p>欲想知金圣叹其人，请移步当当网或卓越网，搜索「金圣叹全集」慢慢观摩。但愚以为维基google百度皆可，因为这篇文章里，他只是个皮偶。重要的是灯光下投射的影子。</p>
<p>祝君阅读愉快。</p>
<p>最后感谢作者咪蒙，提供了一个有意思的故事。</p>
<p>——豆瓣·胡多多</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.xueshiboke.com/zb_users/upload/2016/09/201609221474503508138153.jpg&quot; alt=&quot;金圣叹&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【来自《独唱团》第一辑。BY：&lt;strong&gt;咪蒙&lt;/strong&gt;】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;广告x金圣叹&quot;&gt;&lt;a href=&quot;#广告x金圣叹&quot; class=&quot;headerlink&quot; title=&quot;广告x金圣叹&quot;&gt;&lt;/a&gt;广告x金圣叹&lt;/h3&gt;&lt;p&gt;他是17世纪的精神先锋。&lt;/p&gt;
&lt;p&gt;他的使命是惊世骇俗。&lt;/p&gt;
&lt;p&gt;乱世中，他最达观。浊世里，他最清醒。&lt;/p&gt;
&lt;p&gt;他是清醒的酒鬼，玩世不恭的才子，爱吃狗肉的佛教徒，精通哲学的神棍，恶毒的文艺批评家，视规则如狗屎的学者，反礼教的孝子慈父。&lt;/p&gt;
&lt;p&gt;他属于中国历代文人中有趣、任性又精神分裂的稀有物种。&lt;/p&gt;
&lt;h3 id=&quot;狱警x金圣叹&quot;&gt;&lt;a href=&quot;#狱警x金圣叹&quot; class=&quot;headerlink&quot; title=&quot;狱警x金圣叹&quot;&gt;&lt;/a&gt;狱警x金圣叹&lt;/h3&gt;&lt;p&gt;『我是南京监狱狱警。今天金圣叹被分到我的辖区了。』&lt;/p&gt;
&lt;p&gt;这是1661年中秋节前夕天涯社区最红爆料贴。楼主ID为『《越狱》是部脑残剧』。&lt;/p&gt;
&lt;p&gt;『金圣叹很难搞。一会摆出莫测高深的装B样，据说在想「半夜两更半」的下联；一会儿又很亢奋地跟我讨论一线城市房价。丫那小身板，瘦骨嶙峋的，想打他吧，最近全国监狱搞形象工程，查出来要扣老子奖金。不过哥还是赚到了，提前买了100本他的书让他签名，感兴趣的朋友请光临我的淘宝网店。金圣叹临死前的绝笔，全球限量发行。哥很低调，拒绝人肉！』&lt;/p&gt;
&lt;p&gt;当天各大媒体、门户网站集体陷入癫狂状态。狗仔24小时在监狱周边蹲点守候最新八卦。没办法，金圣叹啊，年度作家首富、出版界大腕、星象学家、预言大师，连续5年当选全国娱记最喜爱的名人NO.1——作为一个偶像派『文化超男』，他时不时登上娱乐头条，标题都很重口味。比如『和花美男十指相扣，金圣叹是gay？』『金圣叹携表妹海边度假72小时，疑似近亲乱伦』。作为『清朝第一博主』，金圣叹的博客篇篇有爆点。他向历代文化名人开炮，骂刘辰翁是奴才，苏轼没有大局观，晏殊的才气如『痴狗咬块』。他列出人生最爽33件事，件件恶趣味：私密部位长疮，关起门用热水洗一洗泡一泡，爽；看到别人放风筝时线突然断了，爽；听说有人刚死了，一打听，原来是城中第一心机鬼，爽翻天！&lt;/p&gt;
&lt;p&gt;而现在，最轰动的新闻是，金圣叹因涉嫌参与聚众闹事被最高法院判了死刑。公检法全面封锁消息，居然有想钱想疯了的狱警出来爆料，媒体们无法淡定。&lt;/p&gt;
&lt;p&gt;第二篇爆料贴又引发网络瘫痪。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂文" scheme="http://kchen.cc/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
</feed>
